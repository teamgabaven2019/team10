"use strict";angular.module("monacaIDE").directive("askUpdateOldProjectDialog",["ProjectFactory","Dialog","PubSub","Constant","gettextCatalog",function(ProjectFactory,Dialog,PubSub,Constant,gettextCatalog){return{restrict:"E",link:function(scope,element,attrs){ProjectFactory.loading.then(function(){ProjectFactory.getCordovaVersion()<6&&Dialog.alert(gettextCatalog.getString("For Cordova 5.x and earlier projects, The support for build and application settings has been discontinued. Please update the project.")).then(function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"cordovapluginsettings",title:gettextCatalog.getString("Cordova Plugin Settings"),icon:"settings",templateUrl:"build/CordovaPlugins.html"}})})})}}}]),angular.module("monacaIDE").directive("placeholder",["gettextCatalog",function(gettextCatalog){return{restrict:"A",link:function(scope,element,attrs){element.attr("placeholder",gettextCatalog.getString(attrs.placeholder))}}}]).directive("alt",["gettextCatalog",function(gettextCatalog){return{restrict:"A",link:function(scope,element,attrs){element.attr("alt",gettextCatalog.getString(attrs.alt))}}}]).directive("title",["gettextCatalog",function(gettextCatalog){return{restrict:"A",link:function(scope,element,attrs){element.attr("title",gettextCatalog.getString(attrs.title))}}}]).directive("s-loading-text",["gettextCatalog",function(gettextCatalog){return{restrict:"A",link:function(scope,element,attrs){element.attr("s-loading-text",gettextCatalog.getString(attrs["s-loading-text"]))}}}]),angular.module("monacaIDE").directive("devicePreviewer",["$sce","$httpParamSerializer","PubSub","Constant","gettextCatalog","TerminalFactory","$http","$interval","ProjectFactory","CommonFunctionService",function($sce,$httpParamSerializer,PubSub,Constant,gettextCatalog,TerminalFactory,$http,$interval,ProjectFactory,CommonFunctionService){return{restrict:"E",scope:{previewerId:"="},template:'\n        <iframe title="{{previewerId}}" ng-if="!safeMode" ng-src="{{url}}"><p translate>Your browser does not support iframes.</p></iframe>\n        <div ng-if="safeMode" style="height: 100%; display: flex; justify-content: center; align-items: center;"><p translate>The previewer is not available in safe mode.</p></div>\n      ',link:function($scope,element){element.addClass("previewer-view");const baseUrl=`/preview/${window.config.projectId}?id=${$scope.previewerId}&terminal=${CommonFunctionService.isTerminalService()}`,staticPreviewUrl=window.config.staticPreviewUrl;var checkPreviewUrlInterval;$scope.previewUrl=staticPreviewUrl,$scope.url="",$scope.safeMode=!1,$scope.onDetachBtn=(()=>{const params=$httpParamSerializer({width:640,height:480,left:100,top:100,status:"no",location:"no",scrollbars:"no",toolbar:"no",personalbar:"no",menubar:"no"}).replace("&",",");window.open(`${baseUrl}&previewUrl=${$scope.previewUrl}`,"monaca_preview_window",params),PubSub.publish(Constant.EVENT.SEND_ANALYTICS,{category:Constant.ANALYTICS.CATEGORY,action:Constant.ANALYTICS.ACTION.OPEN,label:Constant.ANALYTICS.LABEL.MENU,value:Constant.ANALYTICS.VALUE.PREVIEW}),PubSub.publish(Constant.EVENT.TOGGLE_PREVIEWER_VIEW,{componentState:{id:$scope.previewerId},open:!1}),$scope.wasDetached=!0});var setStaticPreviewUrl=()=>{PubSub.publish(Constant.EVENT.PREVIEWER_VIEW_URL_CHANGED,{url:staticPreviewUrl}),$scope.url=$sce.trustAsResourceUrl(`${baseUrl}&is_attach=1&previewUrl=${staticPreviewUrl}`)},checkPreviewUrl=()=>{if(!CommonFunctionService.isTerminalService())return;if(!TerminalFactory.isNetworkStable())return;let previewUrl=TerminalFactory.getPreviewUrl();previewUrl?$http.get(previewUrl,{withCredentials:!0}).then(function(response){response&&200===response.status?($scope.previewUrl=previewUrl,$scope.url=$sce.trustAsResourceUrl(`${baseUrl}&is_attach=1&previewUrl=${$scope.previewUrl}`),$scope.validPreviewUrl=!0):$scope.validPreviewUrl=!1}).catch(function(){$scope.validPreviewUrl=!1}):$scope.validPreviewUrl=!1};ProjectFactory.hasPreviewerService()?(setStaticPreviewUrl(),CommonFunctionService.isTerminalService()&&(checkPreviewUrl(),checkPreviewUrlInterval=$interval(()=>{$scope.validPreviewUrl||checkPreviewUrl()},5e3))):$scope.safeMode=!0,PubSub.subscribe(Constant.EVENT.PREVIEWER_VIEW_URL_CHANGED,function(data){checkPreviewUrl()}),PubSub.subscribe(Constant.EVENT.PREVIEWER_VIEW_URL_FAILED,function(data){setStaticPreviewUrl(),checkPreviewUrl()});const destroySubId=PubSub.subscribe(Constant.EVENT.VIEW_CLOSED,opts=>{if(opts.componentId===element.parent().attr("id")){if(!$scope.wasDetached){const localStorageKey=`${window.config.projectId}_mn-gl-${$scope.previewerId}_previewer`;localStorage.removeItem(localStorageKey)}(checkPreviewUrlInterval||angular.isDefined(checkPreviewUrlInterval))&&($interval.cancel(checkPreviewUrlInterval),checkPreviewUrlInterval=void 0),PubSub.unsubscribe(destroySubId),$scope.$destroy()}})}}}]),angular.module("monacaIDE").directive("editorTab",["Constant","MonacaEditorFactory","EditorTabService","GoldenLayoutService","PubSub","gettextCatalog","CommonFunctionService",function(Constant,MonacaEditorFactory,EditorTabService,GoldenLayoutService,PubSub,gettextCatalog,CommonFunctionService){return{restrict:"E",scope:{content:"=",isTab:"="},link(scope,element,attrs){const contextmenuItems=[{label:gettextCatalog.getString("Cut"),click:()=>PubSub.publish(Constant.EVENT.CUT_FROM_ACTIVE_EDITOR_TAB),shortcutKey:Constant.SHORTCUT_KEY.CUT[window.config.os]},{label:gettextCatalog.getString("Copy"),click:()=>PubSub.publish(Constant.EVENT.COPY_FROM_ACTIVE_EDITOR_TAB),shortcutKey:Constant.SHORTCUT_KEY.COPY[window.config.os]},{label:gettextCatalog.getString("Paste"),click:()=>PubSub.publish(Constant.EVENT.PASTE_TO_ACTIVE_EDITOR_TAB),shortcutKey:Constant.SHORTCUT_KEY.PASTE[window.config.os]},{label:"separator"},{label:gettextCatalog.getString("Command Palette"),shortcutKey:Constant.SHORTCUT_KEY.COMMAND_PALETTE[window.config.os],click:()=>PubSub.publish(Constant.EVENT.COMMAND_PALETTE_ACTIVE_EDITOR_TAB)},{label:gettextCatalog.getString("Keyboard Shortcuts"),icon:"m-icon-shortcuts",click:()=>window.open(`${CommonFunctionService.docs_url()}/products_guide/monaca_ide/editor/`)},{label:"separator"},{label:gettextCatalog.getString("Format Document"),shortcutKey:Constant.SHORTCUT_KEY.FORMAT_DOCUMENT[window.config.os],click:()=>PubSub.publish(Constant.EVENT.FORMAT_DOCUMENT_ACTIVE_EDITOR_TAB)},{label:gettextCatalog.getString("Toggle Line Comment"),shortcutKey:Constant.SHORTCUT_KEY.COMMENT_OUT[window.config.os],click:()=>PubSub.publish(Constant.EVENT.TOGGLE_COMMENT_EDITOR_TAB)},{label:gettextCatalog.getString("Increase Font Size"),shortcutKey:Constant.SHORTCUT_KEY.INCREASE_FONT_SIZE[window.config.os],disabled:this.is_edit_menu_disabled,click:()=>PubSub.publish(Constant.EVENT.INCREASE_FONT_SIZE_ACTIVE_EDITOR_TAB)},{label:gettextCatalog.getString("Decrease Font Size"),shortcutKey:Constant.SHORTCUT_KEY.DECREASE_FONT_SIZE[window.config.os],click:()=>PubSub.publish(Constant.EVENT.DECREASE_FONT_SIZE_ACTIVE_EDITOR_TAB)}];if(element[0].addEventListener("contextmenu",function(e){if(scope.contextmenuOpen)scope.contextmenuContainer.css({left:e.clientX,top:e.clientY});else{scope.contextmenuContainer=$(`<div style="position: absolute; left: ${e.clientX}px; top: ${e.clientY}px;"><ul class="editor-context-dropdown"></ul></div>`),$(document.body).append(scope.contextmenuContainer);const menu=scope.contextmenuContainer.find(".editor-context-dropdown");contextmenuItems.map(item=>{let menuItem;menuItem="separator"===item.label?$("<li><hr/></li>"):$(`<li class="editor-context"><span><i class="m-icon ${item.icon?item.icon:"m-icon-none"}"></i><span>${item.label}</span></span><span class="shortcut">${item.shortcutKey||""}</span></li>`),menu.append(menuItem),menuItem.click(()=>item.click())});const removeContextMenu=e=>{scope.contextmenuContainer.remove(),scope.contextmenuOpen=!1,document.removeEventListener("click",removeContextMenu)};document.addEventListener("click",removeContextMenu),scope.contextmenuOpen=!0}e.preventDefault()}),scope.updateEditorConfiguration=(settings=>{settings||(settings=MonacaEditorFactory.getSettings()),scope.editor.setSettings(settings)}),scope.getComponentId=(()=>element.parent().attr("id")),scope.addEventListeners=(()=>{scope._pubsubTokens=[PubSub.subscribe(Constant.EVENT.VIEW_SHOWN,opts=>{scope.editor&&scope.getComponentId()===opts.componentId&&scope.setTabCleanState()}),PubSub.subscribe(Constant.EVENT.UNDO_ACTIVE_EDITOR_TAB,scope.onUndo),PubSub.subscribe(Constant.EVENT.REDO_ACTIVE_EDITOR_TAB,scope.onRedo),PubSub.subscribe(Constant.EVENT.SAVE_ACTIVE_EDITOR_TAB,scope.onSave),PubSub.subscribe(Constant.EVENT.SAVE_ALL_EDITOR_TAB,scope.onSaveAll),PubSub.subscribe(Constant.EVENT.TOGGLE_COMMENT_EDITOR_TAB,scope.toggleComment),PubSub.subscribe(Constant.EVENT.FOCUS_SEARCH_BOX,scope.onSearch),PubSub.subscribe(Constant.EVENT.SEARCH_NEXT,scope.onSearchNext),PubSub.subscribe(Constant.EVENT.SEARCH_PREVIOUS,scope.onSearchPrev),PubSub.subscribe(Constant.EVENT.REPLACE_TEXT_EDITOR_TAB,scope.onReplace),PubSub.subscribe(Constant.EVENT.INCREASE_FONT_SIZE_ACTIVE_EDITOR_TAB,scope.increaseFontSize),PubSub.subscribe(Constant.EVENT.DECREASE_FONT_SIZE_ACTIVE_EDITOR_TAB,scope.decreaseFontSize),PubSub.subscribe(Constant.EVENT.FORMAT_DOCUMENT_ACTIVE_EDITOR_TAB,scope.formatDocument),PubSub.subscribe(Constant.EVENT.COMMAND_PALETTE_ACTIVE_EDITOR_TAB,scope.openCommandPalette),PubSub.subscribe(Constant.EVENT.FOCUS_EDITOR,scope.focus),PubSub.subscribe(Constant.EVENT.PASTE_TO_ACTIVE_EDITOR_TAB,scope.paste),PubSub.subscribe(Constant.EVENT.COPY_FROM_ACTIVE_EDITOR_TAB,scope.copy),PubSub.subscribe(Constant.EVENT.CUT_FROM_ACTIVE_EDITOR_TAB,scope.cut),PubSub.subscribe(Constant.EVENT.VIEW_RESIZE,scope.resize),PubSub.subscribe(Constant.EVENT.EDITOR_CONFIG_UPDATED,scope.updateEditorConfiguration)],scope.editor.onChange(scope.setTabCleanState),scope.editor.onFocus(()=>{PubSub.publish(Constant.EVENT.SET_ACTIVE_EDITOR_TAB,{id:scope.getComponentId()})})}),scope.setTabCleanState=(()=>{GoldenLayoutService.setComponentCleanState(scope.getComponentId(),{isClean:scope.editor.isClean(),canUndo:scope.editor.canUndo(),canRedo:scope.editor.canRedo()})}),scope.isActiveTab=(()=>EditorTabService.isActiveTab(scope.getComponentId())),scope.onUndo=(()=>{scope.isActiveTab()&&scope.editor.undo()}),scope.onRedo=(()=>{scope.isActiveTab()&&scope.editor.redo()}),scope.onSave=(()=>{scope.isActiveTab()&&!scope.editor.isClean()&&scope._doSave()}),scope.onSaveAll=(()=>{GoldenLayoutService.areThereUncleanComponents()&&scope._doSave()}),scope._doSave=(()=>{EditorTabService.saveFile(attrs.file,scope.editor.getCode()).then(isSuccess=>{scope.editor.markAsClean(),scope.setTabCleanState()}).catch(err=>{PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:`${gettextCatalog.getString("File failed to save")}: ${attrs.file} - ${err.message}`})})}),scope.toggleComment=(()=>{scope.isActiveTab()&&scope.editor.toggleComment()}),scope.onSearch=(()=>{scope.isActiveTab()&&scope.editor.find()}),scope.onSearchNext=(()=>{scope.isActiveTab()&&scope.editor.findNext()}),scope.onSearchPrev=(()=>{scope.isActiveTab()&&scope.editor.findPrev()}),scope.onReplace=(()=>{scope.isActiveTab()&&scope.editor.replace()}),scope.increaseFontSize=(()=>{scope.isActiveTab()&&scope.editor.increaseFontSize()}),scope.decreaseFontSize=(()=>{scope.isActiveTab()&&scope.editor.decreaseFontSize()}),scope.formatDocument=(()=>{scope.isActiveTab()&&scope.editor.formatDocument()}),scope.openCommandPalette=(()=>{scope.isActiveTab()&&scope.editor.openCommandPalette()}),scope.focus=(()=>{scope.isActiveTab()&&scope.editor.focus()}),scope.paste=(()=>{scope.isActiveTab()&&scope.editor.paste()}),scope.copy=(()=>{scope.isActiveTab()&&scope.editor.copy()}),scope.cut=(()=>{scope.isActiveTab()&&scope.editor.cut()}),scope.resize=(event=>{"editor-view"===event.componentName&&$(element).parents(".lm_stack")[0]===$(`#${event.componentId}`).parents(".lm_stack")[0]&&scope.editor.layout({width:event.containerWidth,height:event.containerHeight})}),scope.unsubEvents=(()=>{scope._pubsubTokens&&scope._pubsubTokens.length&&scope._pubsubTokens.forEach(token=>PubSub.unsubscribe(token))}),scope.getKeyMapping=(()=>({save:scope.onSave})),scope.setupEditor=(content=>{const settings=Object.assign({},{fileName:attrs.file,value:content||"",showTrailingSpace:!1,_keyMapping:scope.getKeyMapping()},MonacaEditorFactory.getSettings());element.css({display:"block",height:"100%",width:"100%"}),MonacaEditorFactory.create(element[0],settings).then(editor=>{scope.editor=editor,scope.updateEditorConfiguration(),!1!==scope.isTab&&scope.addEventListeners()})}),scope.content?scope.setupEditor(scope.content):EditorTabService.loadFile(attrs.file).then(resp=>scope.setupEditor(resp.body)).catch(()=>{PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:attrs.file+gettextCatalog.getString(" is invalid.")})}),!1!==scope.isTab){const destroySubId=PubSub.subscribe(Constant.EVENT.VIEW_CLOSED,opts=>{opts.componentId===scope.getComponentId()&&(PubSub.unsubscribe(destroySubId),scope.unsubEvents(),scope.$destroy())})}}}}]),angular.module("monacaIDE").directive("fileUpload",function(){return{restrict:"A",scope:{fileUpload:"="},link:function($scope,element,attrs){element.bind("change",function(event){event.stopPropagation(),event.preventDefault(),$scope.fileUpload(element[0].files[0]).then(function(){element.val(null)},function(){element.val(null)})})}}}).directive("fileread",[function(){return{scope:{fileread:"="},link:function(scope,element,attributes){element.bind("change",function(changeEvent){scope.$apply(function(){scope.fileread=changeEvent.target.files[0]})})}}}]),angular.module("monacaIDE").directive("ideGoldenLayout",["Constant","GoldenLayoutService","PubSub","gettextCatalog","UserFactory","$uibModal","$window","CommonFunctionService","ProjectFactory",function(Constant,GoldenLayoutService,PubSub,gettextCatalog,UserFactory,$modal,$window,CommonFunctionService,ProjectFactory){return{restrict:"A",link:function($scope,element){$scope.resetLayout=(()=>{window.confirm(gettextCatalog.getString("Do you want to reset the layout? This will reload the IDE."))&&GoldenLayoutService.resetLayout()}),$scope.showWelcomeMessage=(()=>GoldenLayoutService.isInitialised()&&!GoldenLayoutService.areViewsOpen()),GoldenLayoutService.init(element),PubSub.subscribe(Constant.EVENT.RESET_LAYOUT,$scope.resetLayout),document.addEventListener("keydown",event=>{event.altKey&&87===event.keyCode?event.shiftKey&&!event.ctrlKey?GoldenLayoutService.closeTabsInStack($scope.activeStack,"all"):!event.shiftKey&&event.ctrlKey?GoldenLayoutService.closeTabsInStack($scope.activeStack,"other"):GoldenLayoutService.closeTabsInStack($scope.activeStack,"active"):event.altKey&&(219===event.keyCode?GoldenLayoutService.selectPreviousTabInStack($scope.activeStack):221===event.keyCode&&GoldenLayoutService.selectNextTabInStack($scope.activeStack))});const $element=$(element),$tabAddDropdownContainer=$element.find(".tab-add-dropdown-container"),$tabCloseDropdownContainer=$element.find(".tab-close-dropdown-container"),debuggerDropDownItem={id:"tab-add-debugger",icon:"m-icon-new-debugger",title:gettextCatalog.getString("New Debugger"),shouldDisable:()=>{const componentId=GoldenLayoutService.getComponentId(Constant.VIEW.DEBUGGER_VIEW);return!!GoldenLayoutService.getComponentInstanceById(componentId)},onClick:tabBar=>PubSub.publish(Constant.EVENT.TOGGLE_DEBUGGER_VIEW,{open:!0,tabBar:tabBar})},previewerDropDownItem={id:"tab-add-previewer",icon:"m-icon-new-previewer",title:gettextCatalog.getString("New Previewer"),onClick:tabBar=>{ProjectFactory.hasPreviewerService()?PubSub.publish(Constant.EVENT.TOGGLE_PREVIEWER_VIEW,{open:!0,tabBar:tabBar,componentState:{id:Math.round(Math.random()*Number.MAX_SAFE_INTEGER)}}):$modal.open({templateUrl:"commonDialogs/AlertDialog.html",controller:"AlertController",windowClass:"confirm-window",resolve:{title:function(){return gettextCatalog.getString("New Previewer")},message:function(){return gettextCatalog.getString("<p>The previewer is not available in safe mode.</p>")}}})}},terminalDropDownItem={id:"tab-add-terminal",icon:"m-icon-new-terminal",title:gettextCatalog.getString("New Terminal"),onClick:tabBar=>{UserFactory.canCreateNewTerminal()?PubSub.publish(Constant.EVENT.TOGGLE_TERMINAL_VIEW,{open:!0,tabBar:tabBar,componentState:{id:"terminal_"+Math.random().toString(36).substring(7),templateUrl:"terminal.html"}}):$modal.open({templateUrl:"commonDialogs/AlertDialog.html",controller:"AlertController",windowClass:"confirm-window",resolve:{title:function(){return gettextCatalog.getString("New Terminal")},message:function(){return gettextCatalog.getString("<p>Only paid users can use this function. Please upgrade your subscription plan.</p>")}}})}};let addTabDropdownItems=[];ProjectFactory.hasDebuggerService()&&addTabDropdownItems.push(debuggerDropDownItem),ProjectFactory.hasPreviewerService()&&addTabDropdownItems.push(previewerDropDownItem),CommonFunctionService.isTerminalService()&&addTabDropdownItems.push(terminalDropDownItem);const closeTabDropdownItems=[{id:"tab-close-tabs",icon:"m-icon-close-all-tabs",title:gettextCatalog.getString("Close All Tabs"),onClick:tabBar=>GoldenLayoutService.closeAllTabsWindow(tabBar)},{id:"tab-close-other",title:gettextCatalog.getString("Close Other Tabs"),onClick:tabBar=>GoldenLayoutService.closeOtherTabsWindow(tabBar)}];var hiddenTabItems=[];$scope.onStackCreated=(opts=>{const stack=opts.stack;addTabDropdownItems&&addTabDropdownItems.length>=1&&!GoldenLayoutService._isAloneProjectViewStack(stack)&&(stack.header.tabsContainer.append('<button aria-label="addTabButton" class="add-tab-button"></button>'),stack.header.controlsContainer.prepend('<button aria-label="addTabButton" class="close-tab-button"></button>')),stack.element.click(function(){$scope.activeStack=stack})}),$scope.generateNewAddTabDropdownHtml=(()=>addTabDropdownItems.map(menuItem=>{const isDisabled="function"==typeof menuItem.shouldDisable&&menuItem.shouldDisable();return`<li id="${menuItem.id}" class="tab-add ${isDisabled?"disabled":""}"><i class="m-icon ${menuItem.icon||"m-icon-none"}"></i><span>${menuItem.title}</span></li>`}).join("")),$scope.generateNewCloseTabDropdownHtml=(()=>hiddenTabItems.concat(closeTabDropdownItems).map(menuItem=>{if("separator"===menuItem.id)return"<li><hr/></li>";const isDisabled="function"==typeof menuItem.shouldDisable&&menuItem.shouldDisable();return`<li id="${menuItem.id}" class="tab-close ${isDisabled?"disabled":""}"><i class="m-icon ${menuItem.icon||"m-icon-none"}"></i><span>${menuItem.title}</span></li>`}).join("")),PubSub.subscribe(Constant.EVENT.GL_STACK_CREATED,$scope.onStackCreated),$element.on("click",".add-tab-button",ev=>{const bounds=ev.currentTarget.getBoundingClientRect(),$dropdown=$tabAddDropdownContainer.find(".tab-add-dropdown");$scope.activeTabBar=ev.currentTarget,$tabAddDropdownContainer.toggleClass("open"),$dropdown.html($scope.generateNewAddTabDropdownHtml()).css({top:bounds.bottom,left:Math.min(bounds.left,window.innerWidth-$dropdown.width()-10)})}),$element.on("click",".close-tab-button",ev=>{const bounds=ev.currentTarget.getBoundingClientRect(),$dropdown=$tabCloseDropdownContainer.find(".tab-close-dropdown");$scope.activeTabBar=ev.currentTarget,$tabCloseDropdownContainer.toggleClass("open"),hiddenTabItems=[];for(var hiddenItems=GoldenLayoutService.getHiddenItems($scope.activeTabBar),i=0;i<hiddenItems.length;i++){const item=hiddenItems[i];hiddenTabItems.push({id:`hidden-tab-item-${i}`,title:item.title,icon:`nomask jstree ${item.icon}`,componentState:item.componentState,onClick:(tabBar,componentState)=>{componentState?PubSub.publish(Constant.EVENT.TOGGLE_EDITOR_VIEW,{open:!0,componentState:componentState}):PubSub.publish(Constant.EVENT.TOGGLE_DEBUGGER_VIEW,{open:!0,tabBar:tabBar})}})}hiddenTabItems.length>0&&hiddenTabItems.push({id:"separator"}),$dropdown.html($scope.generateNewCloseTabDropdownHtml()).css({top:bounds.bottom,left:Math.min(bounds.left,window.innerWidth-$dropdown.width()-10),maxHeight:`calc(100% - ${bounds.bottom+20}px`})}),$tabAddDropdownContainer.on("click",".tab-add",ev=>{if($(ev.currentTarget).hasClass("disabled"))return;const id=ev.currentTarget.id;addTabDropdownItems.find(item=>item.id===id).onClick($scope.activeTabBar),$tabAddDropdownContainer.removeClass("open")}).on("click",ev=>{ev.target===ev.currentTarget&&$(ev.currentTarget).removeClass("open")}),$tabCloseDropdownContainer.on("click",".tab-close",ev=>{if($(ev.currentTarget).hasClass("disabled"))return;const id=ev.currentTarget.id,menuItem=hiddenTabItems.concat(closeTabDropdownItems).find(item=>item.id===id);menuItem.onClick($scope.activeTabBar,menuItem.componentState),$tabCloseDropdownContainer.removeClass("open")}).on("click",ev=>{ev.target===ev.currentTarget&&$(ev.currentTarget).removeClass("open")})}}}]),angular.module("monacaIDE").directive("jsTree",["PubSub","Constant","$http","FileUtilityFactory","ProjectService","$q",function(PubSub,Constant,$http,FileUtilityFactory,ProjectService,$q){var treeDir={restrict:"EA",fetchResource:function(url,cb){return $http.get(url).then(function(data){cb&&cb(data.data)})},documentEventList:{},convertToTreeModel:function(rawData){var safeKey="";return Object.keys(rawData).map(function(key){safeKey=FileUtilityFactory.escapeFileName(key);var res=Object.assign({},rawData[key],{id:safeKey,text:safeKey.split("/").pop(),parent:safeKey.split("/").slice(0,-1).join("/")||"#"});return"dir"===rawData[key].type&&(res.state={opened:!1}),res})||[]},managePlugins:function(s,e,a,config){if(a.treePlugins){if(config.plugins=a.treePlugins.split(","),config.core=config.core||{},config.core.check_callback=config.core.check_callback||!0,config.plugins.indexOf("state")>=0&&(config.state=config.state||{},config.state.key=a.treeStateKey),config.plugins.indexOf("search")>=0){var to=!1;"ng-tree-search"!==e.next().attr("class")&&e.after('<input type="text" placeholder="Search Tree" class="ng-tree-search"/>').next().on("keyup",function(ev){to&&clearTimeout(to),to=setTimeout(function(){treeDir.tree.jstree(!0).search(ev.target.value)},250)})}config.plugins.indexOf("checkbox")>=0&&(config.checkbox=config.checkbox||{},config.checkbox.keep_selected_style=!1),config.plugins.indexOf("contextmenu")>=0&&(a.treeContextmenu||a.treeContextmenuaction)&&(config.contextmenu=config.contextmenu||{},a.treeContextmenuaction?config.contextmenu.items=function(e){return s.$eval(a.treeContextmenuaction)(e)}:config.contextmenu.items=function(){return s[a.treeContextmenu]}),config.plugins.indexOf("types")>=0&&a.treeTypes&&(config.types=s[a.treeTypes]),config.plugins.indexOf("dnd")>=0&&(a.treeDnd&&(config.dnd=s[a.treeDnd]),config.dnd.copy=!1)}return config.plugins.push("sort"),config},manageEvents:function(s,e,a){if(treeDir.documentEventList={},a.treeEvents){for(var key in s[a.treeEvents])key.indexOf("vakata")>-1?(treeDir.documentEventList[key]=s[a.treeEvents][key],$(document).on(key,s[a.treeEvents][key])):treeDir.tree.on(key+".jstree",s[a.treeEvents][key]);null===JSON.parse(localStorage.getItem(a.treeStateKey))&&treeDir.tree.on("loaded.jstree",function(){$q.when(ProjectService.getIsTranspile(window.config.projectId)).then(function(resp){resp||treeDir.tree.jstree(!0).open_node(document.querySelector("[id='/www']"))})})}},link:function(s,e,a){$(function(){var config={dnd:{check_while_dragging:!1},core:{}};a.treeCore&&(config.core=$.extend(config.core,s[a.treeCore])),a.treeData=a.treeData?a.treeData.toLowerCase():"",a.treeSrc=a.treeSrc?a.treeSrc.toLowerCase():"","html"===a.treeData?treeDir.fetchResource(a.treeSrc,function(data){e.html(data),treeDir.init(s,e,a,config)}):"json"===a.treeData?treeDir.fetchResource(a.treeSrc,function(data){config.core.data=treeDir.convertToTreeModel(data),treeDir.init(s,e,a,config)}):"scope"===a.treeData?(s.$watch(a.resetCounter,function(n,o){if(n){for(var key in config.core.data=treeDir.convertToTreeModel(s[a.treeModel]),treeDir.documentEventList)$(document).off(key);$(e).jstree("destroy"),treeDir.init(s,e,a,config)}},!0),config.core.data=treeDir.convertToTreeModel(s[a.treeModel]),treeDir.init(s,e,a,config)):a.treeAjax&&(config.core.data={url:a.treeAjax,xhrFields:{withCredentials:!0},data:function(node){return{path:"#"!==node.id?node.id:"/"}},dataFilter:function(nodes){let object=JSON.parse(nodes);if(object.result)return JSON.stringify(treeDir.convertToTreeModel(object.result.items||{}))},error:function(jqXHR,textStatus,errorThrown){PubSub.publish(Constant.EVENT.TREE_ERROR,errorThrown)}},treeDir.init(s,e,a,config))})},init:function(s,e,a,config){treeDir.managePlugins(s,e,a,config),config.core.multiple=!1,config.core.dblclick_toggle=!1,config.sort=function(a,b){var nodeA=this.get_node(a),nodeB=this.get_node(b),typeA=nodeA.original.type,typeB=nodeB.original.type,textA=nodeA.text.toLowerCase(),textB=nodeB.text.toLowerCase(),result=0;switch(typeA){case"dir":result="dir"!==typeB?-1:textA>textB?1:-1;break;default:result=typeB===typeA?textA>textB?1:-1:1}return result},this.tree=$(e).jstree(config),treeDir.manageEvents(s,e,a)}};return treeDir}]),angular.module("monacaIDE").directive("ngEnter",function(){return{restrict:"A",scope:{action:"&ngEnter"},link:function(scope,element,attr){element.bind("keydown keypress",function(evt){13===evt.which&&(scope.$apply(scope.action),evt.preventDefault())})}}}),angular.module("monacaIDE").directive("showTail",function(){return function(scope,elem,attr){scope.$watch(function(){return elem[0].value},function(e){elem[0].scrollTop=elem[0].scrollHeight})}}),angular.module("monacaIDE").directive("simpleDrop",function(){return{restrict:"A",scope:{simpleDrop:"="},link:function($scope,element,attrs){element.bind("drop",function(event){event.stopPropagation(),event.preventDefault(),$scope.simpleDrop(event)}),element.bind("dragover",function(event){event.stopPropagation(),event.preventDefault()})}}}),angular.module("monacaIDE").directive("spinner",["gettextCatalog",function(gettextCatalog){var defaultSettings={lines:11,length:0,width:14,radius:38,scale:.3,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner-loading",top:"44%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};return{template:function(element,attr){var loadingTextHtml="";return attr.sLoadingText&&(loadingTextHtml='<div class="spinner-loading-text">'+gettextCatalog.getString(attr.sLoadingText)+"</div>"),"modal"===attr.sType?'<div style="height: 40px; padding: 5px;">'+loadingTextHtml+"</div>":"spinner-button"===attr.sType?'<div style="padding: 0 3px 0 16px;"></div>':"<div>"+loadingTextHtml+"</div>"},link:function(scope,element,attr){var overrideSettings={};overrideSettings=attr.sType&&"modal"===attr.sType?{color:"#000",scale:.12,className:"spinner-loading-small",position:"relative",top:"24%"}:attr.sType&&"spinner-button"===attr.sType?{color:"#000",scale:.1,className:"spinner-loading-small",position:"relative",left:"100%",zIndex:0}:attr.sType&&"white"===attr.sType?{color:"#fff"}:{color:"#000"},new Spinner(angular.extend(defaultSettings,overrideSettings)).spin(element[0].querySelector("div"))}}}]),angular.module("monacaIDE").directive("textSpinner",["$compile",function($compile){var defaultSettings={lines:11,length:36,width:14,radius:38,scale:.3,corners:.8,color:"#333",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner-loading",top:"44%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};return{template:function(element,attr){var title=attr.title?attr.title:"",type=attr.type?attr.type:"dots";return"spin"===type?`<div><p>${title}</p><div class='spinner'></div></div>`:`<div><p>${title}</p><span class="loading ${type}"></span></div>`},link:function(scope,element,attr){angular.element(element[0].querySelector("div")).css("height","100%"),angular.element(element[0].querySelector("div")).css("display","flex"),angular.element(element[0].querySelector("div")).css("flex-direction","row"),angular.element(element[0].querySelector("div")).css("flex-wrap","wrap"),angular.element(element[0].querySelector("div")).css("justify-content","center"),angular.element(element[0].querySelector("div")).css("align-items","center"),angular.element(element[0].querySelector("div")).css("align-content","center");let color=attr.color?attr.color:"#333";angular.element(element[0].querySelector("div")).css("color",attr.color);let size=attr.spinnerSize?attr.spinnerSize:16;if(attr.type&&"spin"===attr.type){var overrideSettings={scale:size/97,className:"spinner-loading-small",position:"relative",color:color};angular.element(element[0].querySelector(".spinner")).css("margin-left","10px"),angular.element(element[0].querySelector(".spinner")).css("margin-bottom","4px"),new Spinner(angular.extend(defaultSettings,overrideSettings)).spin(element[0].querySelector(".spinner"))}else angular.element(element[0].querySelector("span")).css("font-size",`${attr.spinnerSize}px`);attr.titleSize&&angular.element(element[0].querySelector("p")).css("font-size",attr.titleSize),attr.title&&angular.element(element[0].querySelector("p")).css("padding","8px")}}}]);var fit={proposeGeometry:function(term){if(!term.element.parentElement)return null;var parentElementStyle=window.getComputedStyle(term.element.parentElement),parentElementHeight=parseInt(parentElementStyle.getPropertyValue("height")),parentElementWidth=Math.max(0,parseInt(parentElementStyle.getPropertyValue("width"))),elementStyle=window.getComputedStyle(term.element),availableHeight=parentElementHeight-(parseInt(elementStyle.getPropertyValue("padding-top"))+parseInt(elementStyle.getPropertyValue("padding-bottom"))),availableWidth=parentElementWidth-(parseInt(elementStyle.getPropertyValue("padding-right"))+parseInt(elementStyle.getPropertyValue("padding-left")))-term._core.viewport.scrollBarWidth;return{cols:Math.floor(availableWidth/term._core._renderCoordinator.dimensions.actualCellWidth),rows:Math.floor(availableHeight/term._core._renderCoordinator.dimensions.actualCellHeight)}},fit:function(term){var geometry=fit.proposeGeometry(term);geometry&&(term.rows===geometry.rows&&term.cols===geometry.cols||(term._core._renderCoordinator.clear(),term.resize(geometry.cols,geometry.rows)))},apply:function(terminalConstructor){terminalConstructor.prototype.proposeGeometry=function(){return fit.proposeGeometry(this)},terminalConstructor.prototype.fit=function(){return fit.fit(this)}}};"undefined"!=typeof exports?module.exports.fit=fit:window.fit=fit;var fullscreen={toggleFullScreen:function(term,fullscreen){var fn;fn=void 0===fullscreen?term.element.classList.contains("fullscreen")?"remove":"add":fullscreen?"add":"remove",term.element.classList[fn]("fullscreen")},apply:function(terminalConstructor){terminalConstructor.prototype.toggleFullScreen=function(fullscreen){return fullscreen.toggleFullScreen(this,fullscreen)}}};"undefined"!=typeof exports?module.exports.fullscreen=fullscreen:window.fullscreen=fullscreen;var winptyCompat={winptyCompatInit:function(terminal){["Windows","Win16","Win32","WinCE"].indexOf(navigator.platform)>=0&&terminal.on("linefeed",function(){32!==terminal.buffer.lines.get(terminal.buffer.ybase+terminal.buffer.y-1)[terminal.cols-1][3]&&(terminal.buffer.lines.get(terminal.buffer.ybase+terminal.buffer.y).isWrapped=!0)})},apply:function(terminalConstructor){terminalConstructor.prototype.winptyCompatInit=function(){winptyCompat.winptyCompatInit(this)}}};"undefined"!=typeof exports?module.exports.winptyCompat=winptyCompat:window.winptyCompat=winptyCompat;var attach={attach:function(term,socket,bidirectional,buffered){var myTextDecoder;bidirectional=void 0===bidirectional||bidirectional,term.socket=socket,term._flushBuffer=function(){term.write(term._attachSocketBuffer),term._attachSocketBuffer=null},term._pushToBuffer=function(data){term._attachSocketBuffer?term._attachSocketBuffer+=data:(term._attachSocketBuffer=data,setTimeout(term._flushBuffer,10))},term._getMessage=function(ev){var str;if("object"==typeof ev.data)if(ev.data instanceof ArrayBuffer)myTextDecoder||(myTextDecoder=new TextDecoder),str=myTextDecoder.decode(ev.data);else{const reader=new FileReader;str=reader.readAsText(ev.data),reader.addEventListener("loadend",function(e){const text=e.srcElement.result;buffered?term._pushToBuffer(text):term.write(text)})}else if("__PONG__"===ev.data)return;buffered?term._pushToBuffer(str||ev.data):term.write(str||ev.data)},term._sendData=function(data){1===socket.readyState&&socket.send(data)},socket.addEventListener("message",term._getMessage),bidirectional&&term.on("data",term._sendData),socket.addEventListener("close",term.detach.bind(term,socket)),socket.addEventListener("error",term.detach.bind(term,socket))},detach:function(term,socket){term.off("data",term._sendData),(socket=void 0===socket?term.socket:socket)&&socket.removeEventListener("message",term._getMessage),delete term.socket},apply:function(terminalConstructor){terminalConstructor.prototype.attach=function(socket,bidirectional,buffered){return attach.attach(this,socket,bidirectional,buffered)},terminalConstructor.prototype.detach=function(socket){return attach.detach(this,socket)}}};"undefined"!=typeof exports?module.exports.attach=attach:window.attach=attach,angular.module("monacaIDE").factory("xtermTerminal",[function(){return Terminal.applyAddon(window.attach),Terminal.applyAddon(window.fit),Terminal.applyAddon(window.fullscreen),Terminal}]),angular.module("monacaIDE").factory("monacaWebsocket",["$window",function($window){var Socket=$window.WebSocket||$window.MozWebSocket;if(!Socket)throw"WebSocket not supported";return Socket.prototype.isOpen=function(){var OPEN=WebSocket.OPEN||1;return this.readyState===OPEN},Socket}]),angular.module("monacaIDE").directive("monacaTerminal",["TerminalFactory","TerminalSettingFactory","TerminalService","$timeout","$q",function(TerminalFactory,TerminalSettingFactory,TerminalService,$timeout,$q){return{restrict:"E",template:'<div ng-style="terminalController.ngStyle"><div class="terminal-info-container" ng-if="terminalController.showLoader"><text-spinner ng-if="terminalController.isTranspile"  type="dots" title="Launching terminal server..." title-size="14px" spinner-size="16" color="skyblue"></text-spinner><text-spinner ng-if="!terminalController.isTranspile" type="dots" title="Launching terminal..." title-size="14px" spinner-size="16" color="skyblue"></text-spinner></div><div ng-if="terminalController.error != null && !terminalController.isTranspile" class="terminal-error-container" ng-transclude="error"><p class="terminal-error">{{ terminalController.error }}</p></div><div class="terminal-info-container" ng-if="terminalController.error != null && terminalController.isTranspile"><text-spinner class="terminal-info" type="dots" title="Launching terminal server..." title-size="14px" spinner-size="16" color="skyblue"></text-spinner></div></div>',replace:!0,bindToController:{options:"=",style:"=cssStyle"},transclude:{loader:"?terminalLoader",error:"?terminalError"},controllerAs:"terminalController",controller:["xtermTerminal","$element","$http","$scope","monacaWebsocket","$rootScope","$window","$timeout","$interval","gettextCatalog","PubSub","Constant","CommonFunctionService","ProjectFactory","FontFaceLoader",function(Terminal,$element,$http,$scope,websocket,$rootScope,$window,$timeout,$interval,gettextCatalog,PubSub,Constant,CommonFunctionService,ProjectFactory,FontFaceLoader){var pid,vm=this,_cellWidth=7,_cellHeight=16,_errorText=gettextCatalog.getString("Error occured.");const CTRL_C="";vm.term=null,vm.socket=null,vm.isTranspile=!0;var options={terminal:{cursorBlink:!1,scrollback:1e3,tabStopWidth:8,fontSize:12,fontFamily:"Monaco"},autoResize:!0,keepAliveIntervalSec:5,width:0,height:0,id:""};function doInit(){if(!TerminalFactory.isNetworkStable())return;$element.children().remove(),options=angular.extend(options,vm.options),vm.isTranspile=options.isTranspile,vm.showLoader=!0,vm.ngStyle=vm.style||{},vm.error=null;const defaultTerminalOption={macOptionClickForcesSelection:bowser.mac,windowsMode:bowser.windows,rendererType:"dom"},terminalOpts=Object.assign({},defaultTerminalOption,options.terminal);FontFaceLoader.loadFont(TerminalFactory.getSettings().fontFamily).then(()=>{vm.term=new Terminal(terminalOpts),vm.isTranspile&&vm.term.attachCustomKeyEventHandler(event=>{if(!("Escape"===event.code||event.ctrlKey||event.altKey||event.metaKey))return event.preventDefault(),!1}),vm.term.open($element[0]),vm.term.fit(),vm.term.forceResize=resizeFn,vm.term.sendTranspileCommand=sendTranspileCommandFn,vm.term.getSocket=getSocketFn,vm.term.reInit=doInit,vm.term.loading=loadingFn,vm.term.getErrorMessage=getErrorMessageFn,vm.term.setUIConfiguration=setUIConfigurationFn,vm.term.forceFocus=focusFn,vm.term.clearTmuxSession=clearTmuxSessionFn,vm.term.killPreviewPort=killPreviewPort,vm.term.sendCtrlC=sendCtrlC,setConfigOption(TerminalFactory.getSettings()),!0===options.focus&&vm.term.focus(),vm.setTerminalSize(options.width,options.height),options.autoResize&&vm.watchResize();var headers=options.headers||{};headers["Content-Type"]="application/x-www-form-urlencoded",$http.post(options.url,function(){var postRequest=options.credentials||{};postRequest.cols=options.terminal.cols,postRequest.rows=options.terminal.rows,angular.isDefined(options.customCommand)&&(postRequest.command=options.customCommand);angular.isDefined(options.killSession)&&options.killSession&&(postRequest.killSession=!0);return postRequest.sessionWindow=options.id,Object.keys(postRequest).map(function(key){return encodeURIComponent(key)+"="+encodeURIComponent(postRequest[key])}).join("&")}(),{withCredentials:!0,headers:headers}).then(function(response){if(!response||!response.data)throw"Response does not contain terminal pid";callback("onConnect"),pid=response.data,vm.socket=new websocket(function(pid){var protocol="";!0===options.wss?protocol+="wss://":!1===options.wss?protocol+="ws://":protocol+="https"===options.url.substring(0,5)?"wss://":"ws://";var base=options.url.substring(options.url.indexOf("://")+3);"/"!==base[base.length-1]&&(base+="/");return protocol+base+pid}(response.data)),vm.socket.onopen=vm.attach,vm.socket.onclose=vm.onClose,vm.socket.onerror=vm.onError,vm.socket.onmessage=vm.onMessage}).catch(function(err){if(console.log("Could not connect to terminal server with error code",err.status),err&&401===err.status){vm.showLoader=!1,vm.showError();let message=gettextCatalog.getString(function(){let message="";message=bowser.safari?"11.0"===bowser.version?'Please make sure that you disable the "Prevent cross-site tracking".':"Please make sure that you allow all the cookies.":"Please make sure that you DO NOT block any 3rd party cookies.";return message}()),subMessage=gettextCatalog.getString("Trying to connect to server. ");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:subMessage+message}),!vm.isTranspile&&ProjectFactory.isTranspileLogEnabled()||(TerminalFactory.networkIsNotStable(),PubSub.publish(Constant.EVENT.TERMINAL_SERVER_RESPONSE_FAILED,{reason:message}))}else ProjectFactory.isTranspileLogEnabled()||!err||400!==err.status&&502!==err.status?(vm.showLoader=!1,vm.showError()):(TerminalFactory.setContainerID(""),vm.showLoader=!0)}),callback("onInit",vm.term)})}function resizeFn(width,height){$timeout(vm.resize(width,height),100)}function setConfigOption(config){if(config)for(let key in config){if("terminalOS"===key)continue;let value=config[key];"theme"===key&&(value=TerminalSettingFactory.getThemeConfiguration(value)),vm.term.setOption(key,value)}}function focusFn(){vm.term.focus()}function setUIConfigurationFn(config){setConfigOption(config),_cellWidth=vm.term._core._renderCoordinator.dimensions.actualCellWidth||_cellWidth,_cellHeight=vm.term._core._renderCoordinator.dimensions.actualCellHeight||_cellHeight,callback("onTerminalOptionChanged",config)}function clearTmuxSessionFn(tmuxSessionName){let headers=vm.options.headers||{};headers["Content-Type"]="application/x-www-form-urlencoded";let url=function(base,pid){return(base+="/"===base[base.length-1]?"":"/")+pid+"/close"}(vm.options.url,pid);url&&tmuxSessionName&&$http.post(url,`sessionWindow=${tmuxSessionName}`,{withCredentials:!0,headers:headers}).then(function(response){}).catch(function(err){console.log(err)})}function getErrorMessageFn(){return vm.error}function getSocketFn(){return vm.socket}function loadingFn(load){vm.error=null,vm.showLoader=load}function killPreviewPort(){let port=TerminalFactory.getCurrentPreviewPort();port&&sendSocketCommand(`fuser -k ${port}/tcp\n`)}function sendCtrlC(){sendSocketCommand(CTRL_C)}function sendSocketCommand(command){vm.socket&&vm.socket.isOpen()&&vm.socket.send(command)}function installPackageAndRunTranspileCommand(command){sendSocketCommand(`\nnpm install;monaca reconfigure;${command};\n`),callback("onSendTranspileCommand",vm.socket)}function sendTranspileCommandFn(command){command&&TerminalService.isRequiredToInstallPackages().then(function(isRequired){isRequired?installPackageAndRunTranspileCommand(command):function(command){sendSocketCommand(`\n${command};\n`),callback("onSendTranspileCommand",vm.socket)}(command)}).catch(function(){installPackageAndRunTranspileCommand(command)})}function callback(what,args){"function"==typeof options[what]&&options[what](args)}function safeDigest(){$rootScope.$$phase||$rootScope.$digest()}vm.$onInit=function(){doInit()},vm.setTerminalSize=function(width,height){const viewportElement=$element[0].getElementsByClassName("xterm-viewport")[0];let clientWidth=void 0===width?viewportElement.clientWidth:width,clientHeight=void 0===height?viewportElement.clientHeight:height,elementPaddingHor=parseInt(angular.element($element).parent().css("padding-right"))+parseInt(angular.element($element).parent().css("padding-left"));(!elementPaddingHor||elementPaddingHor<=0)&&(elementPaddingHor=18),clientWidth-=elementPaddingHor;let elementPaddingVer=parseInt(angular.element($element).parent().css("padding-top"))+parseInt(angular.element($element).parent().css("padding-bottom"));(!elementPaddingVer||elementPaddingVer<=0)&&(elementPaddingVer=10),clientHeight-=elementPaddingVer;let scrollBarWidth=$element[0].offsetWidth-clientWidth;(!scrollBarWidth||scrollBarWidth<=0)&&(scrollBarWidth=15);const cellWidth=vm.term._core._renderCoordinator.dimensions.actualCellWidth||_cellWidth,cellHeight=vm.term._core._renderCoordinator.dimensions.actualCellHeight||_cellHeight;options.terminal.cols=Math.round((clientWidth-scrollBarWidth)/cellWidth,0),options.terminal.rows=Math.floor(clientHeight/cellHeight),vm.term.resize(options.terminal.cols,options.terminal.rows)},vm.watchResize=function(){angular.element($window).bind("resize",resizeFn),vm.term.onResize(vm.doResizeCall)},vm.resize=function(width,height){vm.setTerminalSize(width,height),vm.term.refresh(0,options.terminal.rows-1),safeDigest()},vm.doResizeCall=function(size){var headers=options.headers||{};headers["Content-Type"]="application/x-www-form-urlencoded";let url=function(base,pid){return(base+="/"===base[base.length-1]?"":"/")+pid+"/size"}(options.url,pid);$http.post(url,"cols="+size.cols+"&rows="+size.rows,{withCredentials:!0,headers:headers}).then(function(response){vm.onResize(size)}).catch(function(){vm.showError()})},vm.attach=function(event){vm.term.attach(vm.socket),vm.onOpen(event),vm.showLoader=!1,function(){if(options.keepAliveIntervalSec>0)var intervalPromise=$interval(function(){vm.socket.isOpen()?vm.socket.send(""):$interval.cancel(intervalPromise)},1e3*options.keepAliveIntervalSec)}()},vm.onClose=function(event){vm.showError(event.reason||gettextCatalog.getString("Connection closed")),callback("onClose",event),safeDigest()},vm.onError=function(event){vm.showError(),callback("onError",event),safeDigest()},vm.onOpen=function(event){callback("onOpen",event),safeDigest()},vm.showError=function(message){vm.error=message||_errorText,safeDigest()},vm.onMessage=function(event){callback("onMessage",event),safeDigest()},vm.onResize=function(size){callback("onResize",size),safeDigest()},$scope.$on("$destroy",function(){vm.socket&&vm.socket.close()})}]}}]),angular.module("monacaIDE").filter("capitalize",function(){return function(input,all){var reg=all?/([^\W_]+[^\s-]*) */g:/([^\W_]+[^\s-]*)/;return input?input.replace(reg,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}):""}}),angular.module("monacaIDE").filter("isEmptyObj",function(){return function(object){return angular.equals({},object)}}),angular.module("monacaIDE").factory("DeployServiceFactory",["$q","DeployServiceIntegrator",function($q,DeployServiceIntegrator){return{serviceCollection:[],ownedCollection:[],fetchOwnedCollection:function(){return DeployServiceIntegrator.fetchOwned().then(function(response){return Object.keys(response.result).forEach(key=>{response.result[key].editor_logo=response.result[key].app_logo.replace("/img/","img/")}),this.ownedCollection=response.result,$q.resolve(response.result)}.bind(this),function(response){return $q.reject(response.message)})},fetchServiceCollection:function(){return DeployServiceIntegrator.fetchServices().then(function(response){return Object.keys(response.result).forEach(key=>{response.result[key].logo.editor_logo_small=response.result[key].logo.app_logo_small.replace("/img/","img/"),response.result[key].logo.editor_logo_large=response.result[key].logo.app_logo_large.replace("/img/","img/")}),this.serviceCollection=response.result,$q.resolve(response.result)}.bind(this),function(response){return $q.reject(response.message)})},fetch:function(){return $q.all([this.fetchServiceCollection(),this.fetchOwnedCollection()]).catch(function(error){var response=[];return error[0]&&response.push(error[0]),error[1]&&response.push(error[1]),$q.reject(response.join(" "))})},removeOwn:function(service_type,alias){return DeployServiceIntegrator.remove(service_type,alias).then(function(){return this.fetchOwnedCollection()}.bind(this),function(response){return $q.reject(response.message)})},addOwn:function(formData){return DeployServiceIntegrator.add(formData).then(function(){return this.fetchOwnedCollection()}.bind(this),function(response){return $q.reject(response.message)})},distributeApp:function(project_id,service_type,service_alias,service_optional_params,build_queue_id,ci_queue_id){return DeployServiceIntegrator.distributeApp(project_id,service_type,service_alias,service_optional_params,build_queue_id,ci_queue_id).then(function(resp){return $q.resolve(resp.result)},function(error){return $q.reject(error)})}}}]),angular.module("monacaIDE").factory("FileUtilityFactory",[function(){return{escapeFileName:function(unsafe){return unsafe.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},isValidFilename:function(filename){return/^(?!\.)(?!com[0-9]$)(?!con$)(?!lpt[0-9]$)(?!nul$)(?!prn$)(?!\s*$)[^\|\*\?\\:;<>/$"]*[^\.\|\*\?\\:;<>/$"]+$/.test(filename)},getFileName:function(file_path){return file_path.substring(file_path.lastIndexOf("/")+1,file_path.length)},getFileDirectory:function(file_path){return file_path.substring(0,file_path.lastIndexOf("/")+1)},getFileDirectoryDeleteLastSlash:function(file_path){return this.getFileDirectory(file_path.replace(/\/$/,""))},getExtName:function(file_name){return file_name&&-1!==file_name.lastIndexOf(".")?file_name.split(".").pop():""},getMime:function(extname){switch(extname){case"html":case"htm":case"tpl":return"text/html";case"ui":case"js":case"json":return"text/javascript";case"ts":return"text/typescript";case"cbl":case"cob":case"eco":case"pco":case"sqb":case"cpy":return"text/cobol";case"xml":return"text/xml";case"css":return"text/css";case"h":case"m":return"text/objective-c";case"java":return"text/java";default:return"text/plain"}},getFileType:function(extname){return extname.match(/png|jpg|jpeg|gif|bmp/i)?"img":"text"},getDomSafeId:function(file_path){return file_path.replace(/^\/|\/$/g,"").replace(/\W/g,"-")}}}]),angular.module("monacaIDE").factory("MonacaEditorFactory",["$q","$http","Constant","OnsenTags","PubSub","ProjectService","FileUtilityFactory","EnvironmentFactory",function($q,$http,Constant,OnsenTags,PubSub,ProjectService,FileUtilityFactory,EnvironmentFactory){var _factoryPromise,_settings=null;window.config.projectId&&(_factoryPromise=$q.when(ProjectService.getEditorSetting(window.config.projectId)).then(config=>{let editorConfig=new EditorConfig(config);_settings=editorConfig.getSettings()}));let _monacoIntialised=!1;class EditorConfig{constructor(settings){this.themes=[{label:"Visual Studio",value:"vs"},{label:"Visual Studio Dark",value:"vs-dark"},{label:"Hight Contrast Black",value:"hc-black"}];const defaultFont=EnvironmentFactory.getDefaultEditorFontFamily();this.fonts=[{label:"Courier New",value:"Courier New"},{label:"DejaVu Sans Mono",value:"DejaVu Sans Mono"},{label:"Droid Sans Mono Slashed",value:"Droid Sans Mono Slashed"},{label:"M+",value:"M+"},{label:"M+ 1mn regular",value:"mplus-1mn-regular"},{label:"Monaco",value:"Monaco"},{label:"Ricty Diminished",value:"Ricty Diminished"},{label:"Source Code Pro",value:"Source Code Pro"}].map(font=>(font.value===defaultFont&&(font.label=`Default (${font.label})`),font)),this.whitespace=[{label:"None",value:"none"},{label:"Boundary",value:"boundary"},{label:"All",value:"all"}],this.wordwrap=[{label:"Off",value:"off"},{label:"On",value:"on"},{label:"Bounded",value:"bounded"},{label:"Word Wrap Column",value:"wordWrapColumn"}],this._editorInstance=null,this._settings=this._formatSettings(settings),this.getEditorInstance=this.getEditorInstance.bind(this),this.getSettings=this.getSettings.bind(this),this.setEditorInstance=this.setEditorInstance.bind(this),this.setSettings=this.setSettings.bind(this),this.setTheme=this.setTheme.bind(this),this.setModelSettings=this.setModelSettings.bind(this),this._formatSettings=this._formatSettings.bind(this)}_formatSettings(userSettings){const _defaults={language:"plaintext",fontFamily:EnvironmentFactory.getDefaultEditorFontFamily(),fontSize:14,theme:"vs",contextmenu:!1,minimap:{enabled:!1,maxColumn:120,renderCharacters:!0,showSlider:"mouseover"},autoClosingBrackets:!0,autoIndent:!1,dragAndDrop:!1,renderWhitespace:"none",wordWrap:"on",wordWrapColumn:80,wordWrapMinified:!0,wrappingIndent:"same",modelFormatting:{insertSpaces:!0,tabSize:EnvironmentFactory.getDefaultEditorTabSize()}},_lockedSettings={automaticLayout:!1,folding:!0,glyphMargin:!0,hideCursorInOverviewRuler:!1,hover:!0,iconsInSuggestions:!0,links:!1};Object.keys(userSettings).map(function(key,index){(_lockedSettings[key]||"_"===key.charAt(0))&&delete userSettings[key]});let currentSettings=this._settings||{};return Object.assign({},_defaults,_lockedSettings,currentSettings,userSettings)}getEditorInstance(){return this._editorInstance}getSettings(){return this._settings}setEditorInstance(editor){return this._editorInstance=editor,this}setSettings(settings){return this.getEditorInstance()?(this._settings=this._formatSettings(settings),this.getEditorInstance().updateOptions(this._settings),this.setTheme(this._settings.theme),this.setModelSettings(this._settings.modelFormatting)):console.warn("The editor instance is missing so settings can not be configured"),this}setTheme(theme){return-1!==this.themes.map(theme=>theme.value).indexOf(theme)?monaco.editor.setTheme(theme):console.warn('The selected theme "'+theme+'" is not a valid option.'),this}setModelSettings(settings){return this.getEditorInstance()?this.getEditorInstance().getModel().updateOptions(settings):console.warn("The editor instance is missing so settings can not be configured"),this}}const languages={bat:"bat",c:"c",coffee:"coffeescript",cpp:"cpp",cs:"csharp",css:"css",hbs:"handlebars",handlebars:"handlebars",htm:"html",html:"html",xhtml:"html",jhtml:"html",tpl:"html",ini:"ini",java:"java",jsp:"java",jspx:"java",wss:"java",do:"java",action:"java",ui:"javascript",js:"javascript",bjson:"json",json:"json",bablerc:"json",less:"less",markdown:"markdown",md:"markdown",h:"objective-c",m:"objective-c",php:"php",php4:"php",php3:"php",phtml:"php",log:"plaintext",tlog:"plaintext",dat:"plaintext",txt:"plaintext",ps:"powershell",py:"python",rb:"ruby",rhtml:"ruby",sass:"scss",scss:"scss",sqlite:"sql",sql:"sql",swift:"swift",ts:"typescript",xml:"xml",rss:"xml",svg:"xml",yaml:"yaml",yml:"yaml",cob:"cobol",cbl:"cobol",eco:"cobol",pco:"cobol",sqb:"cobol",cpy:"cobol"};return{loading:_factoryPromise,getLanguageByFileName:function(fileName){const extension=FileUtilityFactory.getExtName(fileName);return languages[extension]||"plaintext"},create:function(element,settings){return settings.language=this.getLanguageByFileName(settings.fileName),new class{constructor(element,settings){this._element=element,this._keyMapping=settings._keyMapping,this._settings=new EditorConfig(settings),this._version=1,this._editor=null,this._model=null,this._editorLoading=this.initEditor(element,this._settings,this._keyMapping),this.find=this.find.bind(this),this.findNext=this.findNext.bind(this),this.findPrev=this.findPrev.bind(this),this.getCode=this.getCode.bind(this),this.getSettings=this.getSettings.bind(this),this.isClean=this.isClean.bind(this),this.markAsClean=this.markAsClean.bind(this),this.onChange=this.onChange.bind(this),this.onFocus=this.onFocus.bind(this),this.redo=this.redo.bind(this),this.replace=this.replace.bind(this),this.setSettings=this.setSettings.bind(this),this.toggleComment=this.toggleComment.bind(this),this.undo=this.undo.bind(this),this.undoStartId=0,this.formatDocument=this.formatDocument.bind(this),this.increaseFontSize=this.increaseFontSize.bind(this),this.decreaseFontSize=this.decreaseFontSize.bind(this),this.openCommandPalette=this.openCommandPalette.bind(this),this.focus=this.focus.bind(this),this.saveViewState=this.saveViewState.bind(this),this.restoreViewState=this.restoreViewState.bind(this),this.getScrollTop=this.getScrollTop.bind(this),this.setScrollTop=this.setScrollTop.bind(this),this.onDidScrollChange=this.onDidScrollChange.bind(this),this.insertTextAtCursor=this.insertTextAtCursor.bind(this),this.paste=this.paste.bind(this),this.copy=this.copy.bind(this),this.cut=this.cut.bind(this),this.layout=this.layout.bind(this),this._executeAction=this._executeAction.bind(this)}_onEditorReady(){_monacoIntialised||(_monacoIntialised=!0,monaco.languages.html.htmlDefaults.setOptions(Object.assign({},monaco.languages.html.htmlDefaults.options,{suggest:{html5:!0,ionic:!1,angular1:!1}})),this._setupOnsenJSAutocomplete(),this._setupOnsenHTMLAutocomplete())}_setupOnsenJSAutocomplete(){$http({method:"GET",url:"https://unpkg.com/onsenui/js/onsenui.d.ts"}).then(res=>{const dts=res.data.replace(/@description/g,"");monaco.languages.typescript.javascriptDefaults.addExtraLib(dts,"onsenui.d.ts")})}_setupOnsenHTMLAutocomplete(){monaco.languages.registerCompletionItemProvider("html",{triggerCharacters:["<"],provideCompletionItems:(model,position)=>{const contentToHere=model.getValueInRange({startLineNumber:1,startColumn:1,endLineNumber:position.lineNumber,endColumn:position.column}),tagNameInProgress=contentToHere.match(/\<([a-z\-])*$/),openHtmlTagMatch=contentToHere.match(/\<([a-z\-]*)[\s\n]+[^\>]*$/),openHtmlTag=openHtmlTagMatch&&openHtmlTagMatch.length>1?openHtmlTagMatch[1]:null;return openHtmlTag&&this._isValidOnsenHtmlTag(openHtmlTag)?OnsenTags[openHtmlTag].attributes.map(attribute=>({label:attribute.id,documentation:attribute.description,kind:12})):tagNameInProgress?_.map(OnsenTags,(tag,key)=>({label:key,documentation:tag.description})):void 0}})}_isValidOnsenHtmlTag(tag){return!!OnsenTags[tag]}initEditor(element,settings,keyMappings){return new Promise((resolve,reject)=>{require.config({paths:{vs:"lib/vs"}}),require(["vs/editor/editor.main"],()=>{this._editor=monaco.editor.create(element,settings.getSettings()),this._model=this._editor.model,this._version=this._model.getAlternativeVersionId(),this._settings.setEditorInstance(this._editor),keyMappings&&keyMappings.save&&this._editor.addCommand(monaco.KeyMod.CtrlCmd|monaco.KeyCode.KEY_S,keyMappings.save),this._editor.addAction({id:"decrease-font-size",label:"Decrease Font Size",keybindings:[monaco.KeyMod.CtrlCmd|monaco.KeyCode.US_COMMA],precondition:null,keybindingContext:null,contextMenuGroupId:"navigation",contextMenuOrder:1.5,run:editor=>(_settings.fontSize>11&&(_settings.fontSize=--_settings.fontSize,PubSub.publish(Constant.EVENT.EDITOR_CONFIG_UPDATED)),null)}),window.emmetHTML(this._editor),this._editor.addAction({id:"increase-font-size",label:"Increase Font Size",keybindings:[monaco.KeyMod.CtrlCmd|monaco.KeyCode.US_DOT],precondition:null,keybindingContext:null,contextMenuGroupId:"navigation",contextMenuOrder:1.5,run:editor=>(_settings.fontSize<80&&(_settings.fontSize=++_settings.fontSize,PubSub.publish(Constant.EVENT.EDITOR_CONFIG_UPDATED)),null)}),this._onEditorReady(),resolve(this)})})}find(){return this._executeAction("actions.find")}findNext(){return this._executeAction("editor.action.nextMatchFindAction")}findPrev(){return this._executeAction("editor.action.previousMatchFindAction")}getCode(){return this._editor.getValue()}isClean(){return this._model.getAlternativeVersionId()===this._version}markAsClean(){this._version=this._model.getAlternativeVersionId()}onChange(fn){return this._editor.onDidChangeModelContent(fn)}onFocus(fn){return this._editor.onDidFocusEditorText(fn)}redo(){this._model.redo()}canRedo(){return this._model.getAlternativeVersionId()<this.undoStartId}replace(){return this._executeAction("editor.action.startFindReplaceAction")}toggleComment(){return this._executeAction("editor.action.commentLine")}formatDocument(){return this._executeAction("editor.action.formatDocument")}increaseFontSize(){return this._executeAction("increase-font-size")}decreaseFontSize(){return this._executeAction("decrease-font-size")}openCommandPalette(){return this._executeAction("editor.action.quickCommand")}undo(){this.setUndoStartPoint(),this._model.undo()}canUndo(){return 1<this._model.getAlternativeVersionId()}setUndoStartPoint(){this.undoStartId<this._model.getAlternativeVersionId()&&(this.undoStartId=this._model.getAlternativeVersionId())}focus(){this._editor.focus()}saveViewState(){return this._editor.saveViewState()}restoreViewState(viewState){return this._editor.restoreViewState(viewState)}getScrollTop(){return this._editor.getScrollTop()}setScrollTop(scrollTop){return this._editor.setScrollTop(scrollTop)}onDidScrollChange(fn){return this._editor.onDidScrollChange(fn)}insertTextAtCursor(text){this.focus();const selection=this._editor.getSelection(),op={identifier:{major:1,minor:1},range:new monaco.Range(selection.startLineNumber,selection.startColumn,selection.endLineNumber,selection.endColumn),text:text,forceMoveMarkers:!0};this._editor.executeEdits("clipboard",[op])}paste(){navigator.clipboard.readText().then(text=>{this.insertTextAtCursor(text)}).catch(err=>{console.error("Failed to read clipboard contents: ",err)})}copy(){return navigator.clipboard.writeText(this._editor.getModel().getValueInRange(this._editor.getSelection())).then(()=>{this.focus()}).catch(err=>{console.error("Could not copy text: ",err)})}cut(){this.copy().then(()=>this.insertTextAtCursor(""))}layout(dimension){return this._editor.layout(dimension)}getSettings(){return this._settings.getSettings()}setSettings(settings){this._settings.setSettings(settings)}_executeAction(id){try{return this._editor.getAction(id).run()}catch(e){console.error('[Monaca Editor] Failed to execute action: "'+id+'" with the error message: '+e)}}}(element,settings)._editorLoading},fetchSettings:function(){return ProjectService.getEditorSetting(window.config.projectId).then(config=>{let editorConfig=new EditorConfig(config);_settings=editorConfig.getSettings(),PubSub.publish(Constant.EVENT.EDITOR_CONFIG_UPDATED)})},getSettings:function(){return _settings},getDefaultSettings:function(){return{theme:"vs",fontFamily:EnvironmentFactory.getDefaultEditorFontFamily(),fontSize:14,contextmenu:!1,minimap:{enabled:!1},autoClosingBrackets:!0,autoIndent:!0,renderWhitespace:"none",wordWrap:"on",wordWrapColumn:80,modelFormatting:{insertSpaces:!0,tabSize:EnvironmentFactory.getDefaultEditorTabSize()},dragAndDrop:!1}}}}]),angular.module("monacaIDE").factory("ProjectTreeFactory",["$q","$http","PubSub","Constant","gettextCatalog","Dialog","ProjectFileService","FileUtilityFactory","$uibModal","$templateCache","TerminalService","ProjectFactory","CommonFunctionService",function($q,$http,PubSub,Constant,gettextCatalog,Dialog,ProjectFileService,FileUtilityFactory,$modal,$tpl,TerminalService,ProjectFactory,CommonFunctionService){var _tree={},_folder_tree={},_uploadQueueStack={},overwritingMessage={title:"Confirm File Overwrite",content:'The file "<strong>{{file}}</strong>" already exists.<br/>Would you like to overwrite it?'},_replaceAll=!1;function cleanAndNotify(key,status,message,resp){if(delete _uploadQueueStack[key],PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:status,content:message}),PubSub.publish(Constant.EVENT.CREATED_NEW_FILE_OR_FOLDER,resp.body.result),instance.uploadStatus.count--,CommonFunctionService.isTerminalService()&&"success"===status&&"local"!==ProjectFactory.getEnvironmentType()){const FailedDetectChangeMessage=gettextCatalog.getString("Failed to detect file changes. Please refresh the preview panel for latest change.");TerminalService.triggerFileChange((filepath=key,filepath.replace(/^\/+/,""))).then(response=>{response&&"ok"===response.data||PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:FailedDetectChangeMessage})}).catch(err=>{console.log(err),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:FailedDetectChangeMessage})})}var filepath;return!0}function notifyError(message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})}var instance={uploadStatus:{count:0},getTreeData:function(){return _tree},getFolderTreeData:function(){return _folder_tree},addFolderTreeData:function(key){_folder_tree[key]||(_folder_tree[key]={type:"dir"})},removeFolderTreeData:function(key){Object.keys(_folder_tree).forEach(function(value){value.startsWith(key)&&delete _folder_tree[value]})},loadFolderTreeData:function(){return $q.when(ProjectFileService.getFolderTree()).then(function(resp){return _folder_tree=resp.result.items,$q.resolve(null)}).catch(function(err){return _folder_tree={},console.error(err),$q.resolve(null)})},push:function(filePath,file,singleFile){if(!((name=file.name)?name.match(/^[!-~]+$/)&&!name.match(/[/<>;]/)||(notifyError(gettextCatalog.getString("The file name includes invalid character.")),0):(notifyError(gettextCatalog.getString("The file name cannot be null.")),0)))return!1;var name,queueStackKey=filePath+file.name,_singleFile=singleFile;function _push(){return _uploadQueueStack.hasOwnProperty(queueStackKey)?(PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("This file is already being uploaded. Please wait and try again.")}),$q.reject(!1)):(_uploadQueueStack[queueStackKey]={file:file,path:filePath},instance.uploadStatus.count++,ProjectFileService.upload(filePath,file).then(function(key,resp){return cleanAndNotify(key,"success",gettextCatalog.getString("File has been uploaded successfully."),resp)}.bind(this,queueStackKey),function(key,resp){return cleanAndNotify(key,"danger",gettextCatalog.getString("Failed to upload file due to an unexpected server error."),resp)}.bind(this,queueStackKey)))}return $("#jstree").jstree(!0).get_node(queueStackKey)&&_singleFile?Dialog.confirm(gettextCatalog.getString(overwritingMessage.content,{file:queueStackKey}),gettextCatalog.getString(overwritingMessage.title)).then(function(allowOverwrite){return allowOverwrite?_push():$q.success()}):_push()},onDrop:function(evt,node){var files=evt.dataTransfer.files,items=evt.dataTransfer.items;function uploadFile(file){PubSub.publish(Constant.EVENT.EXECUTE_WITH_SELECTED_NODE,{target:node||evt.srcElement,callback:function(node){var baseDir="/";"/"!==node&&(baseDir="dir"===node.original.type?node.original.id:node.original.parent);var fileDirPath=(baseDir+file.fileName).split("/").slice(0,-1).join("/")+"/";instance.push(fileDirPath,file.entry,!1)}})}_replaceAll=!1,event.preventDefault(),event.stopPropagation();let lastConfirmReplaceDialogPromise=Promise.resolve();function enqueueConfirmReplaceDialogOpening(entry,queueStackKey){lastConfirmReplaceDialogPromise=lastConfirmReplaceDialogPromise.then(()=>{return(_replaceAll?()=>$q.when():()=>(function(queueStackKey){return $modal.open({templateUrl:"commonDialogs/ReplaceDialog.html",controller:"ReplaceController",windowClass:"confirm-window",backdrop:"static",resolve:{title:function(){return gettextCatalog.getString(overwritingMessage.title)},message:function(){return gettextCatalog.getString(overwritingMessage.content,{file:queueStackKey})},callback:function(){return function(){return _replaceAll=!0,$q.when()}}}}).result})(queueStackKey))().then(()=>{entry.file(file=>{uploadFile({fileName:entry.fullPath,entry:file})})}).catch(()=>{})})}function recursiveTree(entry){if(entry.isFile){var queueStackKey="/"!==node?node+entry.fullPath:entry.fullPath;(path=queueStackKey,ProjectFileService.isExist(path).then(function(res){return res.body.result},function(err){return console.error(err),null})).then(function(result){result&&(result[queueStackKey]?enqueueConfirmReplaceDialogOpening(entry,queueStackKey):entry.file(function(file){uploadFile({fileName:entry.fullPath,entry:file})}))})}else if(entry.isDirectory){var reader=entry.createReader(),readEntries=function(){reader.readEntries(function(items){var chain=$q.resolve();items.forEach(function(item){chain=chain.then(function(){return recursiveTree(item)})}),items.length&&readEntries()})};readEntries()}var path}for(var i=0;i<files.length;i++)recursiveTree(items[i].webkitGetAsEntry())}};return instance}]),angular.module("monacaIDE").factory("TerminalFactory",["TerminalSettingFactory","Constant","PubSub","ProjectService","$q","gettextCatalog",function(TerminalSettingFactory,Constant,PubSub,ProjectService,$q,gettextCatalog){var _previewUrl="",_containerId="",_serverAppUrl="",_currentPreviewPort=8080,_previewPorts=[],_isConnectingToServer=!1,_settings=null,_isNetworkStable=!0,_retryNetworkCount=0,_customCommand="/bin/bash",_startTerminalPrivilege=!1;return{loading:$q.when(ProjectService.getTerminalSetting(window.config.projectId)).then(config=>{_settings=config}),fetchSettings:function(){return ProjectService.getTerminalSetting(window.config.projectId).then(config=>{_settings=config})},getSettings:function(){return(settings=_settings).constructor===Array||settings.constructor===Object&&0===Object.keys(settings).length?TerminalSettingFactory.getDefaultSettings():_settings;var settings},setSettings:function(settings){return ProjectService.saveTerminalSetting(window.config.projectId,settings).then(newSettings=>(_settings=settings,PubSub.publish(Constant.EVENT.TERMINAL_SETTING_CHANGED,settings),settings))},getTerminalBackgroundColor:function(){let settings=this.getSettings(),default_background=TerminalSettingFactory.getDefaultBackground();return settings&&settings.theme&&TerminalSettingFactory.getThemeConfiguration(settings.theme).background||default_background},networkIsNotStable:function(){_retryNetworkCount+=1},setNetworkStatus:function(status){_isNetworkStable=status,status&&(_retryNetworkCount=0)},isNetworkStable:function(){return!(_retryNetworkCount>=3)&&_isNetworkStable},connectingToServer:function(status){_isConnectingToServer=status},isConnectingToServer:function(){return _isConnectingToServer},getContainerID:function(){return _containerId},setContainerID:function(containerId){_containerId=containerId},getTerminalURL:function(){return`${_serverAppUrl}/terminals`},setTerminalURL:function(serverAppUrl){serverAppUrl&&(_serverAppUrl=serverAppUrl)},getTerminalFileSaveUrl:function(){return`${_serverAppUrl}/file/save`},getPreviewUrl:function(){return _previewUrl},setPreviewUrl:function(url){url&&(_previewUrl=url)},getCurrentPreviewPort:function(){return _currentPreviewPort},setCurrentPreviewPort:function(port){port&&(_currentPreviewPort=port)},getPreviewPorts:function(){return _previewPorts},setPreviewPorts:function(ports){ports&&(_previewPorts=ports)},getFullTranspileCommand:function(){return`monaca preview ${_currentPreviewPort}`},setCustomCommand:function(command){_customCommand=command},getCustomCommand:function(){return _customCommand||"/bin/bash"},resetCustomCommand:function(){_customCommand="/bin/bash"},startTerminalPrivilege:function(privilege){_startTerminalPrivilege=privilege},getStartTerminalPrivilege:function(){return _startTerminalPrivilege}}}]),angular.module("monacaIDE").factory("TerminalSettingFactory",["ProjectFactory","Constant",function(ProjectFactory,Constant){const default_white={background:"#f9f9f9",cursor:"#bbbbbb",foreground:"#2a2c33",black:"#000000",red:"#de3e35",green:"#3f953a",yellow:"#d2b67c",blue:"#2f5af3",magenta:"#950095",cyan:"#3f953a",white:"#bbbbbb",brightBlack:"#000000",brightRed:"#de3e35",brightGreen:"#3f953a",brightYellow:"#d2b67c",brightBlue:"#2f5af3",brightMagenta:"#a00095",brightCyan:"#3f953a",brightWhite:"#ffffff",cursorAccent:"#000000",selection:"rgba(0, 0, 0, 0.3)"},_defaultConfig={fontFamily:"Ricty Diminished",fontSize:13,theme:"Default_White",cursorStyle:"block",cursorBlink:!1},_fonts=[{label:"Default",value:"Ricty Diminished"},{label:"Courier New",value:"Courier New"},{label:"DejaVu Sans Mono",value:"DejaVu Sans Mono"},{label:"Droid Sans Mono Slashed",value:"Droid Sans Mono Slashed"},{label:"M+ 1mn regular",value:"M+ 1mn regular"},{label:"Monaco",value:"Monaco"},{label:"Source Code Pro",value:"Source Code Pro"}],_themes=[{label:"Default White",value:"Default_White"},{label:"Default Black",value:"Default_Black"}],_cursorStyles=[{label:"block",value:"block"},{label:"underline",value:"underline"},{label:"bar",value:"bar"}],_terminalOSes=[{label:"generic",value:"generic"},{label:"javascript",value:"javascript"}],_themeConfigurations={Default_White:default_white,Default_Black:{background:"#161719",cursor:"#d0d0d0",foreground:"#c5c8c6",black:"#000000",red:"#fd5ff1",green:"#87c38a",yellow:"#ffd7b1",blue:"#85befd",magenta:"#b9b6fc",cyan:"#85befd",white:"#e0e0e0",brightBlack:"#000000",brightRed:"#fd5ff1",brightGreen:"#94fa36",brightYellow:"#f5ffa8",brightBlue:"#96cbfe",brightMagenta:"#b9b6fc",brightCyan:"#85befd",brightWhite:"#e0e0e0",cursorAccent:"#000000",selection:"rgba(255, 255, 255, 0.3)"}};return{getThemeConfiguration:function(theme){return _themeConfigurations[theme]},getValidFonts:function(){return _fonts},getValidThemes:function(){return _themes},getValidCursorStyles:function(){return _cursorStyles},getValidTerminalOSes:function(){return _terminalOSes},getDefaultSettings:function(){return _defaultConfig},getDefaultBackground:function(){return default_white.background},getDefaultTerminalOS:function(){try{return ProjectFactory.isGenericProject()?Constant.PROJECT_TYPE.GENERIC:Constant.PROJECT_TYPE.JAVASCRIPT}catch(error){return Constant.PROJECT_TYPE.JAVASCRIPT}}}}]),angular.module("monacaIDE").factory("WebComponentFactory",["$q","Constant","gettextCatalog","PubSub","WebComponentService",function($q,Constant,gettextCatalog,PubSub,WebComponentService){var _components=[];function formatFetchedComponentList(data){var formattedCollection=[];return Object.keys(data).forEach(function(key){data[key].key=key,formattedCollection.push(data[key])}),formattedCollection}return{loading:$q.when(WebComponentService.list()).then(function(resp){formatFetchedComponentList(resp.result).forEach(function(component){_components.push(component)})},function(error){return $q.reject(error)}),collection:_components,fetchList:function(keyword){keyword=keyword||"",WebComponentService.list(keyword).then(function(resp){this.collection=formatFetchedComponentList(resp.result)}.bind(this))},uninstall:function(componentName){return WebComponentService.uninstall(componentName).then(function(resp){return this.fetchList(),$q.resolve(resp)}.bind(this))},install:function(componentName,version){return WebComponentService.install(componentName,version).then(function(resp){return this.fetchList(),$q.resolve(resp)}.bind(this))},fetchComponentDetails:function(name,isOffline){return WebComponentService.fetchComponentDetails(name,isOffline)},setLoader:function(componentFiles){return WebComponentService.setLoader(componentFiles)}}}]),angular.module("monacaIDE").factory("ProjectSettingFactory",["$q","ProjectService","$routeParams",function($q,ProjectService,$routeParams){var _data;function load(){return $q.when(new Promise(function(resolve,reject){setTimeout(function(){$routeParams.projectId?ProjectService.getProjectSetting($routeParams.projectId).then(function(resp){resolve(resp)}):resolve(void 0)})})).then(function(resp){return _data=resp||{}})}return{loading:load(),reload:function(){this.loading=load()},getResult:function(){return _data},getProjectInfo:function(){return _data.project||{}},getConfig:function(platform){return platform?_data.config[platform]?_data.config[platform]:{}:_data.config||{}},getPreference:function(){return _data.preference||{}}}}]),angular.module("monacaIDE").service("BuildService",["$q",function($q){var Api=MonacaApi.Ide.Build,project_id=window.config.projectId;function formatResponse(response){return angular.isObject(response.body)||(response.body=JSON.parse(response.body)),response.body}return{fetchLogList:function(param){return $q.when(Api.history(project_id,param)).then(function(resp){return formatResponse(resp)})},deleteHistory:function(historyId){return $q.when(Api.deleteHistory(project_id,{queue_id:historyId})).then(function(resp){return formatResponse(resp)})},getOfficialReleaseDebuggerVersion:function(platform){return $q.when(Api.getOfficialReleaseDebuggerVersion(project_id,platform)).then(function(resp){return formatResponse(resp)})},setIsPubliclyDownloadable:function(queue_id,is_public){return $q.when(Api.setIsPubliclyDownloadable(project_id,queue_id,is_public)).then(function(resp){return formatResponse(resp)})},setIsResultPubliclyReadable:function(queue_id,is_result_public){return $q.when(Api.setIsResultPubliclyReadable(project_id,queue_id,is_result_public)).then(function(resp){return formatResponse(resp)})}}}]),angular.module("monacaIDE").service("CIService",["$q",function($q){var Api=MonacaApi.Ide.Ci,project_id=window.config.projectId;return{fetchLogList:function(param){return $q.when(Api.fetchLogList(project_id,param)).then(function(resp){return response=resp,angular.isObject(response.body)||(response.body=JSON.parse(response.body)),response.body;var response})}}}]),angular.module("monacaIDE").service("ContainerService",["$q",function($q){return{removeTerminal:function(projectId){return $q.when(MonacaApi.Ide.Terminal.removeTerminal(projectId)).then(function(resp){return resp.body.result})}}}]),angular.module("monacaIDE").service("ContinuousIntegrator",["$q",function($q){var Api=MonacaApi.Ide.Ci,project_id=window.config.projectId;function formatResponse(response){return"error"===(response=response.body).status?$q.reject(response):$q.resolve(response.result)}return{fetch:function(){return $q.when(Api.getCiConfigs(project_id)).then(formatResponse.bind(this))},save:function(config){return $q.when(Api.saveCiConfigs(project_id,config)).then(formatResponse.bind(this))},enable:function(enabled){return $q.when(Api.enableCi(project_id,enabled)).then(formatResponse.bind(this))}}}]),angular.module("monacaIDE").service("CordovaPluginService",["$q",function($q){var Api=MonacaApi.Ide.Cordova,BuildApi=MonacaApi.Ide.Build,project_id=window.config.projectId;function formatResponse(response){return angular.isObject(response.body)||(response.body=JSON.parse(response.body)),response.body}return{list:function(){return $q.when(Api.list(project_id,!0)).then(formatResponse.bind(this))},listEnabled:function(){return $q.when(Api.listEnabled(project_id)).then(formatResponse.bind(this))},versionList:function(){return $q.when(Api.versionList(project_id)).then(formatResponse.bind(this))},getCordovaRegistryIoPlugins:function(){return $q.when(Api.getCordovaRegistryIoPlugins(project_id)).then(formatResponse.bind(this))},enable:function(plugin_id){return $q.when(Api.enable(project_id,plugin_id)).then(formatResponse.bind(this)).catch(formatResponse.bind(this))},disable:function(plugin_id){return $q.when(Api.disable(project_id,plugin_id)).then(formatResponse.bind(this))},importFile:function(file){return $q.when(Api.importFile(project_id,file)).then(formatResponse.bind(this))},switchCordovaVersion:function(version){return $q.when(Api.switchCordovaVersion(project_id,version)).then(formatResponse.bind(this)).catch(formatResponse.bind(this))},getPluginSettings:function(plugin_id){return $q.when(Api.getPluginSettings(project_id,plugin_id)).then(formatResponse.bind(this))},getPluginVersionCollection:function(plugin_id){return $q.when(Api.getPluginVersionCollection(project_id,plugin_id)).then(formatResponse.bind(this))},updatePluginSettings:function(params){return $q.when(Api.updatePluginSettings(project_id,params)).then(formatResponse.bind(this))},hasAssetEncryptionPassword:function(){return $q.when(BuildApi.canBuildIosApp(project_id)).then(formatResponse.bind(this))},saveAssetsEncryptPassword:function(password,password_confirm){return $q.when(Api.saveAssetsEncryptPassword(project_id,password,password_confirm)).then(formatResponse.bind(this))},getInAppUpdaterSetting:function(){return $q.when(Api.getInAppUpdaterSetting(project_id)).then(formatResponse.bind(this))},getInAppUpdater4Setting:function(){return $q.when(Api.getInAppUpdater4Setting(project_id)).then(formatResponse.bind(this))},saveInAppUpdaterSetting:function(mode,url){return $q.when(Api.saveInAppUpdaterSetting(project_id,mode,url)).then(formatResponse.bind(this))},saveInAppUpdater4Setting:function(mode,url){return $q.when(Api.saveInAppUpdater4Setting(project_id,mode,url)).then(formatResponse.bind(this))},importCordovaPluginPath:function(name){return $q.when(Api.importCordovaPluginPath(project_id,name)).then(formatResponse.bind(this))},importCordovaPluginFile:function(file){return $q.when(Api.importCordovaPluginFile(project_id,file)).then(formatResponse.bind(this))},fetchRegistryData:function(registry,plugin){return $q.when(Api.fetchRegistryData(registry,plugin)).then(formatResponse.bind(this))}}}]),angular.module("monacaIDE").service("CordovaService",["$q",function($q){var Api=MonacaApi.Ide.Cordova,project_id=window.config.projectId;return{upgradeVersion:function(language){return $q.when(Api.upgradeVersion(project_id)).then(function(resp){return resp.body})}}}]),angular.module("monacaIDE").service("DeployServiceIntegrator",["$q",function($q,BaseApi){var Api=MonacaApi.Ide.Deploy;function formatResponse(response){return"error"===(response=response.body).status?$q.reject(response):$q.resolve(response)}return{fetchServices:function(){return $q.when(Api.getAvailableBackendServiceCollection()).then(formatResponse.bind(this))},fetchOwned:function(){return $q.when(Api.getUsersBackendServiceCollection()).then(formatResponse.bind(this))},add:function(formData){return $q.when(Api.addUserOwnedBackendService(formData)).then(formatResponse.bind(this))},remove:function(service,alias){return $q.when(Api.removeUserOwnedBackendService(service,alias)).then(function(resp){return formatResponse(resp)})},distributeApp:function(project_id,service_type,service_alias,service_optional_params,build_queue_id,ci_queue_id){return $q.when(Api.distributeApp(project_id,service_type,service_alias,service_optional_params,build_queue_id,ci_queue_id)).then(function(resp){return formatResponse(resp)})}}}]),angular.module("monacaIDE").service("Dialog",["$http","$q","$uibModal","gettextCatalog",function($http,$q,$modal,gettextCatalog){var GENERAL_DIALOG_TITLE=gettextCatalog.getString("Monaca IDE");return{alert:function(msg,title){return $modal.open({templateUrl:"commonDialogs/AlertDialog.html",controller:"AlertController",windowClass:"alert-window",resolve:{title:function(){return title||GENERAL_DIALOG_TITLE},message:function(){return msg}}}).result},confirm:function(msg,title){return $modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",windowClass:"confirm-window",resolve:{title:function(){return title||GENERAL_DIALOG_TITLE},message:function(){return msg}}}).result},confirmWithCallback:function(msg,title,callback){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmWithCallbackController",windowClass:"confirm-window",resolve:{title:function(){return title||GENERAL_DIALOG_TITLE},message:function(){return msg},callback:function(){return function(){var dfd=$q.defer();return callback().then(function(result){dfd.resolve(result)},function(result){dfd.reject(result)}),dfd.promise}}}})}}}]);class EditorTabService{constructor(Constant,GoldenLayoutService,ProjectFileService,PubSub,gettextCatalog,TerminalService,ProjectFactory,CommonFunctionService,$interval){this.Constant=Constant,this.GoldenLayoutService=GoldenLayoutService,this.ProjectFileService=ProjectFileService,this.PubSub=PubSub,this.gettextCatalog=gettextCatalog,this.TerminalService=TerminalService,this.ProjectFactory=ProjectFactory,this.CommonFunctionService=CommonFunctionService,this.$interval=$interval,this._subscribed=!1,this.intervalId=null,this.setActiveEditorTabId=this.setActiveEditorTabId.bind(this),this.onViewOpened=this.onViewOpened.bind(this),this.onViewClosed=this.onViewClosed.bind(this),this.informUser=this.informUser.bind(this),this._subscribedEditorEvents=this._subscribedEditorEvents.bind(this),this.PubSub.subscribe(this.Constant.EVENT.LAYOUT_READY,()=>{this._subscribedEditorEvents()}),this._startCheckingInterval()}_startCheckingInterval(){this.intervalId=this.$interval(()=>{!this._subscribed&&this.GoldenLayoutService.isLayoutReady()&&this._subscribedEditorEvents()},1e3)}_stopCheckingInterval(){this.$interval.cancel(this.intervalId),this.intervalId=null}_subscribedEditorEvents(){try{this.PubSub.subscribe(this.Constant.EVENT.SET_ACTIVE_EDITOR_TAB,this.setActiveEditorTabId),this.PubSub.subscribe(this.Constant.EVENT.VIEW_OPENED,this.onViewOpened),this.PubSub.subscribe(this.Constant.EVENT.VIEW_SHOWN,this.onViewOpened),this.PubSub.subscribe(this.Constant.EVENT.VIEW_CLOSED,this.onViewClosed),this._subscribed=!0,this._stopCheckingInterval()}catch(e){const errorMessage=this.gettextCatalog.getString("Some modules are not loaded properly. Please refresh the browser.");console.error(e),console.log(errorMessage),this.PubSub.publish(this.Constant.EVENT.NOTIFY_USER,{className:"danger",content:errorMessage}),this._stopCheckingInterval()}}setActiveEditorTabId(opts){this._activeEditorTabId&&this._activeEditorTabId===opts.id||(this._activeEditorTabId=opts.id,this.PubSub.publish(this.Constant.EVENT.ACTIVE_EDITOR_TAB_CHANGED,{id:opts.id}))}getActiveEditorTabId(){return this._activeEditorTabId}isActiveTab(id){return this._activeEditorTabId===id}onViewOpened(opts){opts.componentName===this.Constant.VIEW.EDITOR_VIEW?this.setActiveEditorTabId({id:opts.componentId}):this.setActiveEditorTabId({id:null})}onViewClosed(opts){opts.componentName===this.Constant.VIEW.EDITOR_VIEW&&opts.componentId===this.getActiveEditorTabId()&&this.setActiveEditorTabId({id:null})}loadFile(filePath){return this.ProjectFileService.fileRead(filePath)}informUser(messageType,message,responseError,filePath){if(this.PubSub.publish(this.Constant.EVENT.NOTIFY_USER,{className:messageType,content:message}),"/package.json"===filePath&&"danger"===messageType&&"local"!==this.ProjectFactory.getEnvironmentType()){let errorMessage="";errorMessage=responseError||message,MonacaApi.Ide.Terminal.alertEmail(window.config.projectId,errorMessage)}}preventSavingPackageJsonWithSyntaxError(filePath,content){return"/package.json"!==filePath||this.CommonFunctionService.isValidJson(content)?Promise.resolve():Promise.reject(new Error(this.gettextCatalog.getString("Syntax error")))}saveFile(filePath,content){return this.preventSavingPackageJsonWithSyntaxError(filePath,content).then(()=>this.ProjectFileService.fileSave(filePath,content).then(result=>{const isSuccess="ok"===result.body.status,SuccessMessage=this.gettextCatalog.getString("File has been saved."),FailedMessage=this.gettextCatalog.getString("File failed to save"),FailedDetectChangeMessage=this.gettextCatalog.getString("Failed to detect file changes. Please refresh the preview panel for latest change.");return isSuccess?(this.informUser("success",SuccessMessage),this.CommonFunctionService.isTerminalService()?"local"===this.ProjectFactory.getEnvironmentType()||this.TerminalService.triggerFileChange(filePath.substring(1),content).then(response=>{response&&"ok"!==response.data&&this.informUser("danger",FailedDetectChangeMessage,response.data,filePath)}).catch(err=>{this.informUser("danger",FailedDetectChangeMessage,err.data,filePath)}):this.PubSub.publish(this.Constant.EVENT.PREVIEWER_VIEW_URL_REFRESH)):this.informUser("danger",FailedMessage,"",filePath),isSuccess}).catch(err=>{this.informUser("danger",this.gettextCatalog.getString("File failed to save")+`: ${err.body.message}`,`could not save from backend: ${err.body.message}`,filePath)}))}}EditorTabService.$inject=["Constant","GoldenLayoutService","ProjectFileService","PubSub","gettextCatalog","TerminalService","ProjectFactory","CommonFunctionService","$interval"],angular.module("monacaIDE").service("EditorTabService",EditorTabService);class GoldenLayoutService{constructor($compile,$rootScope,$templateCache,Constant,ProjectFactory,FileUtilityFactory,PubSub,gettextCatalog,CommonFunctionService){this.$compile=$compile,this.$rootScope=$rootScope,this.$templateCache=$templateCache,this.Constant=Constant,this.ProjectFactory=ProjectFactory,this.FileUtilityFactory=FileUtilityFactory,this.PubSub=PubSub,this.gettextCatalog=gettextCatalog,this.CommonFunctionService=CommonFunctionService,this._isLayoutReady=!1,this.saveLayoutConfig=_.debounce(this.saveLayoutConfig,1e3).bind(this),this.areViewsOpen=this.areViewsOpen.bind(this),this.LOCALSTORAGE_KEY="golden_layout_config_"+window.config.projectId,this.COMPONENT_ID_PREFIX="mn-gl-",this.COMPONENTS_CONFIG={project:{goldenLayoutConfig:{componentName:this.Constant.VIEW.PROJECT_VIEW,type:"component",title:gettextCatalog.getString("Files"),width:12,isClosable:!1},events:{toggle:this.Constant.EVENT.TOGGLE_PROJECT_VIEW},templateUrl:"project.html"},editor:{goldenLayoutConfig:{componentName:this.Constant.VIEW.EDITOR_VIEW,componentState:{url:ProjectFactory.getDefaultFileToOpen()},type:"component",title:"",width:80},events:{toggle:this.Constant.EVENT.TOGGLE_EDITOR_VIEW},templateFn:_.template('<editor-tab file="<%= url %>"></editor-tab>'),automaticallyShareStackWith:[this.Constant.VIEW.GENERIC_IFRAME_VIEW,this.Constant.VIEW.GENERIC_ANGULAR_VIEW,this.Constant.VIEW.PLACEHOLDER_VIEW]},debugger:{goldenLayoutConfig:{componentName:this.Constant.VIEW.DEBUGGER_VIEW,type:"component",title:this.gettextCatalog.getString("Debugger"),height:20,icon:"debugger"},events:{toggle:this.Constant.EVENT.TOGGLE_DEBUGGER_VIEW},templateUrl:"debugger.html",automaticallyShareStackWith:[this.Constant.VIEW.TERMINAL_VIEW,this.Constant.VIEW.TRANSPILE_LOG_VIEW]},terminal:{goldenLayoutConfig:{componentName:this.Constant.VIEW.TERMINAL_VIEW,componentState:{id:"terminal_"+Math.random().toString(36).substring(7),templateUrl:"terminal.html"},type:"component",title:this.gettextCatalog.getString("Terminal"),width:20,icon:"terminal"},events:{toggle:this.Constant.EVENT.TOGGLE_TERMINAL_VIEW},templateUrl:"terminal.html",automaticallyShareStackWith:[this.Constant.VIEW.DEBUGGER_VIEW,this.Constant.VIEW.TRANSPILE_LOG_VIEW]},transpile:{goldenLayoutConfig:{componentName:this.Constant.VIEW.TRANSPILE_LOG_VIEW,type:"component",title:this.gettextCatalog.getString("Preview Log"),width:20,icon:"transpile",isClosable:!1},events:{toggle:this.Constant.EVENT.TOGGLE_TRANSPILE_LOG_VIEW},templateUrl:"transpile_log.html",automaticallyShareStackWith:[this.Constant.VIEW.DEBUGGER_VIEW,this.Constant.VIEW.TERMINAL_VIEW]},previewer:{goldenLayoutConfig:{componentName:this.Constant.VIEW.PREVIEWER_VIEW,type:"component",title:this.gettextCatalog.getString("Device Preview"),width:16,componentState:{id:1}},events:{toggle:this.Constant.EVENT.TOGGLE_PREVIEWER_VIEW},templateFn:_.template('<device-previewer previewer-id="<%= id %>"></device-previewer>')},iframe:{goldenLayoutConfig:{componentName:this.Constant.VIEW.GENERIC_IFRAME_VIEW,type:"component",title:"",width:80},events:{toggle:this.Constant.EVENT.TOGGLE_GENERIC_IFRAME_VIEW},templateFn:_.template('<iframe style="height: 100%; width: 100%;" src="<%= url %>"></iframe>'),automaticallyShareStackWith:[this.Constant.VIEW.EDITOR_VIEW,this.Constant.VIEW.GENERIC_ANGULAR_VIEW,this.Constant.VIEW.PLACEHOLDER_VIEW]},genericAngular:{goldenLayoutConfig:{componentName:this.Constant.VIEW.GENERIC_ANGULAR_VIEW,type:"component",title:"",width:80},events:{toggle:this.Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW},automaticallyShareStackWith:[this.Constant.VIEW.EDITOR_VIEW,this.Constant.VIEW.GENERIC_IFRAME_VIEW,this.Constant.VIEW.PLACEHOLDER_VIEW]},placeholder:{goldenLayoutConfig:{componentName:this.Constant.VIEW.PLACEHOLDER_VIEW,componentState:{isClosable:!1},type:"component"},templateFn:_.template('<div class="placeholder-view"></div>')}};let bottomStack=[];this.ProjectFactory.hasDebuggerService()&&bottomStack.push(this.COMPONENTS_CONFIG.debugger.goldenLayoutConfig),this.ProjectFactory.isTranspileLogEnabled()&&bottomStack.push(this.COMPONENTS_CONFIG.transpile.goldenLayoutConfig),this.ProjectFactory.isGenericProject()&&this.CommonFunctionService.isTerminalService()&&bottomStack.push(this.COMPONENTS_CONFIG.terminal.goldenLayoutConfig);let editorStack={type:"column",content:[{type:"stack",activeItemIndex:0,content:[this.COMPONENTS_CONFIG.placeholder.goldenLayoutConfig]}]};this.ProjectFactory.isCordovaProject()&&(editorStack.content[0].content.push(this.COMPONENTS_CONFIG.editor.goldenLayoutConfig),editorStack.content[0].activeItemIndex=1),bottomStack&&bottomStack.length>=1&&editorStack.content.push({type:"stack",content:bottomStack}),this.DEFAULT_LAYOUT_CONFIG={content:[{type:"row",content:[this.COMPONENTS_CONFIG.project.goldenLayoutConfig,editorStack]}],dimensions:{borderWidth:2,headerHeight:30,minItemWidth:175,minItemHeight:100},settings:{showPopoutIcon:!1,showCloseIcon:!1,tabControlOffset:40,reorderOnTabMenuClick:!1}},this.ProjectFactory.hasPreviewerService()&&this.DEFAULT_LAYOUT_CONFIG.content[0].content.push(this.COMPONENTS_CONFIG.previewer.goldenLayoutConfig)}init(element){const goldenLayoutElement=angular.element(element[0].querySelector(".golden-layout-container"));this.layoutManager=window.layoutManager=new GoldenLayout(this.getSavedConfig(),goldenLayoutElement),this.registerComponents(this.COMPONENTS_CONFIG),this.addComponentEventListeners(this.COMPONENTS_CONFIG),this.layoutManager.on("activeContentItemChanged",contentItem=>{"editor-view"===contentItem.componentName&&this.PubSub.publish(this.Constant.EVENT.FOCUS_EDITOR,contentItem)}),this.layoutManager.on("stateChanged",()=>this.saveLayoutConfig()),this.PubSub.subscribe(this.Constant.EVENT.IDE_READY,()=>{try{if(this.layoutManager.init(),this.ProjectFactory.isTranspileLogEnabled()){this.getComponentInstanceById(this.getComponentId(this.Constant.VIEW.TRANSPILE_LOG_VIEW))||this.createComponent(this.Constant.VIEW.TRANSPILE_LOG_VIEW)}this._setProjectViewHeaderVisibility()}catch(e){const errorMessage=this.gettextCatalog.getString("Some modules are not loaded properly. Please refresh the browser.");console.error(e),console.log(errorMessage),this.PubSub.publish(this.Constant.EVENT.NOTIFY_USER,{className:"danger",content:errorMessage})}finally{this.PubSub.publish(this.Constant.EVENT.LAYOUT_READY),this._isLayoutReady=!0}}),window.addEventListener("resize",this.layoutManager._resizeFunction)}isLayoutReady(){return this._isLayoutReady}closeAllTabs(){var storedContentConfig=JSON.parse(localStorage.getItem(this.LOCALSTORAGE_KEY));storedContentConfig&&storedContentConfig.content&&this._getAllContentItems(storedContentConfig.content).filter(item=>"component"===item.type&&item.title&&("editor-view"===item.componentName||"previewer-view"===item.componentName||"terminal-view"===item.componentName)).forEach(item=>{var componentID=this.getComponentId(item.componentName,item.componentState);this.closeComponent(componentID,!1)})}closeEditorView(title){try{if(!title)return;var storedContentConfig=JSON.parse(localStorage.getItem(this.LOCALSTORAGE_KEY));if(!storedContentConfig||!storedContentConfig.content)return;this._getAllContentItems(storedContentConfig.content).filter(item=>"component"===item.type&&"editor-view"===item.componentName&&item.title===title).forEach(item=>{var componentID=this.getComponentId(item.componentName,item.componentState);this.closeComponent(componentID,!1)})}catch(error){console.error(error),console.log(`could not close "${title}" tab. please close it manually.`)}}closeAllPreviewerTabs(){var storedContentConfig=JSON.parse(localStorage.getItem(this.LOCALSTORAGE_KEY));storedContentConfig&&storedContentConfig.content&&this._getAllContentItems(storedContentConfig.content).filter(item=>"component"===item.type&&item.title&&item.componentName===this.Constant.VIEW.PREVIEWER_VIEW).forEach(item=>{var componentID=this.getComponentId(item.componentName,item.componentState);this.closeComponent(componentID,!1)})}closeAllPreviewerAndTerminalTabs(){var storedContentConfig=JSON.parse(localStorage.getItem(this.LOCALSTORAGE_KEY));storedContentConfig&&storedContentConfig.content&&this._getAllContentItems(storedContentConfig.content).filter(item=>"component"===item.type&&item.title&&(item.componentName===this.Constant.VIEW.PREVIEWER_VIEW||item.componentName===this.Constant.VIEW.TERMINAL_VIEW)).forEach(item=>{var componentID=this.getComponentId(item.componentName,item.componentState);this.closeComponent(componentID,!1)})}closeAllTerminalTabs(){var storedContentConfig=JSON.parse(localStorage.getItem(this.LOCALSTORAGE_KEY));storedContentConfig&&storedContentConfig.content&&this._getAllContentItems(storedContentConfig.content).filter(item=>"component"===item.type&&item.title&&item.componentName===this.Constant.VIEW.TERMINAL_VIEW).forEach(item=>{var componentID=this.getComponentId(item.componentName,item.componentState);this.closeComponent(componentID,!1)})}getHiddenItems(tabBar){var hiddenItems=[];return this.layoutManager.root.getItemsByType("stack").find(stack=>stack.element.get(0)===$(tabBar).parents(".lm_stack").get(0)).contentItems.forEach(item=>{"lm_tabdropdown_list"===item.tab.element[0].parentElement.className&&hiddenItems.push({title:item.config.title,componentState:item.config.componentState,icon:item.tab.element[0].getAttribute("icon")})}),hiddenItems}closeAllTabsWindow(tabBar){var stackElement=this.layoutManager.root.getItemsByType("stack").find(stack=>stack.element.get(0)===$(tabBar).parents(".lm_stack").get(0));this.closeTabsInStack(stackElement,"all")}closeOtherTabsWindow(tabBar){var stackElement=this.layoutManager.root.getItemsByType("stack").find(stack=>stack.element.get(0)===$(tabBar).parents(".lm_stack").get(0));this.closeTabsInStack(stackElement,"other")}closeTabsInStack(stackElement,mode){stackElement.contentItems.filter(item=>"component"===item.config.type&&item.config.title&&("editor-view"===item.componentName||"previewer-view"===item.componentName||"terminal-view"===item.componentName||"debugger-view"===item.componentName||"generic-angular-view"===item.componentName)).forEach(item=>{var componentID=this.getComponentId(item.componentName,item.config.componentState),component=this.getComponentInstanceById(componentID),stack=component.parent;if("other"===mode&&stack.getActiveContentItem()!==component)this.closeComponent(componentID,!1);else if("active"===mode&&stack.getActiveContentItem()===component){var index=stackElement.contentItems.indexOf(component);this.closeComponent(componentID,!1),1===index&&stackElement.contentItems.length>1&&setTimeout(()=>this.selectTabInStackByIndex(stackElement,1))}else"all"===mode&&this.closeComponent(componentID,!1)})}selectPreviousTabInStack(stackElement){var component=stackElement.getActiveContentItem(),previousIndex=stackElement.contentItems.indexOf(component)-1;previousIndex<0||this.selectTabInStackByIndex(stackElement,previousIndex)}selectNextTabInStack(stackElement){var component=stackElement.getActiveContentItem(),nextIndex=stackElement.contentItems.indexOf(component)+1;nextIndex>=stackElement.contentItems.length||this.selectTabInStackByIndex(stackElement,nextIndex)}selectTabInStackByIndex(stackElement,index){var item=stackElement.contentItems[index];if("component"===item.config.type&&item.config.title&&("editor-view"===item.componentName||"previewer-view"===item.componentName||"terminal-view"===item.componentName||"debugger-view"===item.componentName)){var componentID=this.getComponentId(item.componentName,item.config.componentState);this.focusExistingComponent(componentID)}}getComponentId(componentName,componentState){let componentId;return componentId=componentState&&componentState.id?componentState.id:componentState&&componentState.url?this.FileUtilityFactory.getDomSafeId(componentState.url):componentName,this.COMPONENT_ID_PREFIX+componentId}getComponentConfig(componentName){return _.find(this.COMPONENTS_CONFIG,component=>component.goldenLayoutConfig.componentName===componentName)}getSavedConfig(){let storedContentConfig,hasTranspile=!1,hasTerminal=!1,hasPreviewer=!1,hasDebugger=!1;try{storedContentConfig=JSON.parse(localStorage.getItem(this.LOCALSTORAGE_KEY))}catch(e){}return storedContentConfig?(this._getAllContentItems(storedContentConfig.content).filter(item=>"component"===item.type&&item.title).forEach(item=>{const defaultComponentConfig=_.find(this.COMPONENTS_CONFIG,c=>c.goldenLayoutConfig.componentName===item.componentName);hasTranspile||item.componentName!==this.Constant.VIEW.TRANSPILE_LOG_VIEW||(hasTranspile=!0),hasTerminal||item.componentName!==this.Constant.VIEW.TERMINAL_VIEW||(hasTerminal=!0),hasPreviewer||item.componentName!==this.Constant.VIEW.PREVIEWER_VIEW||(hasPreviewer=!0),hasDebugger||item.componentName!==this.Constant.VIEW.DEBUGGER_VIEW||(hasDebugger=!0),defaultComponentConfig&&defaultComponentConfig.goldenLayoutConfig.title&&(item.title=defaultComponentConfig.goldenLayoutConfig.title)}),!this.ProjectFactory.isTranspileLogEnabled()&&hasTranspile?this.DEFAULT_LAYOUT_CONFIG:!this.CommonFunctionService.isTerminalService()&&hasTerminal?this.DEFAULT_LAYOUT_CONFIG:!this.ProjectFactory.hasPreviewerService()&&hasPreviewer?this.DEFAULT_LAYOUT_CONFIG:!this.ProjectFactory.hasDebuggerService()&&hasDebugger?this.DEFAULT_LAYOUT_CONFIG:angular.extend({},this.DEFAULT_LAYOUT_CONFIG,storedContentConfig)):this.DEFAULT_LAYOUT_CONFIG}saveLayoutConfig(){if(!this.allLayoutsInitialised(this.layoutManager))return void setTimeout(this.saveLayoutConfig,1e3);const configToSave={content:this.layoutManager.toConfig().content};localStorage.setItem(this.LOCALSTORAGE_KEY,JSON.stringify(configToSave))}getComponentCloseButton(componentId,isPrefix){const selector=`.lm_tab[target-id${isPrefix?"^":""}=${componentId+=isPrefix?"-":""}] .lm_close_tab`;return this.layoutManager.container.find(selector)}closeComponent(componentId,isPrefix){let toClose=this.getComponentCloseButton(componentId,isPrefix);isPrefix?toClose.each((i,btn)=>btn.click()):toClose.click()}registerComponents(components){const _this=this;_.each(components,componentConfig=>{this.layoutManager.registerComponent(componentConfig.goldenLayoutConfig.componentName,function(container,componentState){_this._registerComponent(container,componentState)})})}_registerComponent(container,componentState){const componentId=this.getComponentId(componentState.componentName,componentState),componentConfig=this.getComponentConfig(componentState.componentName),containerEl=container.getElement();containerEl.attr("component-name",componentState.componentName),containerEl.attr("id",this.getComponentId(componentConfig.goldenLayoutConfig.componentName,componentState)),componentConfig.templateFn?containerEl.html(this.$compile(componentConfig.templateFn(componentState))(this.$rootScope)):componentState.templateUrl?containerEl.html(this.$compile(this.$templateCache.get(componentState.templateUrl))(this.$rootScope)):containerEl.html(this.$compile(this.$templateCache.get(componentConfig.templateUrl))(this.$rootScope));const eventOpts={componentName:componentState.componentName,componentId:componentId};container.on("open",()=>this.PubSub.publish(this.Constant.EVENT.VIEW_OPENED,eventOpts)),container.on("show",()=>{container.tab.contentItem.config.isClosable&&container.tab.closeElement.fadeTo(1,1),this.PubSub.publish(this.Constant.EVENT.VIEW_SHOWN,Object.assign(eventOpts,{containerWidth:container.width,containerHeight:container.height}))}),container.on("hide",()=>{container.tab.contentItem.config.isClosable&&container.tab.closeElement.fadeTo(1,0),this.PubSub.publish(this.Constant.EVENT.VIEW_HIDE,eventOpts)}),container.on("resize",()=>{this.PubSub.publish(this.Constant.EVENT.VIEW_RESIZE,Object.assign(eventOpts,{containerWidth:container.width,containerHeight:container.height}))}),container.on("destroy",()=>{this._onContainerDestroy(eventOpts),this.PubSub.publish(this.Constant.EVENT.VIEW_CLOSED,eventOpts)})}_onContainerDestroy(opts){const component=this.getComponentInstanceById(opts.componentId),stack=component.parent;let scopeElment=component.element.find("[ng-controller]");scopeElment.length>0&&angular.element(scopeElment).scope().$destroy(),stack&&stack.contentItems&&stack.contentItems.length>1&&setTimeout(()=>stack.setActiveContentItem(stack.getActiveContentItem()))}addComponentEventListeners(components){_.each(components,currentComponent=>{currentComponent.events&&currentComponent.events.toggle&&this.PubSub.subscribe(currentComponent.events.toggle,(opts={})=>{const componentId=this.getComponentId(currentComponent.goldenLayoutConfig.componentName,opts.componentState),componentAlreadyExists=this.componentAlreadyExists(componentId,!1);componentAlreadyExists&&!0!==opts.open?this.closeComponent(componentId,!1):componentAlreadyExists&&!0===opts.open?(this.focusExistingComponent(componentId),currentComponent.goldenLayoutConfig.componentName===this.Constant.VIEW.GENERIC_IFRAME_VIEW&&opts.componentState.page&&this.postIframeMessage(componentId,opts.componentState.page)):!componentAlreadyExists&&opts.isDir?this.componentAlreadyExists(componentId,!0)&&this.closeComponent(componentId,!0):componentAlreadyExists||!1===opts.open||this.createComponent(currentComponent.goldenLayoutConfig.componentName,opts.componentState,this._findStackFromChildElement(opts.tabBar))})}),this.layoutManager.on("tabCreated",tab=>{let title,icon;tab.header.tabDropdownButton&&tab.header.tabDropdownButton.element&&tab.header.tabDropdownButton.element[0]&&tab.header.tabDropdownButton.element[0].parentElement&&tab.header.tabDropdownButton.element[0].parentElement.removeChild(tab.header.tabDropdownButton.element[0]),tab.element.attr("target-id",this.getComponentId(tab.contentItem.componentName,tab.contentItem.config.componentState)),tab.contentItem.config.componentState&&tab.contentItem.config.componentState.title?title=tab.contentItem.config.componentState.title:tab.contentItem.config.componentState&&tab.contentItem.config.componentState.url&&(title=this.FileUtilityFactory.getFileName(tab.contentItem.config.componentState.url),icon=this.FileUtilityFactory.getExtName(tab.contentItem.config.componentState.url)),title&&tab.contentItem.setTitle(title),(icon=icon||(tab.contentItem.config.componentState&&tab.contentItem.config.componentState.icon?tab.contentItem.config.componentState.icon:tab.contentItem.config.icon))&&tab.element.attr("icon",icon),tab.contentItem.componentName===this.Constant.VIEW.EDITOR_VIEW&&tab.closeElement.off("click").on("click",()=>{tab.element.hasClass("unsaved")&&!window.confirm(this.gettextCatalog.getString("You have unsaved changes. Are you sure you want to close this file?"))||tab.contentItem.remove()}),!1===tab.contentItem.config.isClosable&&tab.element.addClass("not-closable"),setTimeout(()=>{tab.isActive||tab.closeElement.fadeTo(1,0),tab.contentItem.config.isClosable&&tab.element.hover(()=>{tab.closeElement.fadeTo(1,1)},()=>{tab.isActive||tab.closeElement.fadeTo(1,0)})}),setTimeout(()=>this._setProjectViewHeaderVisibility()),this.PubSub.publish(this.Constant.EVENT.TAB_CREATED,tab)}),this.PubSub.subscribe(this.Constant.EVENT.PREVIEWER_VIEW_DEVICE_CHANGED,opts=>{this.setComponentTitle(opts.componentId,opts.device.name,`${opts.device.platform.toLowerCase()}-muted`)}),this.PubSub.subscribe(this.Constant.EVENT.CLOSE_A_VIEW,componentId=>{componentId&&this.closeComponent(componentId,!1)}),this.layoutManager.on("stackCreated",stack=>{setTimeout(()=>{this._isAloneProjectViewStack(stack)&&this._disableDropOnStack(stack)}),this.PubSub.publish(this.Constant.EVENT.GL_STACK_CREATED,{stack:stack})})}componentAlreadyExists(componentId,isPrefix){return this.getComponentCloseButton(componentId,isPrefix).length>0}_findStackFromChildElement(element){const stackElement=$(element).parents(".lm_stack").get(0);if(stackElement)return this.layoutManager.root.getItemsByType("stack").find(stack=>stack.element.get(0)===stackElement)}createComponent(componentName,componentState,destinationStack){const componentToCreate=this.getComponentConfig(componentName),config=angular.extend({},componentToCreate.goldenLayoutConfig,{componentState:componentState});this.layoutManager.root.contentItems.length||this.layoutManager.root.addChild({type:"row"}),(destinationStack||this._findExistingStackForComponent(componentName)||this.layoutManager.root.contentItems[0]).addChild(config)}_findExistingStackForComponent(componentName){const fullConfig=this.getComponentConfig(componentName);return this.layoutManager.root.getItemsByType("stack").find(stack=>stack.contentItems.find(stackChild=>stackChild.config.componentName===componentName||fullConfig.automaticallyShareStackWith&&fullConfig.automaticallyShareStackWith.includes(stackChild.config.componentName)))}focusExistingComponent(componentId){const component=this.getComponentInstanceById(componentId);component.parent.setActiveContentItem(component)}getComponentInstanceById(componentId){return this.layoutManager.root.getItemsByType("component").find(item=>this.getComponentId(item.config.componentName,item.config.componentState)===componentId)}postIframeMessage(componentId,message){console.log(message),this.layoutManager.container.find(`#${componentId} iframe`)[0].contentWindow.postMessage(message,"*")}isInitialised(){return!!this.layoutManager&&this.layoutManager.isInitialised}allLayoutsInitialised(){return this.layoutManager.isInitialised&&_.every(this.layoutManager.openPopouts,popout=>popout.isInitialised)}resetLayout(){localStorage.removeItem(this.LOCALSTORAGE_KEY),setTimeout(()=>location.reload(),500)}areViewsOpen(){return!!(this.layoutManager&&this.layoutManager.root&&this.layoutManager.root.contentItems&&this.layoutManager.root.contentItems.length>0)}areThereUncleanComponents(){return document.querySelectorAll("li.lm_tab.unsaved").length>=1}setComponentCleanState(componentId,editorState){this._getTabElement(componentId).toggleClass("unsaved",!editorState.isClean),this.PubSub.publish(this.Constant.EVENT.UPDATE_TAB_CLEAN_STATE,{id:componentId,isClean:editorState.isClean,canUndo:editorState.canUndo,canRedo:editorState.canRedo,isAnyUnsaved:this.areThereUncleanComponents()})}getComponentCleanState(componentId,isClean){return this._getTabElement(componentId).hasClass("unsaved")}setComponentTitle(componentId,title,icon){const component=this.getComponentInstanceById(componentId);if(component&&(component.setTitle(title),icon)){this._getTabElement(componentId).attr("icon",icon),component.container.extendState({icon:icon})}}_getTabElement(componentId){return $(`.lm_tab[target-id=${componentId}]`)}_isAloneProjectViewStack(stack){return!(!stack||1!==stack.contentItems.length||stack.contentItems[0].componentName!==this.Constant.VIEW.PROJECT_VIEW)}_disableDropOnStack(stack){const originalGetAreaFn=stack._$getArea;stack._$getArea=function(){let area=originalGetAreaFn.call(stack);return Object.assign(area,{x1:-100,x2:-100,y1:-100,y2:-100,surface:0}),Object.defineProperty(stack._contentAreaDimensions,"header",{value:{},enumerable:!1}),area}}_setProjectViewHeaderVisibility(){const stack=this.getComponentInstanceById(this.getComponentId(this.Constant.VIEW.PROJECT_VIEW)).parent,isLeftmostStack=0===stack.parent.contentItems.indexOf(stack),isAloneProjectViewStack=this._isAloneProjectViewStack(stack),shouldHideHeader=isLeftmostStack&&isAloneProjectViewStack;stack.element.toggleClass("project-view-stack",isAloneProjectViewStack).toggleClass("hide-header",shouldHideHeader)}_getAllContentItems(content){let allContentItems=[],addChildren=function(contentItem){if(allContentItems.push(contentItem),contentItem.content instanceof Array)for(let i=0;i<contentItem.content.length;i++)addChildren(contentItem.content[i])};return addChildren(content[0]),allContentItems}}GoldenLayoutService.$inject=["$compile","$rootScope","$templateCache","Constant","ProjectFactory","FileUtilityFactory","PubSub","gettextCatalog","CommonFunctionService"],angular.module("monacaIDE").service("GoldenLayoutService",GoldenLayoutService),angular.module("monacaIDE").service("InAppUpdaterService",["$q",function($q){var Api=MonacaApi.Ide.InAppUpdater,project_id=window.config.projectId;return{getRemotePackgeList:function(param){return $q.when(Api.packageList(project_id)).then(function(resp){return response=resp,angular.isObject(response.body.result)||(response.body.result=JSON.parse(response.body.result)),response.body.result;var response})}}}]),angular.module("monacaIDE").service("OneTimePassApiService",["$q",function($q){var Api=MonacaApi.Ide.User;return{generate:function(){return $q.when(Api.generateOneTimePass()).then(function(resp){return resp.body})},load:function(){return $q.when(Api.loadOneTimePass()).then(function(resp){return resp.body})}}}]),angular.module("monacaIDE").service("ProjectFileService",["$q",function($q){var Api=MonacaApi.Ide.ProjectFile,project_id=window.config.projectId;function formatResponse(response){return angular.isObject(response.body)||(response.body=JSON.parse(response.body)),response.body}return{getFolderTree:function(){return Api.getFolderTree(project_id,{is_show_hidden:1,is_show_deleted:0}).then(function(resp){var body=formatResponse(resp);return body&&body.result&&body.result.items?$q.resolve(body):$q.reject(body)}).catch(function(err){return $q.reject(err)})},move:function(oldPath,newPath){return Api.move(project_id,oldPath,newPath)},remove:function(path,success,fail){return Api.remove(project_id,path)},isExist:function(path){return Api.isExist(project_id,path)},mkdir:function(path){return Api.mkdir(project_id,path)},save:function(path,content,contentFrom,templateId){return contentFrom=contentFrom||"",templateId=templateId||"",Api.fileSave(project_id,path,content,contentFrom,templateId)},upload:function(path,file){return"#/"===path&&(path="/"),Api.fileUpload(project_id,path,file)},copy:function(oldPath,newPath){return Api.copy(project_id,oldPath,newPath)},getFileReadUrl:function(path){return Api.getFileReadUrl(project_id,path)},getDirExportUrl:function(path){return Api.getDirExportUrl(project_id,path)},fileRead:Api.fileRead.bind(this,project_id),fileSave:Api.fileSave.bind(this,project_id),grep:function(keyword,isNotCaseSensitive,isRegEx){return Api.grep(project_id,{keyword:keyword,is_ignorecase:isNotCaseSensitive,is_regex:isRegEx}).then(function(resp){var body=formatResponse(resp);return body&&body.result?$q.resolve(body.result):$q.reject(body)})}}}]),angular.module("monacaIDE").service("PublishApiService",["$q",function($q){var Api=MonacaApi.Ide.Project,project_id=window.config.projectId;return{isPublished:function(){return $q.when(Api.isPublished(project_id)).then(function(resp){return resp.body.result})},togglePublish:function(){return $q.when(Api.togglePublish(project_id)).then(function(resp){return resp.body.result})}}}]),angular.module("monacaIDE").service("ServiceIntegrationService",["$q",function($q){var Api=MonacaApi.Ide.ServiceIntegration,project_id=window.config.projectId;return{list:function(){return $q.when(Api.list(project_id)).then(function(response){return angular.isObject(response.body)||(response.body=JSON.parse(response.body)),response.body}.bind(this))}}}]),angular.module("monacaIDE").service("ShareApiService",["$q",function($q){var Api=MonacaApi.Ide.Project,project_id=window.config.projectId;return{ROLE_DEVELOPER:"developer",ROLE_TESTER:"tester",getSharedUsers:function(){return $q.when(Api.getSharedUsers(project_id)).then(function(resp){return resp})},addSharedUser:function(emails,role,isNotify){return _.isArray(emails)&&(emails=emails.join("\n")),$q.when(Api.addSharedUser(project_id,emails,role,isNotify)).then(function(resp){return resp})},removeSharedUser:function(email,_project_id){var project_id=_project_id||window.config.projectId;return $q.when(Api.removeSharedUser(project_id,email)).then(function(resp){return resp})},updateUserRole:function(email,role){return $q.when(Api.updateSharedUserRole(project_id,email,role)).then(function(resp){return resp})}}}]),angular.module("monacaIDE").service("TerminalService",["PubSub","Constant","gettextCatalog","$http","TerminalFactory","$q",function(PubSub,Constant,gettextCatalog,$http,TerminalFactory,$q){return{startTerminal:function(data){if(TerminalFactory.isConnectingToServer()||!TerminalFactory.isNetworkStable())return;TerminalFactory.setContainerID(""),TerminalFactory.connectingToServer(!0);let projectId=window.config.projectId;MonacaApi.Ide.Terminal.startTerminal(projectId).then(function(response){let result=response.body.result;if(TerminalFactory.setContainerID(result.containerId),TerminalFactory.setTerminalURL(result.serverAppUrl),TerminalFactory.setCurrentPreviewPort(result.previewAppPort),data){let userApp=result.userApp;TerminalFactory.setPreviewPorts(userApp);let terminalServerAuth=$q.when($http.get(result.serverAppAuthUrl,{withCredentials:!0})),previewServerAuth=$q.when($http.get(result.previewAuthUrl,{withCredentials:!0}));$q.all([terminalServerAuth,previewServerAuth]).then(function(res){TerminalFactory.setPreviewUrl(result.previewUrl),data.isTranspile?PubSub.publish(Constant.EVENT.TERMINAL_SERVER_RESPONSE,{response:response,isTranspile:!0}):PubSub.publish(Constant.EVENT.TERMINAL_SERVER_RESPONSE_TERMINAL,{response:response,isTranspile:!1})}).catch(function(err){console.log("authorization failed!"),console.error(err)})}TerminalFactory.connectingToServer(!1)}).catch(function(error){if(TerminalFactory.connectingToServer(!1),error&&(-1===parseInt(error.status,10)||500===parseInt(error.status,10))){TerminalFactory.networkIsNotStable();let message=gettextCatalog.getString("Network unstable. Please check your network connection.");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message}),PubSub.publish(Constant.EVENT.TERMINAL_SERVER_RESPONSE_FAILED,{reason:message})}})},isRequiredToInstallPackages:function(){return new Promise((resolve,reject)=>{let projectId=window.config.projectId;MonacaApi.Ide.Terminal.checkNodeModules(projectId).then(function(response){let isRequired=!1;return response&&response.body.result&&(isRequired=!0),resolve(isRequired)}).catch(function(error){return console.log(error),console.log("fallback: install node_modules packages..."),resolve(!0)})})},triggerFileChange:filePath=>new Promise((resolve,reject)=>{if(!TerminalFactory.isNetworkStable()){const message=gettextCatalog.getString("To disable the terminal feature, try using the IDE's lite mode. This option is available from the Dashboard.");return PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message}),reject(new Error("ERR_NO_CONTAINER"))}let headers={"Content-Type":"application/x-www-form-urlencoded"},url=TerminalFactory.getTerminalFileSaveUrl();$http.post(url,"path="+filePath,{withCredentials:!0,headers:headers}).then(response=>{resolve(response)}).catch(err=>{reject(err)})})}}]),angular.module("monacaIDE").service("UpgradeService",["$q","ProjectService",function($q,ProjectService){let _state=null;return{fetchProjectState:function(){return $q.when(ProjectService.getProjectState()).then(function(state){return _state=state,state})},getProjectState:function(){return(_state=>!!_state&&(_state.constructor===Array||_state.constructor===Object&&0===Object.keys(_state).length))(_state)?{upgradeDevCliEcoSystem:!1,shouldNpmInstall:!1}:_state}}}]),angular.module("monacaIDE").service("VcsApiService",["$q",function($q){var Api=MonacaApi.Ide.Vcs,project_id=window.config.projectId;function formatResponse(response){return"error"===response.body.status?$q.reject(response.body):$q.resolve(response.body)}return{setup:function(type){return $q.when(Api.setup(project_id,type)).then(formatResponse,formatResponse)},configure:function(params){return $q.when(Api.configure(project_id,params)).then(formatResponse,formatResponse)},status:function(){return $q.when(Api.status(project_id)).then(formatResponse,formatResponse)},commit:function(message,files){return $q.when(Api.commit(project_id,message,files)).then(formatResponse,formatResponse)},discard:function(){return $q.when(Api.discard(project_id)).then(formatResponse,formatResponse)},pull:function(branch){return $q.when(Api.pull(project_id,branch)).then(formatResponse,formatResponse)},abortMerge:function(){return $q.when(Api.abortMerge(project_id)).then(formatResponse,formatResponse)},push:function(){return $q.when(Api.push(project_id)).then(formatResponse,formatResponse)},localHistory:function(){return $q.when(Api.localHistory(project_id)).then(formatResponse,formatResponse)},diff:function(commit_id1,commit_id2){return $q.when(Api.diff(project_id,commit_id1,commit_id2)).then(formatResponse,formatResponse)}}}]),angular.module("monacaIDE").service("WebComponentService",["$q",function($q){var Api=MonacaApi.Ide.WebComponent,project_id=window.config.projectId;function formatResponse(response){return angular.isObject(response.body)||(response.body=JSON.parse(response.body)),response.body}return{list:function(keyword){return $q.when(Api.list(project_id,keyword)).then(formatResponse.bind(this))},fetchComponentDetails:function(name,isOffline){return $q.when(Api.fetchComponentDetails(project_id,name,isOffline)).then(formatResponse.bind(this))},install:function(name,version){return $q.when(Api.install(project_id,name,version)).then(formatResponse.bind(this))},uninstall:function(name){return $q.when(Api.uninstall(project_id,name)).then(formatResponse.bind(this))},setLoader:function(componentFiles){return $q.when(Api.setLoader(project_id,componentFiles)).then(formatResponse.bind(this))}}}]),angular.module("monacaIDE").service("WebSocketHandlerService",function(){return{webSocket:null,errorHandler:null,buildLogStorage:{},subscribers:{},getEndpointUrl:function(apiToken){var ideEndpoint=document.createElement("a");ideEndpoint.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE);var wsEndpoint=document.createElement("a");switch(wsEndpoint.href="ws://example.com",ideEndpoint.protocol){case"http:":wsEndpoint.protocol="ws:",wsEndpoint.port="1443";break;case"https:":wsEndpoint.protocol="wss:";break;default:wsEndpoint.protocol="wss:"}return/^ide\./.test(ideEndpoint.hostname)?wsEndpoint.hostname=ideEndpoint.hostname.replace(/^ide\./,"ws."):(console.error('[WebSocketHandlerService] Error: IDE endpoint "'+ideEndpoint.hostname+'" does not start with "ide.".'),wsEndpoint.hostname="ws."+ideEndpoint.hostname,console.error('[WebSocketHandlerService] Fallback to "'+wsEndpoint.hostname+'".')),wsEndpoint.pathname="/ide/subscribe/"+apiToken,wsEndpoint.href},connect:function(apiToken){var self=this;try{if(self.webSocket)return;self.webSocket=new WebSocket(this.getEndpointUrl(apiToken))}catch(ex){return void console.error(ex.message)}self.webSocket.onmessage=function(event){self.onMessage(event)},self.webSocket.onerror=function(event){self.onError(event)},self.webSocket.onclose=function(){setTimeout(function(){self.connect(apiToken)},1e4)}},close:function(){this.webSocket&&(this.webSocket.onclose=function(){},this.webSocket.close(),this.webSocket=null)},subscribeByQueueId:function(queueId,callback){this.subscribers[queueId]={callback:callback}},updateBuildLog:function(queueId,body){this.buildLogStorage[queueId]?this.buildLogStorage[queueId]+=body:this.buildLogStorage[queueId]=body},getBuildLog:function(queueId){return this.buildLogStorage[queueId]?this.buildLogStorage[queueId]:""},onMessage:function(msg){var frame=JSON.parse(msg.data);"buildLog"===frame.method&&(this.updateBuildLog(frame.data.queueId,frame.data.body),this.subscribers[frame.data.queueId]&&this.subscribers[frame.data.queueId].callback({data:frame.data}))},onError:function(e){this.errorHandler&&this.errorHandler(e)},setErrorHandler:function(func){this.errorHandler=func}}});class PNG{constructor(gettextCatalog){this.gettextCatalog=gettextCatalog}parse(file){return file.type&&"image/png"!==file.type?Promise.reject(this.gettextCatalog.getString("Only PNG format is supported for upload.")):this.utils.getFileContents(file).then(content=>{var base64=content.split("base64,")[1],byteData=this.utils.base64StringToByteArray(base64),parsedPngData=this.utils.parseBytes(byteData);return this.utils.enrichParsedData(parsedPngData)})}get utils(){return{getFileContents(file){const reader=new FileReader(file);return new Promise((resolve,reject)=>{reader.onload=(event=>{try{resolve(event.target.result)}catch(e){reject(e)}}),reader.readAsDataURL(file)})},base64StringToByteArray(base64String){for(var byteCharacters=atob(base64String),byteNumbers=new Array(byteCharacters.length),i=0;i<byteCharacters.length;i++)byteNumbers[i]=byteCharacters.charCodeAt(i);return new Uint8Array(byteNumbers)},parseBytes(bytes){var pngData={};if(pngData.headerIsValid=137===bytes[0]&&80===bytes[1]&&78===bytes[2]&&71===bytes[3]&&13===bytes[4]&&10===bytes[5]&&26===bytes[6]&&10===bytes[7],!pngData.headerIsValid)return console.warn("Provided data does not belong to a png"),pngData;var chunks=[],chunk=this.parseChunk(bytes,8);for(chunks.push(chunk);"IEND"!==chunk.name;)chunk=this.parseChunk(bytes,chunk.end),chunks.push(chunk);return pngData.chunks=chunks,pngData},parseChunk(bytes,start){var chunkLength=this.bytes2Int(bytes.slice(start,start+4)),chunkName="";chunkName+=String.fromCharCode(bytes[start+4]),chunkName+=String.fromCharCode(bytes[start+5]),chunkName+=String.fromCharCode(bytes[start+6]),chunkName+=String.fromCharCode(bytes[start+7]);for(var chunkData=[],idx=start+8;idx<chunkLength+start+8;idx++)chunkData.push(bytes[idx]);return{start:start,end:Number(start)+Number(chunkLength)+12,length:chunkLength,name:chunkName,data:chunkData,crc:[bytes[chunkLength+start+8],bytes[chunkLength+start+9],bytes[chunkLength+start+10],bytes[chunkLength+start+11]],crcChecked:!1}},enrichParsedData(pngData){var idhrChunk=this.getChunk(pngData,"IHDR");return pngData.width=this.bytes2Int(idhrChunk.data.slice(0,4)),pngData.height=this.bytes2Int(idhrChunk.data.slice(4,8)),pngData.bitDepth=this.bytes2Int(idhrChunk.data.slice(8,9)),pngData.colorType=this.bytes2Int(idhrChunk.data.slice(9,10)),pngData.compressionMethod=this.bytes2Int(idhrChunk.data.slice(10,11)),pngData.filterMethod=this.bytes2Int(idhrChunk.data.slice(11,12)),pngData.interlaceMethod=this.bytes2Int(idhrChunk.data.slice(12,13)),pngData.isGreyScale=0===pngData.colorType||4===pngData.colorType,pngData.isRgb=2===pngData.colorType||6===pngData.colorType,pngData.hasAlpha=4===pngData.colorType||6===pngData.colorType,pngData.hasPaletteMode=3===pngData.colorType&&null!=this.getChunk(pngData,"PLTE"),pngData},getChunks(pngData,chunkName){for(var chunksForName=[],idx=0;idx<pngData.chunks.length;idx++)pngData.chunks[idx].name===chunkName&&chunksForName.push(pngData.chunks[idx]);return chunksForName},getChunk(pngData,chunkName){for(var idx=0;idx<pngData.chunks.length;idx++)if(pngData.chunks[idx].name===chunkName)return pngData.chunks[idx];return null},bytes2Int(bytes){for(var ret=0,idx=0;idx<bytes.length;idx++)ret+=bytes[idx],idx<bytes.length-1&&(ret<<=8);return ret}}}}PNG.$inject=["gettextCatalog"],angular.module("monacaIDE").service("PNG",PNG),angular.module("monacaIDE").controller("ProjectRecoveryDialogController",["$scope","$window","$q","$uibModalInstance","Constant","gettextCatalog","callback",function($scope,$window,$q,$modalInstance,Constant,gettextCatalog,callback){$scope.isLoading=!1,$scope.node_modules=!0,$scope.package_lock=!0,$scope.missing_files=!0,$scope.terminal_server=!0,$scope.checked=function(){return $scope.node_modules||$scope.package_lock||$scope.missing_files||$scope.terminal_server},$scope.ok=function(){if(!$scope.isLoading){$scope.isLoading=!0;var fixes={node_modules:$scope.node_modules||"",package_lock:$scope.package_lock||"",missing_files:$scope.missing_files||"",terminal_server:$scope.terminal_server||""};callback(fixes).then(()=>{$modalInstance.close(!0)})}},$scope.cancel=function(){$modalInstance.close(!1)}}]),angular.module("monacaIDE").controller("AboutMonacaCloudDialogController",["$scope",function($scope){}]),angular.module("monacaIDE").controller("CIHistoryController",["$scope","$q","$window","gettextCatalog","Dialog","CIService","PubSub","Constant","$routeParams",function($scope,$q,$window,gettextCatalog,Dialog,CIService,PubSub,Constant,$routeParams){var START_COUNTER=3,LAST_INCREMENT=1,TOTAL_AVAILABLE_ITEMS=0;function fetchList(){CIService.fetchLogList({count:START_COUNTER*LAST_INCREMENT}).then(function(response){var result=response.result;TOTAL_AVAILABLE_ITEMS=result.count,this.historyCollection=result.logs}.bind(this))}this.historyCollection=[],this.showBuildLog=function(buildQueueUrlID){return window.location.href.indexOf("/build/")>-1?window.location.href=`/build/${$routeParams.projectId}/build-result/${buildQueueUrlID}`:PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:buildQueueUrlID,title:gettextCatalog.getString("Build Results"),icon:"settings",templateUrl:"build/BuildResult.html"}}),!0},fetchList.call(this),this.fetchIntervalId=setInterval(fetchList.bind(this),6e3),this.fetchMoreHistory=function(){clearInterval(this.fetchIntervalId),LAST_INCREMENT++,fetchList.call(this),this.fetchIntervalId=setInterval(fetchList.bind(this),6e3)},this.isProcessEnded=function(status){return"finish"===status||"failed"===status||"warning"===status},this.showLog=function(history){return this.isProcessEnded(history.status)&&history.log_url?($window.open(history.log_url,"_blank"),!0):Dialog.alert(gettextCatalog.getString("There are no logs available at this time for this CI process."),gettextCatalog.getString("Logs Not Found"))},this.hasMore=function(){return TOTAL_AVAILABLE_ITEMS>START_COUNTER*LAST_INCREMENT},this.beforeClose=function(){clearInterval(this.fetchIntervalId.bind(this)),this.$destroy()}}]),angular.module("monacaIDE").controller("DebuggerController",["$scope","$sce","ProjectFactory","$timeout","$element",function($scope,$sce,ProjectFactory,$timeout,$element){var isInspectorLoaded=!1,inspector=$element.find("iframe"),WebSocketHandler={webSocket:null,errorHandler:null,connect:function(){try{this.webSocket=new WebSocket(ProjectFactory.getSubscriberUrl())}catch(ex){return}this.webSocket.onmessage=function(event){this.onMessage(event)}.bind(this),this.webSocket.onerror=function(event){this.onError(event)}.bind(this),this.webSocket.onclose=function(){setTimeout(function(){this.connect(window.MonacaApi.Config.getApiToken())}.bind(this),1e4)}.bind(this)},onMessage:function(msg){var frame=JSON.parse(msg.data);if("debug.onLog"===frame.method&&frame.data.project_id===window.config.projectId){var obj=frame.data;obj.content.forEach(function(log){var messageLevel,message=log.message;switch(log.type.toLowerCase()){case"debug":case"verbose":messageLevel=0;break;case"log":case"info":messageLevel=1;break;case"warning":messageLevel=2;break;case"error":messageLevel=3;break;case"content_loaded":return;default:messageLevel=1}message={url:"",source:3,type:0,level:messageLevel,message:message.toString(),parameters:[{type:typeof message,description:message,hasChildren:!1}]};log.url&&log.url.length>0&&(message.url=log.url),log.line&&log.line>0?message.line=log.line+" "+obj.device_name:message.url=message.url+" "+obj.device_name;var data={command:"weinre",deviceId:obj.device_id,deviceName:obj.device_name,message:{interface:"ConsoleNotify",method:"addConsoleMessage",args:[message]}};sendToInspector.call(this,data)})}},onError:function(e){this.errorHandler&&this.errorHandler(e)},setErrorHandler:function(func){this.errorHandler=func}},sendToInspector=function(data){isInspectorLoaded&&-1!==inspector[0].src.indexOf(ProjectFactory.getInspectorUrl())&&inspector[0].contentWindow.postMessage(data,ProjectFactory.getInspectorUrl())};inspector.on("load",function($element){-1!==inspector[0].src.indexOf(ProjectFactory.getInspectorUrl())&&(isInspectorLoaded=!0)}),ProjectFactory.loading.then(function(){this.url=$sce.trustAsResourceUrl(ProjectFactory.getInspectorUrl()),WebSocketHandler.connect()}.bind(this))}]),angular.module("monacaIDE").controller("GrepPanelController",["$scope","$compile","$q","$timeout","PubSub","Constant","ProjectFileService","FileUtilityFactory",function($scope,$compile,$q,$timeout,PubSub,Constant,ProjectFileService,FileUtilityFactory){$scope.isCaseSensitive=!1,$scope.isRegExp=!1,$scope.keyword="",$scope.isSearching=!1,$scope.search=_.debounce(()=>{""===$scope.keyword||$scope.keyword.length<3||($scope.results={},$scope.isSearching=!0,$scope.$$phase||$scope.$apply(),$q.when(ProjectFileService.grep($scope.keyword,!0===$scope.isCaseSensitive?0:1,!0===$scope.isRegExp?1:0)).then(resp=>{$scope.results=resp||{},$scope.isSearching=!1}).catch(()=>{$scope.isSearching=!1}))},300),$scope.openFile=function(target,line){PubSub.publish(Constant.EVENT.OPEN_FILE,{target:target,lineNum:line})},$scope.getResultId=function(filename,lineNum){return filename+lineNum},$scope.setSelectedResult=function(id){$scope.selectedResult=id},$scope.getFileTypeImage=function(fileName){switch(FileUtilityFactory.getExtName(fileName)||fileName){case"js":case"jsx":case"ts":return"/img/cell/icon/document-js.png";case"json":return"/img/cell/icon/json.png";case"h":return"/img/cell/icon/document_h_icon.png";case"java":return"/img/cell/icon/document_java_icon.png";case"m":return"/img/cell/icon/document_m_icon.png";case"html":case"xml":return"/img/cell/icon/document-code.png";case"sass":case"scss":case"less":case"css":return"/img/cell/icon/document-css.png";case"markdown":case"md":return"/img/cell/icon/markdown.png";case"README":case"LICENSE":case"AUTHOR":case"txt":case"dat":default:return"/img/cell/icon/document-text.png"}},$scope.formatExcerpt=function(excerpt){var str,reFlags=$scope.isCaseSensitive?"g":"ig",search=new RegExp($scope.isRegExp?$scope.keyword:$scope.keyword.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&"),reFlags);return(str=excerpt,String(str).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")).replace(search,'<span class="highlight">$&</span>')},$scope.toggleCaseSensitive=function(){$scope.isCaseSensitive=!$scope.isCaseSensitive,$scope.search()},$scope.toggleIsRegExp=function(){$scope.isRegExp=!$scope.isRegExp,$scope.search()},$scope.getLength=function(obj){return Object.keys(obj).length},$timeout(()=>$("#grep-searchbox").focus())}]),angular.module("monacaIDE").controller("HeaderController",["$scope","$http","$templateCache","$uibModal","$timeout","PubSub","gettextCatalog","Constant","$window","Dialog","ProjectFactory","GoldenLayoutService","UserService","$q","CommonFunctionService","EnvironmentFactory",function($scope,$http,$tpl,$modal,$timeout,PubSub,gettextCatalog,Constant,$window,Dialog,ProjectFactory,GoldenLayoutService,UserService,$q,CommonFunctionService,EnvironmentFactory){this.isEnglish="en"===window.MonacaApi.Config.getLanguage(),this.menu=[],this.is_edit_menu_disabled={value:!0},this.is_undo_menu_disabled={value:!0},this.is_redo_menu_disabled={value:!0},this.is_vcs_configuration_disabled={value:!0},this.is_vcs_remote_history_disabled={value:!0},this.is_save_menu_disabled={value:!0},this.is_save_all_menu_disabled={value:!0},this.merging={value:!1},this.is_pull_menu_disabled={value:this.is_vcs_configuration_disabled.value||this.merging.value},this.is_abort_merge_menu_disabled={value:this.is_vcs_configuration_disabled.value||!this.merging.value};const updateVcsMenuFlags=()=>{this.is_pull_menu_disabled.value=this.is_vcs_configuration_disabled.value||this.merging.value,this.is_abort_merge_menu_disabled.value=this.is_vcs_configuration_disabled.value||!this.merging.value};function openModal(template,controller,cssClass,resolve){if(!template)throw gettextCatalog.getString("Missing modal's template.");if(!controller)throw gettextCatalog.getString("Missing modal's controller.");if(!cssClass)throw gettextCatalog.getString("Missing modal's class wrapper.");$modal.open({template:$tpl.get(template),controller:controller,windowClass:cssClass,resolve:resolve||{}})}this.openModal=openModal;let cancelWindowDetect=!1;this.toggleMenuItem=function(){cancelWindowDetect=!0,event.currentTarget.parentElement.classList.toggle("submenu-active")},window.onclick=function(e){if(cancelWindowDetect)cancelWindowDetect=!1;else if(!e.target.matches(".header-left-menu")){var menu=document.querySelector("ul.header-left-menu");menu.classList.contains("submenu-active")&&menu.classList.remove("submenu-active")}},this.closeMenu=function(event){var target=event.currentTarget.parentElement;target.style.display="none",$timeout(function(){target.style.display=""},1e3)},this.openHeadline=function(){$window.open(window.MonacaApi.Config.getServiceEndpoint("io")+"/headline")},this.changeLanguage=function(lang){UserService.switchLanguage(lang).then(function(){window.location.reload()})},this.logout=function(){return Dialog.confirm(gettextCatalog.getString("Are you sure you would like to logout?"),gettextCatalog.getString("Monaca IDE")).then(function(allowLogout){if(allowLogout){window.onbeforeunload=null;var logout=function(){$window.location=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_WEB)+"/logout"};$http.get(window.config.client.host.enterprise_host+"/"+window.MonacaApi.Config.getLanguage()+"/sync/off",{withCredentials:!0}).then(logout,logout)}})},this.returnToDashboard=function(){$window.location=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_CONSOLE)+"/dashboard"},this.hasCustomUrl=function(key){return ProjectFactory.getCustomUrl(key)||!1},this.openCustomUrl=function(key){this.hasCustomUrl(key)&&$window.open(ProjectFactory.getCustomUrl(key))},this.menuClick=function(e){this.returnToDashboard()};const openBuildEnvironment=()=>{PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildEnvironment",title:gettextCatalog.getString("Build Environment Settings"),icon:"settings",templateUrl:"build/BuildEnvironmentSettings.html"}})},openBuildHistory=()=>{PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildhistory",title:gettextCatalog.getString("Build History"),icon:"build-history",templateUrl:"build/BuildHistory.html"}})};this.openNotificationPanel=function(){$modal.open({templateUrl:"switchIDE/dialog/changesNotification.html",controller:"HeaderController",windowClass:""})},$scope.switchIde=function(){$scope.config={},$scope.config.useNewIde=!1,UserService.setCustomerExperienceSettings($scope.config),window.location.href=window.config.client.host.ide_host+"/project/"+window.config.projectId};const onLayoutTabToggle=(tabId,isOpen)=>{var headerViewMenu=_.find(this.menu,{id:"view"}),tabEntryInViewMenu=_.find(headerViewMenu.items,{id:tabId});tabEntryInViewMenu&&(tabEntryInViewMenu.isIconVisible=isOpen)};function _recursivePathHasClass(path,className){var hasClass=!1;return Array.prototype.forEach.call(path,function(entry){hasClass=hasClass||entry&&entry.className&&entry.className.indexOf(className)>=0}),hasClass}PubSub.subscribe(Constant.EVENT.BODY_CLICKED,data=>{const path=function(event){let path=[],element=event.target;for(;element.parentNode;)path.unshift(element.parentNode),element=element.parentNode;return path}(data.event);if(_recursivePathHasClass(path,"logo-container")||_recursivePathHasClass(path,"dashboard-projects")||_recursivePathHasClass(path,"modal"))return!1}),PubSub.subscribe(Constant.EVENT.OPEN_BUILD_HISTORY,openBuildHistory),PubSub.subscribe(Constant.EVENT.OPEN_DEBUG_SETUP,function(){openModal(ProjectFactory.getHasServiceCustomDebuggerOnly()?"SetupDebuggerCustomOnlyDialog.html":"SetupDebuggerDialog.html","SetupDebuggerDialogController","setup-debugger-dialog")}),PubSub.subscribe(Constant.EVENT.OPEN_RUN_ON_DEVICE,function(){openModal("RunOnDeviceDialog.html","RunOnDeviceDialogController","run-on-device-dialog")}),PubSub.subscribe(Constant.EVENT.CHANGE_CONFIG_VALUE_HAS_VCS_CONFIGS,value=>{this.is_vcs_configuration_disabled.value=!value,this.is_vcs_remote_history_disabled.value=!("GitHub"===ProjectFactory.getVcsServiceType()),updateVcsMenuFlags()}),PubSub.subscribe(Constant.EVENT.OPEN_BUILD_PANEL,function(options){var url,page;url=options.url,page=options.page,options.forcePage,PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_IFRAME_VIEW,{open:!0,componentState:{title:gettextCatalog.getString("App"),id:"buildpanel",page:page,url:url+"?hide_headerbar=1"}})}),PubSub.subscribe(Constant.EVENT.VIEW_OPENED,opts=>{onLayoutTabToggle(opts.componentName,!0)}),PubSub.subscribe(Constant.EVENT.VIEW_CLOSED,opts=>{onLayoutTabToggle(opts.componentName,!1)}),PubSub.subscribe(Constant.EVENT.ACTIVE_EDITOR_TAB_CHANGED,opts=>{this.is_edit_menu_disabled.value=!opts.id}),PubSub.subscribe(Constant.EVENT.UPDATE_TAB_CLEAN_STATE,opts=>{this.is_save_menu_disabled.value=opts.isClean,this.is_undo_menu_disabled.value=!opts.canUndo,this.is_redo_menu_disabled.value=!opts.canRedo,this.is_save_all_menu_disabled.value=!opts.isAnyUnsaved}),PubSub.subscribe(Constant.EVENT.MERGING_DETECTED,()=>{this.merging.value=!0,updateVcsMenuFlags()}),PubSub.subscribe(Constant.EVENT.MERGING_RESOLVED,()=>{this.merging.value=!1,updateVcsMenuFlags()}),$q.all([ProjectFactory.loading]).then(()=>{this.user=ProjectFactory.getUserName()+("ja"===ProjectFactory.getLanguage()?"さん":""),this.is_vcs_configuration_disabled.value=!ProjectFactory.hasVcsConfiguration(),this.is_vcs_remote_history_disabled.value=!("GitHub"===ProjectFactory.getVcsServiceType()),updateVcsMenuFlags();const hasGitServiceEnabled=ProjectFactory.hasGitServiceEnabled(),hasCordovaPlugin=ProjectFactory.hasCordovaPluginManageEnabled(),hasJsCSSComponent=ProjectFactory.hasJsCssComponentEnabled(),hasServiceIntegration=ProjectFactory.hasServiceIntegrationEnabled(),hasCIService=ProjectFactory.hasCIServiceEnabled(),hasDeployService=ProjectFactory.hasDeployServiceEnabled(),hasMonacaBackend=ProjectFactory.hasMonacaBackend(),saveMenu={label:gettextCatalog.getString("Save"),hasItem:!0,icon:"m-icon-save",isIconVisible:!0,isBeta:!1,items:null,disabled:this.is_save_menu_disabled,shortcutKey:Constant.SHORTCUT_KEY.SAVE[window.config.os],click:function(){PubSub.publish(Constant.EVENT.SAVE_ACTIVE_EDITOR_TAB)}},undoMenu={label:gettextCatalog.getString("Undo"),hasItem:!0,icon:"m-icon-undo",isIconVisible:!0,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.UNDO[window.config.os],disabled:this.is_undo_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.UNDO_ACTIVE_EDITOR_TAB)}},redoMenu={label:gettextCatalog.getString("Redo"),hasItem:!0,icon:"m-icon-redo",isIconVisible:!0,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.REDO[window.config.os],disabled:this.is_redo_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.REDO_ACTIVE_EDITOR_TAB)}},buttonMenus={redo:redoMenu,undo:undoMenu,save:saveMenu};if(this.menu=[{label:gettextCatalog.getString("File"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[{label:gettextCatalog.getString("New File..."),hasItem:!0,icon:"m-icon-new-file",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.NEW_FILE)}},saveMenu,{label:gettextCatalog.getString("Save All"),hasItem:!0,icon:"m-icon-save-all",isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_save_all_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.SAVE_ALL_EDITOR_TAB)}},{label:gettextCatalog.getString("Upload..."),hasItem:!0,icon:"m-icon-upload",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.UPLOAD_FILES)}}]},{label:gettextCatalog.getString("Edit"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[undoMenu,redoMenu,{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Cut"),hasItem:bowser.chrome,icon:"m-icon-cut",isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.CUT[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.CUT_FROM_ACTIVE_EDITOR_TAB)}},{label:gettextCatalog.getString("Copy"),hasItem:bowser.chrome,icon:"m-icon-copy",isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.COPY[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.COPY_FROM_ACTIVE_EDITOR_TAB)}},{label:gettextCatalog.getString("Paste"),hasItem:bowser.chrome,icon:"m-icon-paste",isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.PASTE[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.PASTE_TO_ACTIVE_EDITOR_TAB)}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Format Document"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.FORMAT_DOCUMENT[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.FORMAT_DOCUMENT_ACTIVE_EDITOR_TAB)}},{label:gettextCatalog.getString("Toggle Line Comment"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.COMMENT_OUT[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_COMMENT_EDITOR_TAB)}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Search..."),hasItem:!0,icon:"m-icon-search",isIconVisible:!0,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.SEARCH[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.FOCUS_SEARCH_BOX)}},{label:gettextCatalog.getString("Replace..."),hasItem:!0,icon:"m-icon-replace",isIconVisible:!0,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.REPLACE[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.REPLACE_TEXT_EDITOR_TAB)}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Search All Files..."),hasItem:!0,icon:"m-icon-search-all",isIconVisible:!0,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.SEARCH_ALL[window.config.os],click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"cihistory",title:gettextCatalog.getString("Find in Files"),icon:"search",templateUrl:"grepPanel.html"}})}}]},{id:"view",label:gettextCatalog.getString("View"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[{label:gettextCatalog.getString("Command Palette"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.COMMAND_PALETTE[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.COMMAND_PALETTE_ACTIVE_EDITOR_TAB)}},{label:gettextCatalog.getString("Increase Font Size"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.INCREASE_FONT_SIZE[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.INCREASE_FONT_SIZE_ACTIVE_EDITOR_TAB)}},{label:gettextCatalog.getString("Decrease Font Size"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:null,shortcutKey:Constant.SHORTCUT_KEY.DECREASE_FONT_SIZE[window.config.os],disabled:this.is_edit_menu_disabled,click:function(){PubSub.publish(Constant.EVENT.DECREASE_FONT_SIZE_ACTIVE_EDITOR_TAB)}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Close All Tabs"),hasItem:!0,icon:null,isIconVisible:!0,isBeta:!1,items:null,click:function(){GoldenLayoutService.closeAllTabs()}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{id:Constant.VIEW.DEBUGGER_VIEW,label:gettextCatalog.getString("Debugger Tab"),hasItem:ProjectFactory.hasDebuggerService(),icon:"m-icon-checkmark",isIconVisible:!1,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_DEBUGGER_VIEW)}},{label:gettextCatalog.getString("Reset Layout"),hasItem:!0,isIconVisible:!1,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.RESET_LAYOUT)}}]},{label:gettextCatalog.getString("Run"),hasItem:ProjectFactory.hasEitherPreviewerOrDebuggerService(),icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[{label:gettextCatalog.getString("Show Preview Tab"),hasItem:ProjectFactory.hasPreviewerService(),icon:"m-icon-preview",isIconVisible:!0,isBeta:!1,items:null,click:function(){ProjectFactory.hasPreviewerService()?PubSub.publish(Constant.EVENT.TOGGLE_PREVIEWER_VIEW,{open:!0,componentState:{id:1}}):$modal.open({templateUrl:"commonDialogs/AlertDialog.html",controller:"AlertController",windowClass:"confirm-window",resolve:{title:function(){return gettextCatalog.getString("New Previewer")},message:function(){return gettextCatalog.getString("<p>The previewer is not available in safe mode.</p>")}}})}},{label:gettextCatalog.getString("Run on Device"),hasItem:ProjectFactory.hasDebuggerService(),icon:"m-icon-debug",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.OPEN_RUN_ON_DEVICE)}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:ProjectFactory.getHasServiceCustomDebuggerOnly()?gettextCatalog.getString("Setup Debugger"):gettextCatalog.getString("Setup Monaca Debugger"),hasItem:ProjectFactory.hasDebuggerService(),icon:ProjectFactory.getHasServiceCustomDebuggerOnly()?null:"m-icon-debugger-install",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.OPEN_DEBUG_SETUP)}},{label:gettextCatalog.getString("One Time Password"),hasItem:ProjectFactory.getIsSupportOneTimePassword(),icon:"m-icon-debugger-install",isIconVisible:!0,isBeta:!1,items:null,click:function(){$modal.open({template:$tpl.get("oneTimePassword/oneTimePassDialog.html"),controller:"OneTimePassController",windowClass:"one-time-password-window",backdrop:"static",resolve:{projectId:function(){return window.config.projectId}}}).result.then(function(){})}}]},{label:gettextCatalog.getString("Build"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[{label:gettextCatalog.getString("Build App for Android..."),hasItem:ProjectFactory.hasBuildService("android"),icon:"m-icon-android",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforandroid",title:gettextCatalog.getString("Build App for Android"),icon:"android",templateUrl:"build/AndroidBuild.html"}})}},{label:gettextCatalog.getString("Build App for iOS..."),hasItem:ProjectFactory.hasBuildService("ios"),icon:"m-icon-ios",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforios",title:gettextCatalog.getString("Build App for iOS"),icon:"ios-muted",templateUrl:"build/IosBuild.html"}})}},{label:gettextCatalog.getString("Build App for Windows..."),hasItem:ProjectFactory.hasBuildService("windows"),icon:"m-icon-win",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforwindows",title:gettextCatalog.getString("Build App for Windows"),icon:"win",templateUrl:"build/WindowsBuild.html"}})}},{label:gettextCatalog.getString("Build App for PWA..."),hasItem:ProjectFactory.hasBuildService("pwa"),icon:"m-icon-pwa",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforpwa",title:gettextCatalog.getString("Build App for PWA"),icon:"pwa",templateUrl:"build/WebBuild.html"}})}},{label:gettextCatalog.getString("Build App for Windows..."),hasItem:ProjectFactory.hasBuildService("electron"),icon:"m-icon-win",isIconVisible:!0,isBeta:!0,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforelectronwindows",title:gettextCatalog.getString("Build App for Windows"),icon:"win",templateUrl:"build/ElectronBuild.html"}})}},{label:gettextCatalog.getString("Build App for macOS..."),hasItem:ProjectFactory.hasBuildService("electron"),icon:"m-icon-macos",isIconVisible:!0,isBeta:!0,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforelectronmacos",title:gettextCatalog.getString("Build App for macOS"),icon:"macos",templateUrl:"build/ElectronBuild.html"}})}},{label:gettextCatalog.getString("Build App for Linux..."),hasItem:ProjectFactory.hasBuildService("electron"),icon:"m-icon-linux",isIconVisible:!0,isBeta:!0,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildforelectronlinux",title:gettextCatalog.getString("Build App for Linux"),icon:"linux",templateUrl:"build/ElectronBuild.html"}})}},{label:gettextCatalog.getString("Start Custom Build..."),hasItem:ProjectFactory.hasBuildService("custom"),icon:"m-icon-build-environment",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:Constant.VIEW.CUSTOM_BUILD_VIEW,title:gettextCatalog.getString("Start Custom Build"),icon:"m-icon-build-environment",templateUrl:"dashboard/NewRemoteBuild.html"}})}},{label:null,hasItem:ProjectFactory.hasAnyBuildService(),icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Build Environment Settings..."),hasItem:ProjectFactory.showBuildEnvironmentSettingPage(),icon:"m-icon-build-environment",isIconVisible:!0,isBeta:!1,items:null,click:openBuildEnvironment},{label:gettextCatalog.getString("Custom Build Settings..."),hasItem:ProjectFactory.hasBuildService("custom"),icon:"m-icon-build-environment",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"custombuildsettings",title:gettextCatalog.getString("Custom Build Settings"),icon:"m-icon-build-environment",templateUrl:"setting/CustomBuildSettings.html"}})}},{label:gettextCatalog.getString("Build History..."),hasItem:!0,icon:"m-icon-build-history",isIconVisible:!0,isBeta:!1,items:null,click:openBuildHistory},{label:gettextCatalog.getString("CI History..."),hasItem:hasCIService,icon:"m-icon-ci",isIconVisible:!0,isBeta:!1,items:null,disabled:this.is_vcs_configuration_disabled,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"cihistory",title:gettextCatalog.getString("CI History"),templateUrl:"build/CIHistory.html"}})}}]},{label:gettextCatalog.getString("Project"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[{label:gettextCatalog.getString("Commit..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_vcs_configuration_disabled,click:function(){openModal("vcs/VcsCommitDialog.html","VcsCommitController","vcs-commit-window")}},{label:gettextCatalog.getString("Show Commit History..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_vcs_configuration_disabled,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"commithistory",title:gettextCatalog.getString("Show Commit History"),templateUrl:"vcs/VcsCommitHistory.html"}})}},{label:null,hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Discard Local Changes..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_vcs_configuration_disabled,click:function(){openModal("vcs/VcsDiscardChanges.html","VcsDiscardChangesController","vcs-discard-changes-window")}},{label:null,hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Pull / Merge..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_pull_menu_disabled,click:function(){openModal("vcs/VcsPullDialog.html","VcsPullController","vcs-pull-window")}},{label:gettextCatalog.getString("Abort Merge..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_abort_merge_menu_disabled,click:function(){openModal("vcs/VcsAbortMerge.html","VcsAbortMergeController","vcs-abort-merge-window")}},{label:gettextCatalog.getString("Push..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_vcs_configuration_disabled,click:function(){openModal("vcs/VcsPushDialog.html","VcsPushController","vcs-push-window")}},{label:gettextCatalog.getString("Show Remote History..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,disabled:this.is_vcs_remote_history_disabled,click:function(){$window.open([window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE),"api","project",window.config.projectId,"vcs","history"].join("/")+"?"+["api_token="+window.MonacaApi.Config.getApiToken()].join("&"))}},{label:null,hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("VCS Configure..."),hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:!1,items:null,click:function(){openModal("vcs/VcsConfigurationDialog.html","VcsConfigurationController","vcs-config-window")}},{label:null,hasItem:hasGitServiceEnabled,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Share..."),hasItem:!0,icon:"m-icon-team",isIconVisible:!0,isBeta:!1,shortcutKey:null,items:null,click:function(){$modal.open({template:$tpl.get("share/ProjectShareWindow.html"),controller:"ProjectShareWindowController",windowClass:"project-share",backdrop:"static",resolve:{projectId:function(){return window.config.projectId}}}).result.then(function(){}),PubSub.publish(Constant.EVENT.SEND_ANALYTICS,{category:Constant.ANALYTICS.CATEGORY,action:Constant.ANALYTICS.ACTION.SHARE,label:Constant.ANALYTICS.LABEL.MENU})}},{label:gettextCatalog.getString("Export..."),hasItem:!0,icon:"m-icon-export",isIconVisible:!0,isBeta:!1,items:null,click:function(){EnvironmentFactory.canExportProject()?$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",windowClass:"confirm-window",resolve:{title:function(){return gettextCatalog.getString("Exporting Project")},message:function(){return gettextCatalog.getString("<p>Please click the button to download the project in a zip format. You may import the project later from the dashboard</p>")}}}).result.then(function(){var url=window.config.client.host.ide_host+"/page/project/"+window.config.projectId+"/doExport?download=1&api_token="+MonacaApi.Config.getApiToken();$window.open(url,"_blank")}):$modal.open({templateUrl:"commonDialogs/AlertDialog.html",controller:"AlertController",windowClass:"confirm-window",resolve:{title:function(){return gettextCatalog.getString("Exporting Project")},message:function(){return gettextCatalog.getString("<p>Only paid users can use this function. Please upgrade your subscription plan.</p>")}}})}},{label:gettextCatalog.getString("Publish..."),hasItem:!0,icon:"m-icon-project-publish",isIconVisible:!0,isBeta:!1,shortcutKey:null,items:null,click:function(){$modal.open({template:$tpl.get("share/ProjectPublishWindow.html"),controller:"ProjectPublishWindowController",windowClass:"project-publish-window",backdrop:"static",resolve:{projectId:function(){return window.config.projectId}}}).result.then(function(){}),PubSub.publish(Constant.EVENT.SEND_ANALYTICS,{category:Constant.ANALYTICS.CATEGORY,action:Constant.ANALYTICS.ACTION.PUBLISH,label:Constant.ANALYTICS.LABEL.MENU})}}]},{label:gettextCatalog.getString("Configure"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,shortcutKey:null,items:[{label:gettextCatalog.getString("App Settings for Android..."),hasItem:ProjectFactory.hasBuildService("android"),icon:"m-icon-android",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingsandroid",title:gettextCatalog.getString("App Settings for Android"),icon:"settings",templateUrl:"build/AndroidAppSettings.html"}})}},{label:gettextCatalog.getString("KeyStore Settings for Android..."),hasItem:ProjectFactory.hasBuildService("android"),icon:"m-icon-android",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildsettingsandroid",title:gettextCatalog.getString("Build Settings for Android"),icon:"settings",templateUrl:"build/AndroidBuildSettings.html"}})}},{label:null,hasItem:ProjectFactory.hasBuildService("android"),icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("App Settings for iOS..."),hasItem:ProjectFactory.hasBuildService("ios"),icon:"m-icon-ios",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingsios",title:gettextCatalog.getString("App Settings for iOS"),icon:"settings",templateUrl:"build/IosAppSettings.html"}})}},{label:gettextCatalog.getString("Build Settings for iOS..."),hasItem:ProjectFactory.hasBuildService("ios"),icon:"m-icon-ios",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildsettingsios",title:gettextCatalog.getString("Build Settings for iOS"),icon:"settings",templateUrl:"build/IosBuildSettings.html"}})}},{label:null,hasItem:ProjectFactory.hasBuildService("ios"),icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("App Settings for Windows..."),hasItem:ProjectFactory.hasBuildService("windows"),icon:"m-icon-win",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingswindows",title:gettextCatalog.getString("App Settings for Windows"),icon:"settings",templateUrl:"build/WindowsAppSettings.html"}})}},{label:gettextCatalog.getString("App Settings for PWA..."),hasItem:ProjectFactory.hasBuildService("pwa"),icon:"m-icon-pwa",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingspwa",title:gettextCatalog.getString("App Settings for PWA"),icon:"settings",templateUrl:"build/WebAppSettings.html"}})}},{label:gettextCatalog.getString("App Settings for Windows..."),hasItem:ProjectFactory.hasBuildService("electron"),icon:"m-icon-win",isIconVisible:!0,isBeta:!0,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingselectronwindows",title:gettextCatalog.getString("App Settings for Windows"),icon:"settings",templateUrl:"build/ElectronAppSettings.html"}})}},{label:gettextCatalog.getString("App Settings for macOS..."),hasItem:ProjectFactory.hasBuildService("electron"),icon:"m-icon-macos",isIconVisible:!0,isBeta:!0,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingselectronmacos",title:gettextCatalog.getString("App Settings for macOS"),icon:"settings",templateUrl:"build/ElectronAppSettings.html"}})}},{label:gettextCatalog.getString("App Settings for Linux..."),hasItem:ProjectFactory.hasBuildService("electron"),icon:"m-icon-linux",isIconVisible:!0,isBeta:!0,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingselectronlinux",title:gettextCatalog.getString("App Settings for Linux"),icon:"settings",templateUrl:"build/ElectronAppSettings.html"}})}},{label:null,hasItem:ProjectFactory.hasBuildService("windows")||ProjectFactory.hasBuildService("pwa")||ProjectFactory.hasBuildService("electron"),icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Cordova Plugin Settings..."),hasItem:hasCordovaPlugin,icon:"m-icon-cordova-plugins",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"cordovapluginsettings",title:gettextCatalog.getString("Cordova Plugin Settings"),icon:"settings",templateUrl:"build/CordovaPlugins.html"}})}},{label:gettextCatalog.getString("JS/CSS Component Settings..."),hasItem:hasJsCSSComponent,icon:"m-icon-js-css-comp",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"jscsscomponentsettings",title:gettextCatalog.getString("JS/CSS Component Settings"),icon:"settings",templateUrl:"build/WebComponent.html"}})}},{label:gettextCatalog.getString("Service Integration Settings..."),hasItem:hasServiceIntegration,icon:"m-icon-si",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"serviceintegrationsettings",title:gettextCatalog.getString("Service Integration Settings"),icon:"settings",templateUrl:"build/ServiceIntegration.html"}})}},{label:gettextCatalog.getString("Continuous Integration..."),hasItem:hasCIService,icon:"m-icon-ci",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"continuousintegration",title:gettextCatalog.getString("Continuous Integration"),icon:"settings",templateUrl:"build/ContinuousIntegration.html"}})}},{label:gettextCatalog.getString("Deploy Service..."),hasItem:hasDeployService,icon:"m-icon-deploy",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"deployservice",title:gettextCatalog.getString("Deploy Service"),icon:"settings",templateUrl:"build/DeployService.html"}})}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:CommonFunctionService.getWorkspaceConfigurationTitle(),hasItem:!0,icon:"m-icon-workspace",isIconVisible:!0,isBeta:!1,items:null,click:function(){PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"workspaceconfig",title:CommonFunctionService.getWorkspaceConfigurationTitle(),templateUrl:"setting/WorkspaceConfiguration.html"}})}}]}],hasMonacaBackend){const backendHeader={label:gettextCatalog.getString("Backend"),hasItem:!0,icon:"m-icon-backend-cloud",isIconVisible:!0,isBeta:!1,items:null,click:function(){$window.open([window.MonacaApi.Config.getServiceEndpoint("cloud"),"cpanel","index.php"].join("/")+"?"+["project="+window.config.projectId,"api_token="+window.MonacaApi.Config.getApiToken(),"lang="+ProjectFactory.getLanguage()].join("&"))}};this.menu.push(backendHeader)}const helpHeader={label:gettextCatalog.getString("Help"),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:[{label:gettextCatalog.getString("Keyboard Shortcuts"),hasItem:!0,icon:"m-icon-shortcuts",isIconVisible:!0,isBeta:!1,items:null,click:()=>{$window.open(`${$scope.docs_url}/products_guide/monaca_ide/editor/`)}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Advanced Technical Support"),hasItem:this.hasCustomUrl("TECHNICAL_SUPPORT"),icon:"m-icon-support",isIconVisible:!0,isBeta:!1,items:null,click:()=>{this.openCustomUrl("TECHNICAL_SUPPORT")}},{label:gettextCatalog.getString("Status & Known Issues"),hasItem:this.hasCustomUrl("STATUS_ISSUES"),icon:null,isIconVisible:!1,isBeta:!1,items:null,click:()=>{this.openCustomUrl("STATUS_ISSUES")}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("General Inquiry"),hasItem:this.hasCustomUrl("GENERAL_INQUIRY"),icon:null,isIconVisible:!1,isBeta:!1,items:null,click:()=>{this.openCustomUrl("GENERAL_INQUIRY")}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("Information & Updates"),hasItem:this.hasCustomUrl("INFORMATION_UPDATES"),icon:null,isIconVisible:!1,isBeta:!1,items:null,click:()=>{this.openCustomUrl("INFORMATION_UPDATES")}},{label:gettextCatalog.getString("Documents"),hasItem:this.hasCustomUrl("DOCUMENTS"),icon:"m-icon-documents",isIconVisible:!0,isBeta:!1,items:null,click:()=>{this.openCustomUrl("DOCUMENTS")}},{label:gettextCatalog.getString("Blog"),hasItem:this.hasCustomUrl("BLOG"),icon:null,isIconVisible:!1,isBeta:!1,items:null,click:()=>{this.openCustomUrl("BLOG")}},{label:gettextCatalog.getString("Community"),hasItem:this.hasCustomUrl("COMMUNITY"),icon:"m-icon-community",isIconVisible:!0,isBeta:!1,items:null,click:()=>{this.openCustomUrl("COMMUNITY")}},{label:null,hasItem:!0,icon:null,isIconVisible:!1,isBeta:null,items:null},{label:gettextCatalog.getString("About Monaca Cloud..."),hasItem:!0,icon:null,isIconVisible:!1,isBeta:!1,items:null,click:()=>{this.openModal("AboutMonacaCloudDialog.html","AboutMonacaCloudDialogController","about-monaca-cloud")}}]};this.menu.push(helpHeader),Object.keys(buttonMenus).forEach(key=>{if(EnvironmentFactory.showMenuHeaderIcon(key)){let tmp=Object.assign({},buttonMenus[key]);delete tmp.label,this.menu.unshift(tmp)}})})}]),angular.module("monacaIDE").controller("IdeController",["$scope","$compile","$timeout","$q","$http","$window","$uibModal","$templateCache","ngToast","PubSub","Constant","gettextCatalog","ProjectFactory","UserFactory","ProjectTreeFactory","MonacaEditorFactory","TerminalFactory","EnvironmentFactory",function($scope,$compile,$timeout,$q,$http,$window,$modal,$tpl,ngToast,PubSub,Constant,gettextCatalog,ProjectFactory,UserFactory,ProjectTreeFactory,MonacaEditorFactory,TerminalFactory,EnvironmentFactory){this.loading=!0,this.error=!1;const UserApi=MonacaApi.Ide.User,VcsApi=MonacaApi.Ide.Vcs;function unsupportedCordova(){this.error=!0,ProjectFactory.getIsSupportedCordova()?$modal.open({template:$tpl.get("commonDialogs/ErrorDialog.html"),controller:"ErrorDialogController",windowClass:"error-dialog",resolve:{title:function(){return gettextCatalog.getString("Monaca Cloud Initialization Error")},message:function(){return gettextCatalog.getString("An error occurred while trying to initialize the Monaca Cloud. Please try again.<br>If the error persists, please contact Monaca Support.")},canClose:function(){return!1}},backdrop:"static"}):$modal.open({template:$tpl.get("UpgradeCordovaDialog.html"),controller:"UpgradeCordovaDialogController",windowClass:"upgrade-cordova-dialog",resolve:{cordovaVersion:function(){return ProjectFactory.getCordovaVersion()}},backdrop:"static"})}window.setInterval(function(){UserApi.checkMultiUse().then(response=>{const result=response.body.result;result.isDetectedMultiUse?confirm(result.description)&&($window.location=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_WEB)+"/dashboard"):result.isDetectedMultiDebugger&&confirm(result.description)&&($window.location=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IO)+"/pricing")})},3e5),window.addEventListener("message",function(event){/^http(s?):\/\/app(\.[a-z\d\-\.]*)?\.monaca.[a-z]*$/.test(event.origin)&&event.data&&("reload_tree"===event.data.action?PubSub.publish(Constant.EVENT.TREE_CLEAR_CACHE_RELOAD):"close_inactivate_tabs"===event.data.action&&PubSub.publish(Constant.EVENT.CLOSE_INACTIVATE_TABS))}),document.body.addEventListener("click",function(event){PubSub.publish(Constant.EVENT.BODY_CLICKED,{event:event})},!1),$q.all([EnvironmentFactory.loading,ProjectFactory.loading,ProjectTreeFactory.loading,UserFactory.loading,TerminalFactory.loading]).then(function(resp){if(ProjectFactory.isCordovaProject()&&!ProjectFactory.getIsSupportedCordova())return $q.reject();UserFactory.getInfo().isAvailable?(ProjectFactory.hasGitServiceEnabled()&&ProjectFactory.hasVcsConfiguration()&&VcsApi.mergeStatus(window.config.projectId).then(function(response){response.body.result.merging&&PubSub.publish(Constant.EVENT.MERGING_DETECTED)}),window.config.staticPreviewUrl=ProjectFactory.getStaticPreviewUrl(),MonacaEditorFactory.loading.then(()=>{this.loading=!1,$timeout(function(){PubSub.publish(Constant.EVENT.IDE_READY),EnvironmentFactory.hasDetectUnsupportedBrowser()&&!bowser.chrome&&setTimeout(()=>ngToast.create({className:"warning",content:gettextCatalog.getString("Monaca Cloud IDE has detected the usage of an unsupported browser. Monaca Cloud IDE currently supports Chrome. </br>Other browser may not operate as expected."),dismissOnTimeout:!1,dismissButton:!0}),3e3),EnvironmentFactory.hasCheckChromeVersion()&&bowser.chrome&&!bowser.check({chrome:"63"})&&setTimeout(()=>ngToast.create({className:"warning",content:gettextCatalog.getString("Monaca Cloud IDE has detected an older version of the Chrome browser.</br> Some feature may not operate as expected."),dismissOnTimeout:!1,dismissButton:!0}),3e3)})}).catch(err=>(console.log(err),$q.reject()))):window.location.href=`${window.config.client.host.web_host_ssl}/${window.MonacaApi.Config.getLanguage()}`}.bind(this),unsupportedCordova.bind(this)).then(function(){},unsupportedCordova.bind(this)),PubSub.subscribe(Constant.EVENT.NOTIFY_USER,function(data,topic){ngToast.create(data)}),PubSub.subscribe(Constant.EVENT.SEND_ANALYTICS,function(data,topic){if(!ProjectFactory.getHasServiceAnalytics())return!1;var target=data.category+"/"+data.label+"-"+data.action;mixpanel.track(target,data)}),$scope.fetchForSubscribe=function(){return{PubSub:PubSub,Constant:Constant}}}]),angular.module("monacaIDE").controller("ProjectController",["$scope","PubSub","Constant","gettextCatalog","ProjectFactory",function($scope,PubSub,Constant,gettextCatalog,ProjectFactory){this.projectName="",this.currentPanel=Constant.PROJECT.PANEL_FILE,ProjectFactory.loading.then(function(){this.projectName=ProjectFactory.getProjectName()}.bind(this))}]),angular.module("monacaIDE").controller("RunOnDeviceDialogController",["$scope","$window","gettextCatalog","PubSub","Constant","ProjectService","$timeout",function($scope,$window,gettextCatalog,PubSub,Constant,ProjectService,$timeout){$scope.page="connecting",$scope.clientName="",$scope.run=function(){$scope.page="connecting",ProjectService.run(window.config.projectId).then(function(resp){if(resp.clientsCount){var firstDevice=Object.keys(resp.clients)[0];$scope.clientName=resp.clients[firstDevice].clientName,$scope.page="successful_run",$timeout($scope.$close.bind(null),2e3)}else $scope.page="debugger_not_found"},function(resp){$scope.page="debugger_not_found"})},$scope.installDebuggerGuide=function(){$scope.$close(),PubSub.publish(Constant.EVENT.OPEN_DEBUG_SETUP)},PubSub.publish(Constant.EVENT.SEND_ANALYTICS,{category:Constant.ANALYTICS.CATEGORY,action:Constant.ANALYTICS.ACTION.RUN,label:Constant.ANALYTICS.LABEL.MENU}),$scope.run()}]),angular.module("monacaIDE").controller("SetupDebuggerDialogController",["$scope","gettextCatalog","PubSub","Constant","$q","BuildService","UserService","ProjectFactory",function($scope,gettextCatalog,PubSub,Constant,$q,BuildService,UserService,ProjectFactory){$scope.page="loading",$scope.installType,$scope.deviceName="",$scope.debugger_version_android="",$scope.debugger_version_ios="",$scope.custom_debugger_version_android=ProjectFactory.getAndroidCustomDebuggerVersion(),$scope.custom_debugger_version_ios=ProjectFactory.getIosCustomDebuggerVersion(),ProjectFactory.getHasServiceCustomDebuggerOnly()?$scope.page="landing":$q.all([BuildService.getOfficialReleaseDebuggerVersion("android"),BuildService.getOfficialReleaseDebuggerVersion("ios")]).then(function(resp){$scope.debugger_version_android=resp[0].result.version,$scope.debugger_version_ios=resp[1].result.version,$scope.page="landing"});var stack=[];$scope.next=function(page){stack.push($scope.page),$scope.page=page},$scope.back=function(){$scope.page=stack.pop()},$scope.connect=function(){"android"===$scope.installType?$scope.next("android_connect"):"ios"===$scope.installType&&$scope.next("ios_connect")},$scope.$watch("page",function(){$scope.page===$scope.installType+"_connect"&&UserService.clientList().then(function(resp){if(_.size(resp.result)){var firstDevice=Object.keys(resp.result)[0];$scope.deviceName=resp.result[firstDevice].clientName,$scope.page=$scope.installType+"_connect_success"}else $scope.page=$scope.installType+"_connect_failed"})}),$scope.buildCustom=function(){var componentState="";"android"===$scope.installType?componentState={id:"buildforandroid",title:gettextCatalog.getString("Build App for Android"),icon:"android",templateUrl:"build/AndroidBuild.html"}:"ios"===$scope.installType&&(componentState={id:"buildforios",title:gettextCatalog.getString("Build App for iOS"),icon:"ios-muted",templateUrl:"build/IosBuild.html"}),PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:componentState}),$scope.$close()},$scope.runOnDevice=function(){$scope.$close(),PubSub.publish(Constant.EVENT.OPEN_RUN_ON_DEVICE)}}]),angular.module("monacaIDE").controller("TerminalController",["PubSub","Constant","$element","TerminalService","TerminalFactory","$timeout","GoldenLayoutService","gettextCatalog","CommonFunctionService","ProjectFactory",function(PubSub,Constant,$element,TerminalService,TerminalFactory,$timeout,GoldenLayoutService,gettextCatalog,CommonFunctionService,ProjectFactory){var _data,vm=this,_reconnectingToServer=5e3,_needResize=!1,_needUIUpdate=null,_safePadding=5,_retry=0,_maxRetry=3;function init(data){if(isConnected()||ProjectFactory.isTranspileLogEnabled()||TerminalFactory.getContainerID()){if("none"!==getDisplayStatus()&&!isConnected()&&TerminalFactory.isNetworkStable()){if(_retry>=_maxRetry)return;_retry+=1,vm.loading=!0,vm.terminal&&vm.terminal.loading(!0),vm.options.width=data.containerWidth,vm.options.height=data.containerHeight-_safePadding,vm.options.id=data.componentId||"terminal",vm.open(),$timeout(function(){isConnected()||init(data)},_reconnectingToServer)}}else TerminalService.startTerminal({isTranspile:!1})}function isSocketOpen(){let socket=vm.terminal.getSocket();return!(!socket||!socket.isOpen())}function isConnected(){return!!vm.terminal&&(String(vm.terminal.getErrorMessage()).indexOf("exited with code: 0")>=0||isSocketOpen())}function getDisplayStatus(){return angular.element($element).parent().parent().css("display")}function getTerminalID(){return angular.element($element).parent().attr("id")}function updateUIConfiguration(config){_needUIUpdate=null,vm.terminal.setUIConfiguration(config),vm.resize(_data.containerWidth,_data.containerHeight)}vm.loading=!0,vm.showTerminal=!1,vm.messages=[],vm.bodyStyle={width:"100%",height:"100%",backgroundColor:""},vm.bodyStyle.backgroundColor=TerminalFactory.getTerminalBackgroundColor(),vm.options={isTranspile:!1,focus:!0,terminal:{cursorStyle:"underline"},url:"",containerId:"",autoResize:!0,width:0,height:0,customCommand:"/bin/bash",onTerminalOptionChanged:function(config){},onInit:function(terminal){vm.terminal=terminal},onError:function(event){vm.terminal&&!isConnected()&&(vm.terminal.loading(!0),init(_data))},onClose:function(event){vm.terminal&&!isConnected()&&(event&&!event.reason||vm.terminal.getErrorMessage()===gettextCatalog.getString("Error occured.")||String(event.reason).indexOf("exited with code: 0")<0)&&(vm.terminal.loading(!0),init(_data))},onConnect:function(){ProjectFactory.isTranspileLogEnabled()||(TerminalFactory.setNetworkStatus=!0),_retry=0,TerminalFactory.resetCustomCommand()},onMessage:function(event){},onOpen:function(event){},onResize:function(size){}},vm.open=function(){TerminalFactory.getContainerID().length>0&&(vm.options.customCommand=TerminalFactory.getCustomCommand(),vm.options.url=TerminalFactory.getTerminalURL(),vm.options.containerId=TerminalFactory.getContainerID(),vm.loading=!1,vm.showTerminal=!0,vm.terminal&&!isSocketOpen()&&vm.terminal.reInit())},vm.destroy=function(){vm.showTerminal=!1},vm.resize=function(width,height){vm.bodyStyle.backgroundColor=TerminalFactory.getTerminalBackgroundColor(),vm.terminal.forceResize(width,height-_safePadding)},PubSub.subscribe(Constant.EVENT.TERMINAL_SERVER_RESPONSE_TERMINAL,function(response){try{response.isTranspile||init(_data)}catch(err){console.error(err)}}),PubSub.subscribe(Constant.EVENT.TERMINAL_SERVER_RESPONSE_FAILED,function(data){}),PubSub.subscribe(Constant.EVENT.TERMINAL_SETTING_CHANGED,function(config){config&&isConnected()&&("none"!==getDisplayStatus()?updateUIConfiguration(config):_needUIUpdate=config)}),PubSub.subscribe(Constant.EVENT.VIEW_SHOWN,function(data){data.componentId===getTerminalID()&&(_data=data,init(data),_needUIUpdate&&isConnected()&&updateUIConfiguration(_needUIUpdate),_needResize&&isConnected()&&(_needResize=!1,vm.resize(data.containerWidth,data.containerHeight)),vm.terminal&&isConnected()&&vm.terminal.forceFocus())}),PubSub.subscribe(Constant.EVENT.VIEW_HIDE,function(data){data.componentId,getTerminalID()}),PubSub.subscribe(Constant.EVENT.VIEW_RESIZE,function(data){data.componentId===getTerminalID()&&vm.terminal&&(_data=data,vm.resize(data.containerWidth,data.containerHeight))}),PubSub.subscribe(Constant.EVENT.VIEW_CLOSED,function(data){data.componentId===getTerminalID()&&(vm.terminal&&data.componentId&&vm.terminal.clearTmuxSession(data.componentId),vm.destroy())}),PubSub.subscribe(Constant.EVENT.VIEW_OPENED,function(data){data.componentId===getTerminalID()&&GoldenLayoutService._getTabElement(data.componentId).off("click").on("click",function(){vm.terminal&&isConnected()&&vm.terminal.forceFocus()})})}]),angular.module("monacaIDE").controller("TranspileLogController",["PubSub","Constant","$element","$scope","$uibModal","$templateCache","TerminalService","TerminalFactory","GoldenLayoutService","$timeout","gettextCatalog","$window","UpgradeService","$q","ProjectService","UserFactory","ContainerService","CommonFunctionService","ProjectFileService","ProjectFactory",function(PubSub,Constant,$element,$scope,$modal,$tpl,TerminalService,TerminalFactory,GoldenLayoutService,$timeout,gettextCatalog,$window,UpgradeService,$q,ProjectService,UserFactory,ContainerService,CommonFunctionService,ProjectFileService,ProjectFactory){var _data,_componentId,vm=this,_dummyWidth=800,_dummyHeight=300,_needResize=!1,_reconnectingToServer=15e3,_informPreviewPanel=5e3,_needUIUpdate=null,_safePadding=0,_initing=!1;function updateUIConfiguration(config){_needUIUpdate=null,vm.terminal.setUIConfiguration(config),vm.resize(_data.containerWidth,_data.containerHeight)}function notifyUser(type,message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:type,content:message})}function setWaitCursor(wait){document.body.style.cursor=wait?"wait":"default"}function forceRestart(){vm.retryReason=null,vm.retryConnecting=!1,_initing=!1,init(_data)}function initTranspileTab(command){vm.options.customCommand=command,vm.terminal&&!isSocketOpen()&&(vm.terminal=null),vm.destroy(),vm.showTerminal=!0,vm.loading=!1}function shouldReconnect(waitingTime){TerminalFactory.isNetworkStable()&&$timeout(function(){var data;data=_data,"none"===getDisplayStatus()?GoldenLayoutService.focusExistingComponent(_componentId):init(data)},waitingTime)}function reconnectAgain(data){$timeout(function(){isConnected()||init(data)},_reconnectingToServer)}function init(data){_initing||(_initing=!0,_data=data,vm.terminal&&vm.terminal.loading(!0),vm.loading=!0,vm.options.width=data.containerWidth||_dummyWidth-_safePadding,vm.options.height=data.containerHeight-vm.headerPixel-_safePadding||_dummyHeight-vm.headerPixel-_safePadding,vm.options.id=data.componentId||"mn-gl-transpile-log-view",isConnected()||TerminalService.startTerminal({isTranspile:!0}),reconnectAgain(data))}function getDisplayStatus(){return angular.element($element).parent().parent().css("display")}function isSocketOpen(){let socket=vm.terminal.getSocket();return!(!socket||!socket.isOpen())}function isConnected(){return!!vm.terminal&&isSocketOpen()}vm.bodyStyle={width:"100%",backgroundColor:"#fff"},vm.retryConnecting=!1,vm.retryReason="",vm.useLitemodeMessage="",vm.loading=!0,vm.showTerminal=!1,vm.transpile_command="monaca preview",vm.port=8080,vm.headerPixel=28,vm.options={isTranspile:!0,focus:!0,terminal:{cursorStyle:"underline"},url:"",containerId:"",autoResize:!0,width:0,height:0,killSession:!1,customCommand:"monaca preview",onTerminalOptionChanged:function(config){},onInit:function(terminal){vm.terminal=terminal},onError:function(event){_initing=!1,vm.loading=!0,vm.terminal&&!isConnected()&&shouldReconnect(15e3)},onClose:function(event){_initing=!1,vm.loading=!0,vm.terminal&&!isConnected()&&shouldReconnect(5e3)},onConnect:function(){TerminalFactory.setNetworkStatus=!0,vm.options.killSession=!1},onMessage:function(event){},onOpen:function(event){_initing=!1,vm.loading=!1,vm.terminal&&vm.terminal.loading(!1),function(){let previewUrl=TerminalFactory.getPreviewUrl();$timeout(function(){PubSub.publish(Constant.EVENT.PREVIEWER_VIEW_URL_CHANGED,{url:previewUrl})},_informPreviewPanel)}()},onResize:function(size){},onSendTranspileCommand:function(socket){}},vm.onSettingClicked=function(){!function(template,controller,cssClass,resolve){if(!template)throw gettextCatalog.getString("Missing modal's template.");if(!controller)throw gettextCatalog.getString("Missing modal's controller.");if(!cssClass)throw gettextCatalog.getString("Missing modal's class wrapper.");$modal.open({template:$tpl.get(template),controller:controller,windowClass:cssClass,resolve:resolve||{}})}("TranspileLogSettingDialog.html","TranspileLogSettingDialog","transpile-setting")},vm.destroy=function(){vm.showTerminal=!1},vm.resize=function(width,height){vm.bodyStyle.backgroundColor=TerminalFactory.getTerminalBackgroundColor(),vm.terminal.forceResize(width,height-vm.headerPixel-_safePadding)},PubSub.subscribe(Constant.EVENT.TERMINAL_SETTING_CHANGED,function(config){config&&isConnected()&&("none"!==getDisplayStatus()?updateUIConfiguration(config):_needUIUpdate=config)}),PubSub.subscribe(Constant.EVENT.TRANSPILE_SETTING_CHANGED,function(){if(vm.terminal){let sessionName="mn-gl-transpile-log-view";_data&&_data.componentId&&(sessionName=_data.componentId),vm.terminal.clearTmuxSession(sessionName)}}),PubSub.subscribe(Constant.EVENT.TERMINAL_SERVER_RESPONSE,function(response){try{UserFactory.canCreateNewTerminal()||GoldenLayoutService.closeAllTerminalTabs(),vm.bodyStyle.backgroundColor=TerminalFactory.getTerminalBackgroundColor(),response.isTranspile&&$q.when(UpgradeService.fetchProjectState()).then(function(state){vm.options.url=TerminalFactory.getTerminalURL(),vm.options.containerId=TerminalFactory.getContainerID(),vm.port=TerminalFactory.getCurrentPreviewPort();let prepareCommand="/tmp/start-preview",prepareCommandArguments="",shouldRunNpmInstall=UpgradeService.getProjectState().shouldNpmInstall,shouldRunMonacaUpdate=UpgradeService.getProjectState().upgradeDevCliEcoSystem;shouldRunNpmInstall&&(prepareCommandArguments=prepareCommandArguments.concat(" --npm-install")),shouldRunMonacaUpdate&&(prepareCommandArguments=prepareCommandArguments.concat(" --upgrade")),prepareCommand=prepareCommand.concat(" ",prepareCommandArguments),shouldRunMonacaUpdate?$q.when(ProjectFileService.fileRead("/package.json")).then(content=>{if(content.body&&CommonFunctionService.isValidJson(content.body))return GoldenLayoutService.closeAllPreviewerAndTerminalTabs(),GoldenLayoutService.closeEditorView("package.json"),function(prepareCommand){return $modal.open({template:$tpl.get("UpgradeCliEcosystemDialog.html"),controller:"UpgradeCliEcosystemDialogController",windowClass:"upgrade-cli-ecosystem-dialog",backdrop:"static",keyboard:!1}).result.then(function(){GoldenLayoutService.focusExistingComponent(_componentId),vm.options.killSession=!0,initTranspileTab(`${prepareCommand} ${vm.transpile_command}`)})}(prepareCommand);$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:()=>gettextCatalog.getString("Syntax error"),message:()=>gettextCatalog.getString("Package.json is invalid which may cause errors in the project. Would you like to open package.json and fix it?")}}).result.then(res=>{PubSub.publish(Constant.EVENT.TOGGLE_EDITOR_VIEW,{open:!0,componentState:{url:"/package.json"}})})}):initTranspileTab(shouldRunNpmInstall?`${prepareCommand} ${vm.transpile_command}`:`/tmp/start-preview ${vm.transpile_command}`)}).catch(function(err){console.error(err),initTranspileTab(`/tmp/start-preview --npm-install ${vm.transpile_command}`)})}catch(err){console.error(err)}}),vm.recoverProject=(()=>{$modal.open({templateUrl:"dashboard/ProjectRecoveryDialog.html",controller:"ProjectRecoveryDialogController",windowClass:"project-recovery-dialog",backdrop:"static",keyboard:!1,resolve:{callback:()=>fixes=>{setWaitCursor(!0);var dfd=$q.defer();return(fixes=>fixes.node_modules||fixes.package_lock||fixes.missing_files?ProjectService.recoverProject(window.config.projectId,fixes):$q.resolve(!0))(fixes).then(()=>(fixes=>fixes.terminal_server?ContainerService.removeTerminal(window.config.projectId):$q.resolve(!0))(fixes)).then(response=>{fixes&&fixes.terminal_server&&forceRestart(),dfd.resolve(!0)}).catch(e=>{dfd.reject(e)}),dfd.promise}}}).result.then(res=>{setWaitCursor(!1)}).catch(err=>{setWaitCursor(!1),console.error(err),notifyUser("danger",gettextCatalog.getString("failed to recover project"))})}),vm.restartPreviewer=function(force){$modal.open({templateUrl:"build/dialogs/RestartPreviewServerDialog.html",controller:"RestartPreviewServerController",windowClass:"confirm-window",resolve:{title:function(){return gettextCatalog.getString("Restart Preview Server")},message:function(){return gettextCatalog.getString("<p>This will restart your preview server container.</p>")}}}).result.then(function(){setWaitCursor(!0);let message,projectId=window.config.projectId;projectId?ContainerService.removeTerminal(projectId).then(result=>{forceRestart(),setWaitCursor(!1)}).catch(err=>{setWaitCursor(!1),notifyUser("danger",message=gettextCatalog.getString("Failed to restart terminal.")),console.error(err)}):(setWaitCursor(!1),notifyUser("danger",message=(message=gettextCatalog.getString("Failed to restart terminal."))+" "+gettextCatalog.getString("No Project ID")))})},PubSub.subscribe(Constant.EVENT.TERMINAL_SERVER_RESPONSE_FAILED,function(data){try{if(_initing=!1,TerminalFactory.isNetworkStable())reconnectAgain(_data);else{let defaultError=gettextCatalog.getString("System Error.");vm.retryReason=data.reason||defaultError,vm.useLitemodeMessage=gettextCatalog.getString("To disable the terminal feature, try using the IDE's lite mode. This option is available from the Dashboard."),notifyUser("danger",vm.useLitemodeMessage),vm.retryReason=vm.retryReason,vm.retryConnecting=!0}}catch(err){console.error(err)}}),vm.retry=function(){$window.location.reload()},PubSub.subscribe(Constant.EVENT.VIEW_SHOWN,function(data){data.componentName===Constant.VIEW.TRANSPILE_LOG_VIEW&&(_data=data,"none"!==getDisplayStatus()&&(_needUIUpdate&&isConnected()&&updateUIConfiguration(_needUIUpdate),isConnected()?_needResize&&(_needResize=!1,vm.resize(data.containerWidth,data.containerHeight)):init(data),vm.terminal&&isConnected()&&vm.terminal.forceFocus()))}),PubSub.subscribe(Constant.EVENT.VIEW_OPENED,function(data){data.componentName===Constant.VIEW.TRANSPILE_LOG_VIEW&&(ProjectFactory.hasPreviewerService()||GoldenLayoutService.closeAllPreviewerTabs(),_componentId=data.componentId,_data=data,"none"!==getDisplayStatus()||isConnected()||(_needResize=!0,init(data)),GoldenLayoutService._getTabElement(data.componentId).off("click").on("click",function(){vm.terminal&&isConnected()&&vm.terminal.forceFocus()}))}),PubSub.subscribe(Constant.EVENT.VIEW_HIDE,function(data){data.componentName,Constant.VIEW.TRANSPILE_LOG_VIEW}),PubSub.subscribe(Constant.EVENT.VIEW_RESIZE,function(data){data.componentName===Constant.VIEW.TRANSPILE_LOG_VIEW&&isConnected()&&(_data=data,vm.resize(data.containerWidth,data.containerHeight))}),PubSub.subscribe(Constant.EVENT.VIEW_CLOSED,function(data){data.componentName===Constant.VIEW.TRANSPILE_LOG_VIEW&&vm.destroy()})}]),angular.module("monacaIDE").controller("TranspileLogSettingDialog",["PubSub","Constant","$scope","ProjectService","gettextCatalog","TerminalFactory",function(PubSub,Constant,$scope,ProjectService,gettextCatalog,TerminalFactory){this.findWithAttr=((array,attr,value)=>{for(var i=0;i<array.length;i+=1)if(array[i][attr]===value)return i;return-1}),this.populateData=(()=>{$scope.userApp=TerminalFactory.getPreviewPorts();let terminal_index=this.findWithAttr($scope.userApp,"port","terminal");terminal_index>-1&&$scope.userApp.splice(terminal_index,1);let port_index=this.findWithAttr($scope.userApp,"port",parseInt(TerminalFactory.getCurrentPreviewPort()));$scope.port_selected=$scope.userApp[port_index>-1?port_index:0]}),this.populateData(),$scope.onRestoreDefaultClicked=(()=>{ProjectService.resetTranspileCommandSetting(window.config.projectId).then(result=>{TerminalFactory.setCurrentPreviewPort(result.preview_port);let port_index=this.findWithAttr($scope.userApp,"port",parseInt(TerminalFactory.getCurrentPreviewPort()));TerminalFactory.setPreviewUrl($scope.userApp[port_index].Url),this.populateData(),PubSub.publish(Constant.EVENT.TRANSPILE_SETTING_CHANGED),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Preview server has been reset to default settings.")}),$scope.$close()}).catch(error=>{console.log("transpile reset",error),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Cannot reset setting to default.")})})}),$scope.onApplyClicked=(()=>{var settings={};settings.preview_port=$scope.port_selected.port,ProjectService.saveTranspileCommandSetting(window.config.projectId,settings).then(response=>{$scope.port_selected.port!==TerminalFactory.getCurrentPreviewPort()&&(TerminalFactory.setCurrentPreviewPort($scope.port_selected.port),TerminalFactory.setPreviewUrl($scope.port_selected.Url),PubSub.publish(Constant.EVENT.TRANSPILE_SETTING_CHANGED),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Preview server settings has been saved.")})),$scope.$close()}).catch(error=>{console.log(error),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Cannot apply preview command setting.")})})})}]),angular.module("monacaIDE").controller("UpgradeCliEcosystemDialogController",["$scope","$window","$q","$uibModalInstance","Constant","gettextCatalog","ProjectService",function($scope,$window,$q,$modalInstance,Constant,gettextCatalog,ProjectService){$scope.isUpgrading=!1,$scope.upgradeEcosystem=function(){$scope.isUpgrading||($scope.isUpgrading=!0,ProjectService.duplicateAndArchive().then(()=>{$modalInstance.close(!0)}))},$scope.returnToDashboard=function(){$window.location.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_CONSOLE)+"/dashboard"},$scope.openHelp=function(){let url=`${$scope.docs_url}/release_notes/20180918_monaca_cli_3.0/`;$window.open(url)}}]),angular.module("monacaIDE").controller("UpgradeCordovaDialogController",["$scope","$window","PubSub","Constant","gettextCatalog","CordovaService","cordovaVersion",function($scope,$window,PubSub,Constant,gettextCatalog,CordovaService,cordovaVersion){$scope.isUpgrading=!1,$scope.cordovaVersion=cordovaVersion,$scope.upgradeCordova=function(){$scope.isUpgrading=!0,CordovaService.upgradeVersion().then(function(resp){window.location.reload(),$scope.isUpgrading=!1},function(err){$scope.isUpgrading=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:err&&err.body&&err.body.message?err.body.message:gettextCatalog.getString("An unknown error has occurred. Please refresh and try again.")})})},$scope.openPlanPricing=function(){$window.open(window.config.client[window.MonacaApi.Config.getLanguage()].url.plan_pricing)},$scope.returnToDashboard=function(){$window.open(window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_CONSOLE)+"/dashboard")}}]),angular.module("monacaIDE").controller("AndroidAppSettingsController",["$scope","gettextCatalog","$uibModal","ProjectFactory","ProjectSettingFactory","PubSub","Constant",function($scope,gettextCatalog,$modal,ProjectFactory,ProjectSettingFactory,PubSub,Constant){var projectId=window.config.projectId,oldSettings={};const now=Date.now();$scope.cordovaVersion=ProjectFactory.getCurrentCordovaVersion(),$scope.isLoading={},$scope.settings={},$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.createSettingImageUrl=function(projectId,type){return window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/file/read/"+type+"?api_token="+window.MonacaApi.Config.getApiToken()},$scope.iconTypeList=function(){var list={iconLdpi_android:{w:36,h:36,label:""},iconMdpi_android:{w:48,h:48,label:""},iconHdpi_android:{w:72,h:72,label:""},iconXHdpi_android:{w:96,h:96,label:""},iconXXHdpi_android:{w:144,h:144,label:""},iconXXXHdpi_android:{w:192,h:192,label:""}};for(var key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.splashTypeList=function(){var list={splashLdpi_android:{w:"",h:"",label:"ldpi"},splashMdpi_android:{w:"",h:"",label:"mdpi"},splashHdpi_android:{w:"",h:"",label:"hdpi"},splashXHdpi_android:{w:"",h:"",label:"xhdpi"},splashXXHdpi_android:{w:"",h:"",label:"xxhdpi"},splashXXXHdpi_android:{w:"",h:"",label:"xxxhdpi"}};for(var key in parseInt($scope.cordovaVersion,10)>=9&&(list.splashMdpi_android_default={w:"",h:"",label:"default"}),list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.timestamp=function(){return now},$scope.init=function(){$scope.loading=!0,ProjectSettingFactory.loading.then(function(result){var projectInfo=result.project||{},config=result.config&&result.config.android?result.config.android:{},preference=config.preference||{};$scope.settings.applicationName_android=config.applicationName,$scope.settings.applicationClass_android=config.applicationClass,$scope.settings.config_postfix="true"===preference["monaca:AndroidIsPackageNameSeparate"],$scope.settings.versionName_android=config.versionName,$scope.settings.versionCode_android=config.versionCode,$scope.specifyVersionCode=!!$scope.settings.versionCode_android,$scope.settings.fullscreen_android="true"===preference.Fullscreen,$scope.settings.splashtime_android=preference.SplashScreenDelay||"",$scope.settings.config_access_origin_android=config.accessOrigin,$scope.settings.config_keeprunning="true"===preference.KeepRunning,$scope.settings.config_disallow_overscroll_android="true"===preference.DisallowOverscroll,$scope.settings.config_orientation_android=preference.Orientation||"default",$scope.isHighPerformanceWebView=!1,$scope.cordovaVersion<5&&($scope.isHighPerformanceWebView="crosswalk"===preference["monaca:WebViewEngine"]),$scope.rpg_background_images_android=projectInfo.rpg_background_images,projectInfo.selected_rpg_background_image&&($scope.settings.selected_rpg_background_image_android=projectInfo.selected_rpg_background_image.android||""),oldSettings=Object.assign({},$scope.settings),$scope.isInitialized=!0,$scope.isReadyToSave=!0}).then(function(){$scope.cordovaVersion>=5?MonacaApi.Ide.Cordova.list(projectId).then(function(response){$scope.loading=!1;var plugins=response.body.result?response.body.result:{};$scope.$apply(function(){var crosswalkPlugin=plugins[Constant.PLUGIN.CROSSWALK]||{};$scope.isHighPerformanceWebView=crosswalkPlugin&&crosswalkPlugin.isInstalled})}):$scope.loading=!1})},$scope.valueChanged=function(fieldName){return oldSettings[fieldName]!==$scope.settings[fieldName]},$scope.uploadImage=function(element){var file=element.files[0];$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var uploadType=element.name,types="icon_all_android"===uploadType?Object.keys($scope.iconTypeList):"splash_all_android"===uploadType?Object.keys($scope.splashTypeList):[uploadType];types.forEach(function(type){$scope.isLoading[type]=!0}),MonacaApi.Ide.Project.uploadSettingImage(projectId,uploadType,file).then(function(){$scope.$apply(function(){types.forEach(function(type){document.getElementById("image-"+type).src=$scope.createSettingImageUrl(projectId,type)+"&t="+(new Date).getTime(),$scope.isLoading[type]=!1,$scope.splashTypeList[uploadType]&&($scope.splashTypeList[uploadType].missing=!1)})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully uploaded.")})}).catch(function(){$scope.$apply(function(){types.forEach(function(type){$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Failed to upload file.")})})})},$scope.deleteImage=function(type){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure you want to remove this?")}}}).result.then(function(){MonacaApi.Ide.Project.deleteSettingImage(projectId,type),$scope.splashTypeList[type]&&($scope.splashTypeList[type].missing=!0)})},$scope.onImageLoadError=function(splash){splash&&(splash.missing=!0)},$scope.submit=function(){var data={android:Object.assign({},$scope.settings)};$scope.specifyVersionCode||(data.android.versionCode_android=""),$scope.isReadyToSave=!1,$scope.saving=!0,MonacaApi.Ide.Project.saveProjectSetting(projectId,data).then(function(){$scope.isReadyToSave=!0,$scope.saving=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully saved")}),ProjectSettingFactory.reload(),oldSettings=Object.assign({},$scope.settings),$scope.$apply()})}}]),angular.module("monacaIDE").controller("AndroidBuildController",["$scope","$controller","Constant","InAppUpdaterService","Dialog","gettextCatalog","PubSub","ProjectFactory",function($scope,$controller,Constant,InAppUpdaterService,Dialog,gettextCatalog,PubSub,ProjectFactory){angular.extend(this,$controller("BaseBuildController",{$scope:$scope})),$scope.platform="android",$scope.flag_monaca_hosting_app={android:!1},$scope.flag_alias_password_changed=!1,ProjectFactory.loading.then(function(){$scope.isCustomBuildDebuggerServiceEnabled=ProjectFactory.hasCustomDebugBuildService("android")});var previousUsedAlias=null;$scope.isRPGUser&&InAppUpdaterService.getRemotePackgeList().then(function(result){$scope.inappupdater_packages=result}),$scope.manageBuildSettings=function(){$scope.isAppMode()?$scope.setPage(Constant.PAGE_ANDROID_BUILD_SETTINGS,!0):PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildsettingsandroid",title:gettextCatalog.getString("Build Settings for Android"),icon:"settings",templateUrl:"build/AndroidBuildSettings.html"}})},$scope.initProfiles=function(result){$scope.aliasList=result.project.android.alias_android_list||[],(previousUsedAlias=result.project.android.alias_android||null)&&$scope.aliasList.map(function(v){return v.alias}).includes(previousUsedAlias)?($scope.alias_name=previousUsedAlias,$scope.showDummyPassword()):$scope.alias_name=$scope.aliasList.length?$scope.aliasList[0].alias:null},$scope.createBuildParameters=function(){var params={};return $scope.alias_name&&(params.alias_name=$scope.alias_name,($scope.alias_name!==previousUsedAlias||$scope.flag_alias_password_changed)&&(params.alias_password=$scope.alias_password||"")),$scope.flag_monaca_hosting_app.android&&(params.inapp_updater_env=$scope.purpose,params.purpose="inapp_updater",params.update_number="1"),params},$scope.aliasPasswordChanged=function(){$scope.flag_alias_password_changed=!0},$scope.showDummyPassword=function(){$scope.alias_name===previousUsedAlias?$scope.alias_password="********":$scope.alias_password=""},$scope.deleteUpdateNumber=function(package_id){Dialog.confirm(gettextCatalog.getString("Are you sure to delete this package?")).then(function(){$scope.deleting=!0,MonacaApi.Ide.InAppUpdater.deleteUpdateNumber(window.config.projectId,package_id).then(function(res){InAppUpdaterService.getRemotePackgeList().then(function(result){$scope.inappupdater_packages=result,$scope.deleting=!1})})})}}]),angular.module("monacaIDE").controller("AndroidBuildSettingsController",["$scope","gettextCatalog","$controller","$uibModal","Dialog",function($scope,gettextCatalog,$controller,$modal,Dialog){var projectId=window.config.projectId;$scope.aliasList=[],$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.init=function(){$scope.updatePage()},$scope.showBackButton=function(){return $scope.hasPrevPage()&&$scope.isAppMode()},$scope.updatePage=function(){$scope.updating=!0,MonacaApi.Ide.Project.getProjectSetting(projectId).then(function(response){var projectInfo=(response.body&&response.body.result?response.body.result:{}).project.android||{};$scope.hasKeyStore=projectInfo.has_keystore||!1,$scope.aliasList=projectInfo.alias_android_list,$scope.updating=!1,$scope.$apply()})},$scope.clickGenerateKeyStore=function(){Dialog.confirm(gettextCatalog.getString("Are you sure to remove the KeyStore and all the aliases?")).then(function(){$modal.open({templateUrl:"build/dialogs/KeyStoreGeneratorDialog.html",controller:"KeyStoreGeneratorDialogController"}).result.then(function(){$scope.updatePage()})})},$scope.clickAddAlias=function(){$modal.open({templateUrl:"build/dialogs/KeyStoreAddAliasDialog.html",controller:"KeyStoreAddAliasDialogController"}).result.then(function(){$scope.updatePage()})},$scope.clickDeleteAlias=function(aliasName){Dialog.confirm(gettextCatalog.getString("Are you sure to delete this alias from KeyStore?")).then(function(){MonacaApi.Ide.Project.deleteAlias(projectId,aliasName).then(function(){$scope.updatePage()})})},$scope.clickImport=function(){Dialog.confirm(gettextCatalog.getString("Current KeyStore and all the aliases will be lost. Are you sure to continue?")).then(function(){$modal.open({templateUrl:"build/dialogs/KeyStoreImportDialog.html",controller:"KeyStoreImportDialogController"}).result.then(function(){$scope.updatePage()})})},$scope.clickExport=function(){$modal.open({templateUrl:"build/dialogs/KeyStoreExportDialog.html",controller:"KeyStoreExportDialogController"})}}]),angular.module("monacaIDE").controller("BaseBuildController",["$q","$scope","Constant","PubSub","gettextCatalog","ProjectFactory",function($q,$scope,Constant,PubSub,gettextCatalog,ProjectFactory){var projectId=window.config.projectId;$scope.lang=window.MonacaApi.Config.getLanguage(),$scope.platform=null,$scope.cordovaVersion=ProjectFactory.getCurrentCordovaVersion(),$scope.willDeprecateCordovaVersion=parseFloat($scope.cordovaVersion)>6&&parseFloat($scope.cordovaVersion)<7,$scope.canBuild=!1,$scope.type=window.config.initialBuildType||"development",$scope.purpose=window.config.initialBuildPurpose||"debug",$scope.tab={development:"debug",production:"release"},$scope.tab[$scope.type]=$scope.purpose,(window.config.initialBuildType||window.config.initialBuildPurpose)&&(window.config.initialBuildType=null,window.config.initialBuildPurpose=null),$scope.$on("SHOW_DEBUGGER_TAB",function(e){$scope.type="development",$scope.purpose="debugger",$scope.tab[$scope.type]=$scope.purpose,$scope.$apply()}),$scope.isAppMode=function(){return window.location.href.indexOf("/build/")>-1},$scope.buildProblems=[],$scope.buildWarnings=[],$scope.init=function(){MonacaApi.Ide.User.info().then(function(response){$scope.userInfo=response.body.result||{}}).then(function(){"cordova"===ProjectFactory.getFramework()&&MonacaApi.Ide.Cordova.list(projectId).then(function(response){var plugins=response.body.result?response.body.result:{};$scope.$apply(function(){plugins[Constant.PLUGIN.INAPP_UPDATER]?$scope.inAppUpdaterPlugin=plugins[Constant.PLUGIN.INAPP_UPDATER]:plugins[Constant.PLUGIN.INAPP_UPDATER_CORDOVA7]?$scope.inAppUpdaterPlugin=plugins[Constant.PLUGIN.INAPP_UPDATER_CORDOVA7]:$scope.inAppUpdaterPlugin={}})})}),$q.when(MonacaApi.Ide.Project.getProjectSetting(projectId)).then(function(response){return response.body.result?response.body.result:{}}).then(function(result){return $scope.initProfiles(result)}).then(function(){return $scope.checkBuildSettings()}).catch(function(error){console.log(error)})},$scope.initProfiles=function(result){return{}},$scope.createBuildParameters=function(){return{}},$scope.checkBuildSettings=function(){var params=$scope.createBuildParameters();return $q.when(MonacaApi.Ide.Build.canBuildApp(projectId,$scope.platform,$scope.purpose,params)).then(function(response){var result=response.body.result||{};let keys=Object.keys(result);$q.when(MonacaApi.Ide.Project.getBuildEnvironmentSetting(projectId)).then(buildEnvResponse=>{if($scope.buildProblems=keys.filter(key=>!key.includes("warning")).map(key=>({key:key,value:result[key]})),$scope.buildWarnings=keys.filter(key=>key.includes("warning")&&result[key]).map(key=>({key:key,value:result[key]})),"release"===$scope.purpose){let xcodeVersion=buildEnvResponse&&buildEnvResponse.body&&buildEnvResponse.body.result&&buildEnvResponse.body.result.ios&&buildEnvResponse.body.result.ios.filter(x=>x.enabled)[0];xcodeVersion&&xcodeVersion.xcode<10.1&&$scope.buildWarnings.push({key:"xcode_version_warning",value:xcodeVersion.xcode})}$scope.canBuild=result.can_build||!1})})},$scope.changeTab=function(type,purpose){$scope.type=type,purpose?$scope.tab[type]=purpose:purpose=$scope.tab[type],$scope.purpose=purpose,$scope.buildProblems=[],$scope.buildWarnings=[],$scope.checkBuildSettings()},$scope.build=function(){$scope.building=!0;var buildParams={platform:$scope.platform,purpose:$scope.purpose};buildParams=Object.assign(buildParams,$scope.createBuildParameters()),MonacaApi.Ide.Build.build(projectId,buildParams).then(function(response){return $scope.building=!1,window.location.href.indexOf("/build/")>-1?window.location.href=`/build/${projectId}/build-result/${response.body.result.queue_id}`:PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:response.body.result.queue_id,title:gettextCatalog.getString("Build Results"),icon:"settings",templateUrl:"build/BuildResult.html"}}),response}).catch(function(error){$scope.building=!1;var message=error.body.message||gettextCatalog.getString("Failed to upload file.");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})})}}]),angular.module("monacaIDE").controller("BuildHistoryController",["$scope","$uibModal","BuildService","Constant","PubSub","gettextCatalog","$routeParams","ProjectFactory",function($scope,$modal,BuildService,Constant,PubSub,gettextCatalog,$routeParams,ProjectFactory){var START_COUNTER=3,LAST_INCREMENT=1,showUpgradeDialog=!1,platforms=["android","ios","winrt","pwa","custom","electron_linux","electron_macos","electron_windows"];function fetchList(){var history;BuildService.fetchLogList({maxnum:START_COUNTER*LAST_INCREMENT,count:1}).then(response=>{for(var history in platforms.forEach(platform=>{this.totalItemCounts[platform]=response.result[platform].total,this.totalItemCounts.total+=response.result[platform].total}),this.historyCollection=[].concat(response.result.android.items,response.result.ios.items,response.result.winrt.items,response.result.pwa.items,response.result.custom.items,response.result.electron_linux.items,response.result.electron_macos.items,response.result.electron_windows.items),moment.locale(window.MonacaApi.Config.getLanguage()),this.historyCollection){var finishedAt=window.moment(this.historyCollection[history].finished_at);this.historyCollection[history].finishedAt="en"===window.MonacaApi.Config.getLanguage()?finishedAt.format("MMM D HH:mm:ss"):finishedAt.format("YYYY年M月D日 HH:mm:ss");var createdAt=window.moment(this.historyCollection[history].created_at);this.historyCollection[history].ellapsed=createdAt.subtract((new Date).getTimezoneOffset()+540,"m").fromNow(),this.historyCollection[history].logUrl=(history=this.historyCollection[history],[window.config.monacaAppHost,window.MonacaApi.Config.getLanguage(),"services",window.config.projectId,history.platform,"build",history.id].join("/")+"?hide_sidebar=1")}}).catch(e=>{switch(e.status){case 401:showUpgradeDialog||($modal.open({templateUrl:"build/BuildUpgradeConfirmDialog.html",controller:"BuildUpgradeConfirmDialogController",windowClass:"confirm-window",resolve:{$parent:function(){return $scope.$parent}}}),showUpgradeDialog=!0)}})}this.historyCollection=[],this.isGenericProject=ProjectFactory.isGenericProject(),this.platform="",this.totalItemCounts={total:0},$scope.hasBuildService=function(platform){return!!platform&&ProjectFactory.hasBuildService(platform)},this.isBuildFinished=function(status){return["finish","fail","cancel","kill","ios-publish-success","ios-publish-fail"].indexOf(status)>-1},fetchList.call(this),this.fetchIntervalId=setInterval(fetchList.bind(this),6e3),this.fetchMoreHistory=function(){clearInterval(this.fetchIntervalId),LAST_INCREMENT++,fetchList.call(this),this.fetchIntervalId=setInterval(fetchList.bind(this),6e3)},this.showDetails=function(history){return window.location.href.indexOf("/build/")>-1?window.location.href=`/build/${$routeParams.projectId}/build-result/${history.id}`:PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:history.id,title:gettextCatalog.getString("Build Results"),icon:"settings",templateUrl:"build/BuildResult.html"}}),!0},this.onClickDelete=function(historyId){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm Deletion")},message:function(){return gettextCatalog.getString("Are you sure you want to delete this build history?")}}}).result.then(function(){BuildService.deleteHistory(historyId).then(function(){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The selected build history has been deleted successfully.")})})})},this.hasMore=function(){return(this.platform?this.totalItemCounts[this.platform]:this.totalItemCounts.total)>START_COUNTER*LAST_INCREMENT},this.beforeClose=function(){clearInterval(this.fetchIntervalId.bind(this)),this.$destroy()},$scope.$on("$destroy",function(){clearInterval(this.fetchIntervalId)}.bind(this))}]),angular.module("monacaIDE").controller("BuildEnvironmentSettingsController",["$scope","PubSub","Constant","gettextCatalog","ProjectService","ProjectFactory",function($scope,PubSub,Constant,gettextCatalog,ProjectService,ProjectFactory){$scope.environments=null,$scope.selectedEnvironment=null,$scope.loading=!0,$scope.gradleVersion="",$scope.selectEnvironment=function(selectedEnvID,platform){selectedEnvID&&platform&&($scope.selectedEnvironment=selectedEnvID,$scope.environments[platform].map((config,index)=>{$scope.environments[platform][index].enabled=config.id===selectedEnvID}))},$scope.save=function(){$scope.loading=!0,ProjectService.saveBuildEnvironmentSetting(window.config.projectId,{id:$scope.selectedEnvironment}).then(resp=>{PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully saved")}),$scope.loading=!1}).catch(err=>{console.error(err),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Failed to save")}),$scope.loading=!1})},$scope.init=function(){$scope.loading=!0,ProjectFactory.isGreaterOrEqualCordovaVersion(9)?$scope.gradleVersion="4.10.3":$scope.gradleVersion="4.4.1",ProjectService.getBuildEnvironmentSetting(window.config.projectId).then(env=>{$scope.environments=env,$scope.loading=!1}).catch(err=>{console.error(err),console.log("use default build setting environment"),$scope.loading=!1})}}]),angular.module("monacaIDE").controller("BuildResultController",["$scope","$timeout","$uibModal","WebSocketHandlerService","gettextCatalog","Dialog","ProjectFactory","DeployServiceFactory","BuildService","PubSub","UserFactory","Constant","$routeParams","$element","$sce",function($scope,$timeout,$modal,WebSocketHandlerService,gettextCatalog,Dialog,ProjectFactory,DeployServiceFactory,BuildService,PubSub,UserFactory,Constant,$routeParams,$element,$sce){var projectId=window.config.projectId||$routeParams.projectId,queueId=window.config.queueId||$routeParams.queueId,refreshTimer=null;moment.locale(window.MonacaApi.Config.getLanguage()),$scope.DeployServiceFactory=DeployServiceFactory,$scope.deployServices=[{name:"Appetize.io",service_type:"AppetizeIo",app_logo:"/img/services/logo_large_appetizeio.png"},{name:"DeployGate",service_type:"DeployGate",app_logo:"/img/services/logo_large_deploygate.png"},{name:"Firebase",service_type:"Firebase",app_logo:"/img/services/logo_large_firebase.png"},{name:"HockeyApp",service_type:"HockeyApp",app_logo:"/img/services/logo_large_hockeyapp.png"}],$scope.showIosAppUploader=!1,$scope.showDeployService=!1,$scope.showSecurityService=!1,$scope.is_public=!1,$scope.is_result_public=!1,$scope.sharedBuildResultUrl="",$scope.comboboxLabel=[{n:gettextCatalog.getString("Disabled"),v:!1},{n:gettextCatalog.getString("Enabled"),v:!0}],$scope.queue=null,$scope.buildLog="",$scope.cordovaVersion=ProjectFactory.getCurrentCordovaVersion(),$scope.showBuildLog=!1,$scope.isReactNative="react-native"===ProjectFactory.getFramework(),$scope.isCordova=!ProjectFactory.getFramework()||"cordova"===ProjectFactory.getFramework(),$scope.isGeneric=ProjectFactory.isGenericProject(),$scope.supportLink="ja"===window.MonacaApi.Config.getLanguage()?"https://ja.monaca.io/support/technical/index.html":"https://monaca.io/support/technical/index.html",$scope.showProjectVersion=!ProjectFactory.isGenericProject(),$scope.buildTaskResults=[],$scope.showArtifacts=[],$scope.showReport=[],$scope.showAggregateReport=[],$scope.toggleArtifacts=(buildTaskID=>{$scope.showArtifacts[buildTaskID]=!$scope.showArtifacts[buildTaskID]}),$scope.toggleReport=(buildTaskID=>{$scope.showReport[buildTaskID]=!$scope.showReport[buildTaskID]}),$scope.toggleAggregateReport=(buildTaskID=>{$scope.showAggregateReport[buildTaskID]=!$scope.showAggregateReport[buildTaskID]});var createQRCodeURL={prepare:function(project_id,queue_id){createQRCodeURL=function(size){return project_id&&queue_id?(size=size||3,window.config.client.host.ide_host+"/api/project/"+project_id+"/downloadQR/"+queue_id+"?size="+size):null}}};$scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.init=function(){var rawQueueId;setTimeout(()=>{queueId||(queueId=$element[0].parentElement.id.replace("mn-gl-",""));var tmp=queueId.split("_");$scope.rawQueueId=tmp[0],$scope.updateQueueInfo(),rawQueueId=$scope.rawQueueId,WebSocketHandlerService.connect(window.MonacaApi.Config.getApiToken()),WebSocketHandlerService.subscribeByQueueId(rawQueueId,$scope.updateBuildLog),$scope.buildLog=WebSocketHandlerService.getBuildLog(rawQueueId),refreshTimer=setInterval($scope.updateQueueInfo,5e3)})},$scope.ownedDeployServiceFilter=function(service){return!(!service||!$scope.queue)&&DeployServiceFactory.ownedCollection.every(function(ownedDeployService){return ownedDeployService.service_type!==service.service_type})},$scope.deployServiceCustomFilter=function(service){if(!service||!$scope.queue)return!1;var serviceKey=service.service_type+"BackendService",serviceData=DeployServiceFactory.serviceCollection[serviceKey];return!!serviceData&&serviceData.supported_build_platforms.indexOf($scope.queue.platform)>-1},$scope.convertServiceLargeImgToSmall=function(url){return url.replace("_large_","_small_")},$scope.sendToDeployService=function(service){if("process"===service.manualProcessStatus)return!1;$modal.open({templateUrl:"build/dialogs/SendManualDeployServiceRequest.html",controller:"DeployServiceRequestController",resolve:{service:service,queueId:function(){return queueId}}})},$scope.sendToApkCheckerService=function(){var href=window.config.client.host.app_host+"/"+window.MonacaApi.Config.getLanguage()+"/security_checker/"+projectId+"/"+queueId;$modal.open({templateUrl:"build/dialogs/ConfirmApkCheckDialog.html",controller:"ConfirmApkCheckDialogController",resolve:{link:function(){return href}}})},$scope.openDeployLogs=function($event,service){return $event.preventDefault(),$event.stopPropagation(),"failed"===service.manualProcessStatus&&($modal.open({templateUrl:"build/dialogs/ViewManualDeployServiceLog.html",controller:"DeployServiceLogController",resolve:{service:service}}),!1)},$scope.updateQueueInfo=function(){MonacaApi.Ide.Project.getBuildQueue(projectId,queueId).then(function(response){var queue=response.body.result||{};$scope.is_public=queue.is_public,$scope.is_result_public=!!queue.is_result_public,$scope.sharedBuildResultUrl=window.config.client.host.app_host+"/"+window.MonacaApi.Config.getLanguage()+"/build-result/"+queueId,"ios"===queue.platform&&"release"===queue.type&&($scope.showIosAppUploader=!0),"android"===queue.platform&&window.config.client.service&&window.config.client.service.security_checker&&($scope.showSecurityService=!0);var finishedAt=moment(queue.finished_at);queue.label=function(queue){var label="";if("custom"===queue.platform)return queue.build_name;switch(queue.platform){case"ios":label="iOS";break;case"android":label="Android";break;case"winrt":label="Windows";break;case"pwa":label="PWA";break;case"electron_macos":label="Electron macOS";break;case"electron_linux":label="Electron Linux";break;case"electron_windows":label="Electron Windows"}switch(label+=" ",queue.type){case"debug":label+=gettextCatalog.getString("Debug Build");break;case"debugger":label+=gettextCatalog.getString("Debugger Build");break;case"release":label+=gettextCatalog.getString("Release Build");break;case"adhoc":label+=gettextCatalog.getString("AdHoc Build");break;case"inhouse":label+=gettextCatalog.getString("In-House Build");break;case"inapp_updater":label+=gettextCatalog.getString("InAppUpdater Build");break;case"simulator":label+=gettextCatalog.getString("Simulator Build")}return label}(queue),queue.ellapsed=finishedAt.fromNow(),queue.finishedAtLabel="en"===window.MonacaApi.Config.getLanguage()?finishedAt.format("MMM D HH:mm:ss"):finishedAt.format("YYYY年M月D日 HH:mm:ss"),queue.status.match(/^ios-publish-/)&&(queue.status="finish"),$scope.queue=queue,DeployServiceFactory.fetch().then(function(){$scope.showDeployService=DeployServiceFactory.ownedCollection.length>0}),$scope.$apply(),$scope.isBuildFinishStatus(queue.status)&&(clearInterval(refreshTimer),WebSocketHandlerService.close(),refreshTimer=null,MonacaApi.Ide.Build.result(projectId,queueId).then(function(response){$scope.buildResult=response.body.result||{},createQRCodeURL.prepare($scope.buildResult.project_id,$scope.buildResult.queue_id),$scope.qrCodeUrl=createQRCodeURL(3),$scope.canShowQrCodeUrl=$scope.canShowQR($scope.queue.platform,$scope.queue.type),$scope.buildLog=$scope.buildResult?$scope.buildResult.build_log:"",$scope.showSendAppIcon=$scope.canShowSendAppIcon($scope.queue.platform,$scope.queue.type),$scope.buildTaskResults=$scope.buildResult?$scope.buildResult.build_task_result:[],$scope.showArtifacts=[],$scope.showReport=[],$scope.showAggregateReport=[],$scope.buildTaskResults&&$scope.buildTaskResults.forEach(buildTaskResult=>{if(buildTaskResult.parsed={},buildTaskResult.artifact&&""!==buildTaskResult.artifact){var outputFlieUrl=document.createElement("a");outputFlieUrl.href=buildTaskResult.artifact,buildTaskResult.parsed.artifactServerOrigin=outputFlieUrl.protocol+"//"+outputFlieUrl.host,buildTaskResult.parsed.outputFliePath=outputFlieUrl.pathname.match(/^\/(.*)$/)[1]}else buildTaskResult.parsed.artifactServerOrigin=null,buildTaskResult.parsed.outputFliePath=null;buildTaskResult.artifact_structure&&""!==buildTaskResult.artifact_structure?buildTaskResult.parsed.artifactStructure=JSON.parse(buildTaskResult.artifact_structure):buildTaskResult.parsed.artifactStructure=null,$scope.showArtifacts[buildTaskResult.task_id]=!1,$scope.showReport[buildTaskResult.task_id]=!1,$scope.showAggregateReport[buildTaskResult.task_id]=!1}),$scope.$apply()}))})},$scope.getReportResult=function(reportResult){if(!reportResult||!reportResult.detail)return null;const userId=UserFactory.getUserId();return reportResult.detail.filter(report=>report.user_id===userId)[0]},$scope.isBuildFinishStatus=function(status){return["finish","fail","cancel","kill","ios-publish-finish","ios-publish-fail"].indexOf(status)>=0},$scope.canShowQR=function(platform,purpose){return!("inapp_updater"===purpose||"ios"===platform&&"simulator"===purpose||"ios"===platform&&"release"===purpose||"pwa"===platform||"electron_macos"===platform||"electron_linux"===platform||"electron_windows"===platform)},$scope.canShowSendAppIcon=function(platform,purpose){var enableList={android:["debug","release"],ios:["adhoc","inhouse"],winrt:["debug","release"]};return enableList[platform]&&enableList[platform].includes(purpose)||!1},$scope.openQRCodeDialog=function(){$modal.open({templateUrl:"build/dialogs/AdHocQRCodeDialog.html",controller:"AdHocQRCodeDialogController",resolve:{url:function(){return createQRCodeURL(7)},queue_id:function(){return queueId}}})},$scope.openUploaderWindow=function(){if([Constant.PLAN.FREE,Constant.PLAN.EDUCATION].includes(UserFactory.getSubscriptionInfo().toLowerCase()))$scope.errorMessage=gettextCatalog.getString("Upgrade your account to be able to upload your app to AppStore.");else{var href=window.config.client.host.app_host+"/"+window.MonacaApi.Config.getLanguage()+"/uploader/"+projectId+"/"+queueId;window.open(href)}},$scope.openSecurityCheckerWindow=function(){var href=window.config.client.host.app_host+"/"+window.MonacaApi.Config.getLanguage()+"/security_checker/"+projectId+"/"+queueId;window.open(href)},$scope.openSendAppDialog=function(){Dialog.confirm(gettextCatalog.getString("Submit email to your registered email address.")).then(function(){MonacaApi.Ide.Build.sendApp(projectId,queueId).then(function(){Dialog.alert(gettextCatalog.getString("An email has been sent to your account."),gettextCatalog.getString("Success"))})})},$scope.updateBuildLog=function(res){res.data&&res.data.queueId&&$timeout(function(){$scope.buildLog=WebSocketHandlerService.getBuildLog(res.data.queueId)})},$scope.setIsResultPubliclyReadable=function(){BuildService.setIsResultPubliclyReadable(queueId,$scope.is_result_public)},$scope.setIsPubliclyDownloadable=function(){BuildService.setIsPubliclyDownloadable(queueId,$scope.is_public).then(function(){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:"The publicly downloadable option was changed."})})},$scope.copySharedBuildResultUrl=function(){document.querySelector("#shared-build-result-url").select(),document.execCommand("copy"),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:"Copied!"})},$scope.addNewDeployService=function(service){$modal.open({templateUrl:"build/DeployServiceAddDialog.html",controller:"DeployServiceAddDialogController",windowClass:"deploy-service-add-dialog",resolve:{service:Object.values(DeployServiceFactory.serviceCollection).find(function(deployService){return deployService.name===service.service_type})||!1}})},$scope.showBuildLogTextArea=function(){$scope.showBuildLog=!0,setTimeout(function(){document.getElementById("build-log-area-"+$scope.rawQueueId).scrollIntoView()},0)}}]),angular.module("monacaIDE").controller("BuildUpgradeConfirmDialogController",["$scope","$uibModalInstance","$sce",function($scope,$modalInstance,$sce){$scope.ok=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.dismiss(!1)}}]),angular.module("monacaIDE").controller("ContinuousIntegrationController",["$scope","PubSub","$q","gettextCatalog","Dialog","$uibModal","ContinuousIntegrator","DeployServiceFactory","Constant","ProjectFactory",function($scope,PubSub,$q,gettextCatalog,Dialog,$modal,ContinuousIntegrator,DeployServiceFactory,Constant,ProjectFactory){$scope.loading=!0,$scope.error=!1,$scope.project_vcs={service_type:"GitHub",username:null,email:null},$scope.ci_tickets={usable:null,total:null,total_complimentary:null},$scope.hasVcsConfiguration=$scope.project_vcs.username&&$scope.project_vcs.email,$scope.hasGitHubAccount=$scope.project_vcs.username&&$scope.project_vcs.email,$scope.config="",$scope.enabled=!1,$scope.ci_status_image="/img/services/icon_error.png",$scope.url={vcs_configure:null,plan_details:null},$scope.hasDeployServiceEnabled=ProjectFactory.hasDeployServiceEnabled(),$scope.DeployServiceFactory=DeployServiceFactory,$q.all([ContinuousIntegrator.fetch(),DeployServiceFactory.fetchOwnedCollection()]).then(function(responses){var response=responses[0];response.url&&($scope.url=response.url),$scope.config=JSON.stringify(response.config,void 0,2),$scope.enabled=response.enabled,$scope.updateStatusDisplay(),$scope.project_vcs=response.project_vcs,$scope.ci_tickets=response.ci_tickets,$scope.hasVcsConfiguration=$scope.project_vcs.username&&$scope.project_vcs.email,$scope.loading=!1,$scope.error=!1},function(response){var result=response.body.result;result.url&&($scope.url=result.url),$scope.loading=!1,$scope.error=result.errorType}),$scope.save=function(){ContinuousIntegrator.save($scope.config).then(function(response){$scope.config=JSON.stringify(response.config,void 0,2),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Configs were saved successfully.")})},function(response){return $modal.open({templateUrl:"ContinuousIntegrationJsonErrorDialog.html",controller:"ContinuousIntegrationJsonErrorDialogController",windowClass:"ci-alert-dialog",resolve:{title:function(){return response.title},message:function(){return response.message}}}).result})},$scope.toggleStatus=function(){var isEnabled=!$scope.enabled;ContinuousIntegrator.enable(isEnabled).then(function(response){$scope.enabled=response.enabled,$scope.updateStatusDisplay()},function(result){return Dialog.alert(gettextCatalog.getString("Failed to update the status of the CI configurations. Please try again."),gettextCatalog.getString("Failed to Update CI Status"))})},$scope.updateStatusDisplay=function(){$scope.ci_status_image=$scope.enabled?"/img/size18/icon_check.png":"/img/size18/icon_error.png",$scope.ci_status_text=$scope.enabled?gettextCatalog.getString("Enable"):gettextCatalog.getString("Disable"),$scope.ci_status_text_ng=$scope.enabled?gettextCatalog.getString("Disable"):gettextCatalog.getString("Enable")},$scope.configureVcs=function(){window.open($scope.url.vcs_configure)},$scope.planDetails=function(){window.open($scope.url.plan_upgrade)},$scope.upgradePlan=function(){var page_title=gettextCatalog.getString("Upgrade Plan");return $scope.url.plan_upgrade?function(page,page_title){return Dialog.confirm(gettextCatalog.getString('You are about to be redirected away from the Monaca Cloud IDE. Would you like to continue to the "{{page_title}}" page?',{page_title:page_title}),gettextCatalog.getString("Leaving Cloud IDE")).then(function(allowRedirect){allowRedirect&&(window.location=page)})}($scope.url.plan_upgrade,page_title):function(page_title){return Dialog.alert(gettextCatalog.getString('An error occurred while attempting to redirect you to the "{{page_title}}" page.',{page_title:page_title}),gettextCatalog.getString("Redirection Failure"))}(page_title)},$scope.loadDeployServices=function(){angular.element(document.getElementById("settings")).scope().setPage(Constant.PAGE_DEPLOY_SERVICE)},$scope.openSetupVcsDoc=function(){window.open($scope.docs_url+"/products_guide/monaca_ide/version_control/github_integration/")}}]),angular.module("monacaIDE").controller("ContinuousIntegrationJsonErrorDialogController",["$scope","$window","title","$sce","message",function($scope,$window,title,$sce,message){$scope.title=title,$scope.message=$sce.trustAsHtml(message),$scope.gotoCiJsonDocs=function(){$window.open($scope.docs_url+"/manual/monaca_ci/json_sample/")}}]),angular.module("monacaIDE").controller("CordovaConfigAssetsEncryptPasswordController",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService",function($scope,gettextCatalog,Constant,PubSub,CordovaPluginService){$scope.loading=!0,$scope.passwordExists=!1,$scope.password="",$scope.password_confirm="",CordovaPluginService.hasAssetEncryptionPassword().then(function(resp){if("ok"!==resp.status)return PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("An unexpected error has occurred while fetching encrypt plugin settings. Please try again.")}),$scope.$close(),!1;$scope.passwordExists=resp.result.has_assets_encrypt_password,$scope.loading=!1}),$scope.ok=function(){CordovaPluginService.saveAssetsEncryptPassword($scope.password,$scope.password_confirm).then(function(resp){var message="ok"===resp.status?gettextCatalog.getString("Successfully set resource encryption password."):resp.message||gettextCatalog.getString("Failed to set resource encryption password.");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"ok"===resp.status?"success":"danger",content:message}),"ok"!==resp.status&&resp.message||$scope.$close()})}}]),angular.module("monacaIDE").controller("CordovaConfigInAppUpdater4Controller",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService",function($scope,gettextCatalog,Constant,PubSub,CordovaPluginService){$scope.loading=!0,$scope.check_update_url="https://",$scope.download_url="https://",CordovaPluginService.getInAppUpdater4Setting().then(function(resp){if("ok"!==resp.status)return PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("An unexpected error has occurred while fetching In-App Updater plugin settings. Please try again.")}),$scope.$close(),!1;$scope.check_update_url=resp.result.checkUpdateUrl||"",$scope.download_url=resp.result.downloadUrl||"",$scope.loading=!1}),$scope.ok=function(){CordovaPluginService.saveInAppUpdater4Setting($scope.check_update_url,$scope.download_url).then(function(resp){var message="ok"===resp.status?gettextCatalog.getString("Successfully saved In-App Updater Cordova plugin settings."):resp.message||gettextCatalog.getString("Failed to save In-App Updater Cordova plugin settings.");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"ok"===resp.status?"success":"danger",content:message}),"ok"!==resp.status&&resp.message||$scope.$close()})}}]),angular.module("monacaIDE").controller("CordovaConfigInAppUpdaterController",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService",function($scope,gettextCatalog,Constant,PubSub,CordovaPluginService){$scope.loading=!0,$scope.update_modes=[{value:"default",text:gettextCatalog.getString("default")},{value:"severe",text:gettextCatalog.getString("severe")}],$scope.deploy_url="",$scope.update_mode="default",CordovaPluginService.getInAppUpdaterSetting().then(function(resp){if("ok"!==resp.status)return PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("An unexpected error has occurred while fetching In-App Updater plugin settings. Please try again.")}),$scope.$close(),!1;$scope.update_mode=resp.result.updateMode||"default",$scope.deploy_url=resp.result.updateUrl||"",$scope.loading=!1}),$scope.ok=function(){CordovaPluginService.saveInAppUpdaterSetting($scope.update_mode,$scope.deploy_url).then(function(resp){var message="ok"===resp.status?gettextCatalog.getString("Successfully saved In-App Updater Cordova plugin settings."):resp.message||gettextCatalog.getString("Failed to save In-App Updater Cordova plugin settings.");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"ok"===resp.status?"success":"danger",content:message}),"ok"!==resp.status&&resp.message||$scope.$close()})}}]),angular.module("monacaIDE").controller("CordovaConfigPluginCommonController",["$scope","PubSub","gettextCatalog","Constant","ProjectFactory","CordovaPluginService","pluginData",function($scope,PubSub,gettextCatalog,Constant,ProjectFactory,CordovaPluginService,pluginData){$scope.loading=!0,$scope.plugin=pluginData,$scope.pluginVersionChangeDisabled=!1,$scope.pluginVersionChangeVisible=!0,$scope.pluginInstallParams="",$scope.plugin_selected_version=$scope.plugin.version,$scope.plugin_version=[],$scope.plugin_id=$scope.plugin.id.split("@")[0],$scope.crosswalkVisible=!1,$scope.crosswalkVersionDisabled=!0,$scope.crosswalk_version=null,$scope.crosswalk_arch=null,$scope.crosswalk_archs={arm:"arm",x86:"x86"};var currentCordovaVersion=parseFloat(ProjectFactory.getCurrentCordovaVersion()),cordovaVersionRestriction=currentCordovaVersion>=5.2;cordovaVersionRestriction?($scope.plugin.is_npm_plugin&&!ProjectFactory.canChangeCordovaPluginVersion()&&($scope.pluginVersionChangeDisabled=!0,$scope.notifyPluginVersionChange=!0),$scope.plugin.id.indexOf(Constant.PLUGIN.CROSSWALK)>-1?($scope.crosswalkVisible=!0,$scope.crosswalkVersionDisabled=!1):($scope.crosswalkVisible=!1,$scope.crosswalkVersionDisabled=!0)):$scope.notifyPluginVersionChange=!1,(!$scope.plugin.is_npm_plugin||currentCordovaVersion<5.2)&&($scope.pluginVersionChangeDisabled=!0,$scope.pluginVersionChangeVisible=!1),CordovaPluginService.getPluginSettings($scope.plugin.id).then(function(resp){var variables=resp.result.variables||[];if(resp.result.additional_params&&resp.result.additional_params.arch?$scope.crosswalk_arch=resp.result.additional_params.arch:$scope.crosswalk_arch=null,variables.forEach(function(variable){0===variable.indexOf("XWALK_VERSION=",0)&&($scope.crosswalk_selected_version=variable.split("=")[1])}),$scope.pluginInstallParams=variables.length>0?variables.join("\n"):"",$scope.plugin.is_npm_plugin&&cordovaVersionRestriction){var plugin_name=$scope.plugin_id;CordovaPluginService.getPluginVersionCollection(plugin_name).then(function(resp){$scope.plugin_version=resp.result[plugin_name],$scope.crosswalk_version=resp.result.crosswalk_version,$scope.loading=!1})}else $scope.pluginVersionChangeDisabled=!0,$scope.pluginVersionChangeVisible=!1,$scope.loading=!1}),$scope.$watch("crosswalk_selected_version",function(newVal,oldVal){var text=$scope.pluginInstallParams;if(text){for(var splitText=text.split("\n"),i=0;i<splitText.length;i++)0===splitText[i].indexOf("XWALK_VERSION=",0)&&(splitText[i]="XWALK_VERSION="+newVal);$scope.pluginInstallParams=splitText.join("\n")}}),$scope.ok=function(){var updateParams={variables_text:$scope.pluginInstallParams,using_plugin_version:$scope.plugin.version,update_plugin_version:$scope.plugin_selected_version,pluginId:$scope.plugin_id};$scope.plugin.id.indexOf(Constant.PLUGIN.CROSSWALK)>-1&&(updateParams.additional_params={arch:$scope.crosswalk_arch}),CordovaPluginService.updatePluginSettings(updateParams).then(function(resp){var message="ok"===resp.status?gettextCatalog.getString("Successfully saved Cordova plugin settings."):gettextCatalog.getString("Failed to save Cordova plugin settings.");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"ok"===resp.status?"success":"danger",content:message})}).then(function(){PubSub.publish(Constant.EVENT.CORDOVA_PLUGIN_UPDATE_ENABLED_CARD,{id:$scope.plugin_id,version:$scope.plugin_selected_version})}).then(function(){$scope.$close()})}}]),angular.module("monacaIDE").controller("CordovaConfirmUpgradeDialogController",["$scope","$uibModalInstance","$sce","param",function($scope,$modalInstance,$sce,param){$scope.param=param,$scope.ok=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.dismiss(!1)}}]),angular.module("monacaIDE").controller("CordovaImportController",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService","ProjectFactory",function($scope,gettextCatalog,Constant,PubSub,CordovaPluginService,ProjectFactory){function uploadCallback(isSuccess,message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:isSuccess?"success":"danger",content:message}),PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE),$scope.importing=!1,!isSuccess&&message||(PubSub.publish(Constant.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION),$scope.$close())}function successCallback(resp){uploadCallback.apply(this,[!0,gettextCatalog.getString("Successfully installed custom Cordova plugin")])}function failureCallback(resp){uploadCallback.apply(this,[!1,resp&&resp.body&&resp.body.message||gettextCatalog.getString("Failed to install custom Cordova plugin.")])}$scope.hasZipImportSupport=ProjectFactory.hasZipImportSupport(),$scope.import_method=$scope.hasZipImportSupport?"zip":"url",$scope.import_file=null,$scope.import_url=null,$scope.ok=function(){if($scope.importing=!0,!$scope.hasZipImportSupport&&"zip"===$scope.import_method)return failureCallback.call(this,{body:{}});"zip"===$scope.import_method?CordovaPluginService.importCordovaPluginFile($scope.import_file).then(successCallback.bind(this),failureCallback.bind(this)):CordovaPluginService.importCordovaPluginPath($scope.import_url).then(successCallback.bind(this),failureCallback.bind(this))}}]),angular.module("monacaIDE").controller("CordovaPluginsController",["$scope","$q","$uibModal","Dialog","gettextCatalog","Constant","PubSub","ProjectFactory","CordovaPluginService","$window","EnvironmentFactory",function($scope,$q,modal,Dialog,gettextCatalog,Constant,PubSub,ProjectFactory,CordovaPluginService,$window,EnvironmentFactory){var sortedCordovaVersionList=Object.keys(ProjectFactory.getCordovaPlatformVersions()).sort(function(a,b){return a-b});this.isInitialized=!1,$scope.showImportCordovaPlugin=EnvironmentFactory.showImportCordovaPlugin(),$scope.isFujitsuAdf=ProjectFactory.isFujitsuAdf();var nextShortVersion=sortedCordovaVersionList[(sortedCordovaVersionList.indexOf(ProjectFactory.getCurrentCordovaVersion())||0)+1]<ProjectFactory.getCurrentCordovaVersion()?null:sortedCordovaVersionList[(sortedCordovaVersionList.indexOf(ProjectFactory.getCurrentCordovaVersion())||0)+1];function refresh(){window.location.href.indexOf("/build/")>-1?PubSub.publish(Constant.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION):$window.location.reload()}function reloadPluginList(){var dfd=$q.defer(),existingPlugins=[];return this.isInitialized=!1,$q.when(CordovaPluginService.list()).then(function(response){var plugins=response.result||[];this.plugins.forEach(function(plugin){existingPlugins.push(plugin.key)}),function(plugins){var promiseCollection=[],pluginCollection=[];for(var plugin in plugins){var dfd=$q.defer();promiseCollection.push(dfd.promise);var name=plugin.split("@")[0],pluginData={key:plugin,id:name,name:plugins[plugin].name||name,description:plugins[plugin].description.trim(),docs:plugins[plugin].documentUrl,thumbnail:getThumbnailUrl(plugins[plugin].thumbnailUrl),canUsed:plugins[plugin].canUsed,platforms:plugins[plugin].supportedPlatforms,requiredPlanNames:plugins[plugin].requiredPlanNames,author:"",updatedAt:"",version:plugins[plugin].version,isInstalled:plugins[plugin].isInstalled,isInstallRequired:plugins[plugin].isInstallRequired,isDefault:plugins[plugin].isDefault,isImported:plugins[plugin].isImported,is_npm_plugin:plugins[plugin].is_npm_plugin};pluginData.isInstalled&&this.installedPluginCount++,name.match(/^cordova-plugin/)&&pluginData.is_npm_plugin?npmRegistryFetch(pluginCollection,dfd,pluginData,name):(pluginCollection.push(pluginData),dfd.resolve())}return $q.all(promiseCollection).then(function(){for(var i=0;i<pluginCollection.length-1;i++)for(var j=i+1;j<pluginCollection.length;j++){var p1=pluginCollection[i],p2=pluginCollection[j];p1.id===p2.id&&p1.isInstalled&&!p2.isInstalled&&(pluginCollection[i].sparePlugin=p2,pluginCollection[j].reserveRemoval=!0)}return pluginCollection=pluginCollection.filter(function(item){return!item.reserveRemoval})})}.apply(this,[plugins]).then(function(pluginCollection){var keys=pluginCollection.map(function(v){return v.key});existingPlugins.forEach(function(key){keys.includes(key)||this.plugins.splice(this.plugins.findIndex(function(v){return v.key===key}),1)}.bind(this)),pluginCollection.forEach(function(pluginCheck){if(-1===existingPlugins.indexOf(pluginCheck.key))this.plugins.push(pluginCheck);else{var plugin=getPlugin.apply(this,[pluginCheck.key]);if(plugin)for(var attr in pluginCheck)plugin[attr]=pluginCheck[attr]}}.bind(this)),this.isInitialized=!0,dfd.resolve()}.bind(this))}.bind(this)),dfd.promise}function getPlugin(key){for(var i=0;i<this.plugins.length;i++)if(this.plugins[i].key===key)return this.plugins[i];return null}function npmRegistryFetch(pluginCollection,dfd,pluginData,name){CordovaPluginService.fetchRegistryData("npm",name).then(function(resp){pluginData.updatedAt="",pluginData.author="",pluginData.docs="",resp.result&&(pluginData.updatedAt=resp.result.modified?moment(resp.result.modified).format("YYYY-MM-DD"):"",pluginData.author=resp.result.author?resp.result.author:"",pluginData.docs=resp.result.homepage?resp.result.homepage:"",pluginData.platforms=resp.result.platforms?resp.result.platforms:[]),pluginCollection.push(pluginData),dfd.resolve()})}function getThumbnailUrl(thumbnailUrl){return thumbnailUrl?thumbnailUrl.indexOf("build")>-1?thumbnailUrl:thumbnailUrl.replace("/img/plugin","img/build/plugin"):"img/build/plugin/cordova.png"}this.version={currentShort:ProjectFactory.getCurrentCordovaVersion(),currentLong:ProjectFactory.getCordovaVersionList()[ProjectFactory.getCurrentCordovaVersion()]||null,nextShort:nextShortVersion,nextLong:nextShortVersion?ProjectFactory.getCordovaVersionList()[nextShortVersion]||null:nextShortVersion},this.canShowCordovaVersion=parseFloat(this.version.currentShort)>2.9,this.cordovaPlatformVersion=ProjectFactory.getCordovaPlatformVersions(this.version.currentShort),this.isVersionDetailVisible=!1,this.plugins=[],this.installedPluginCount=0,this.searchword="",this.isInitialized||function(){reloadPluginList.apply(this).then(function(){this.isInitialized=!0}.bind(this))}.apply(this),PubSub.subscribe(Constant.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION,reloadPluginList.bind(this)),PubSub.subscribe(Constant.EVENT.CORDOVA_PLUGIN_UPDATE_ENABLED_CARD,function(data){if(data)for(var i=0;i<this.plugins.length;i++)if(this.plugins[i].id===data.id)return void(this.plugins[i].version=data.version)}.bind(this)),this.onClickBtnEnable=function(key){$q.when(CordovaPluginService.enable(key)).then(function(resp){"fail"===resp.status?PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString(resp.message)}):(getPlugin.apply(this,[key]).isInstalled=!0,this.installedPluginCount++,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully enabled plugin.")}))}.bind(this))},this.onClickBtnDisable=function(key){Dialog.confirm(gettextCatalog.getString("Are you sure you would want to disable this plugin.")).then(function(){$q.when(CordovaPluginService.disable(key)).then(function(){var plugin=getPlugin.apply(this,[key]);plugin.isInstalled=!1,this.installedPluginCount--,plugin.sparePlugin&&(this.plugins.push(plugin.sparePlugin),this.plugins.splice(this.plugins.indexOf(plugin),1));var index=this.searchOtherVersionPluginIndex(plugin);-1!==index&&this.plugins[index].isInstalled&&(this.plugins[index].sparePlugin=plugin,this.plugins.splice(this.plugins.indexOf(plugin),1)),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully disabled plugin.")}),plugin.is_npm_plugin||PubSub.publish(Constant.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION),PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE)}.bind(this))}.bind(this))},this.searchOtherVersionPluginIndex=function(plugin){return this.plugins.findIndex(function(v){return v.name===plugin.name&&v.version!==plugin.version})},this.filterCordovaVersion=function(version){return parseFloat(version.value)>=parseFloat(ProjectFactory.getCurrentCordovaVersion())},this.isAvailablePluginEmpty=function(){return this.installedPluginCount===this.plugins.length},this.onClickBtnRemove=function(key){Dialog.confirm(gettextCatalog.getString("Are you sure to remove the plugin? Removed plugins cannot be restored.")).then(function(){$q.when(CordovaPluginService.disable(key)).then(function(){var plugin=getPlugin.apply(this,[key]);plugin.isInstalled=!1,this.installedPluginCount--,plugin.sparePlugin&&this.plugins.push(plugin.sparePlugin),this.plugins.splice(this.plugins.indexOf(plugin),1),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully deleted plugin.")}),PubSub.publish(Constant.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION),PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE)}.bind(this))}.bind(this))},this.onClickBtnConfig=function($event,plugin){var pluginCard=$($event.currentTarget).closest("div[ng-include]"),page="CordovaConfigPluginCommon";-1!==plugin.key.indexOf(Constant.PLUGIN.ENCRYPTION)?page="CordovaConfigAssetsEncryptPassword":-1===plugin.key.indexOf(Constant.PLUGIN.INAPP_UPDATER)&&-1===plugin.key.indexOf(Constant.PLUGIN.INAPP_UPDATER_CORDOVA7)||(page=plugin.version.match(/^4\./)||-1!==plugin.key.indexOf(Constant.PLUGIN.INAPP_UPDATER_CORDOVA7)?"CordovaConfigInAppUpdater4":"CordovaConfigInAppUpdater"),modal.open({templateUrl:`build/${page}.html`,controller:`${page}Controller`,windowClass:"cordova-configure-dialog",resolve:{title:function(){return""},message:function(){return""},pluginCard:function(){return pluginCard},pluginData:function(){return{name:plugin.name,id:plugin.key,is_npm_plugin:plugin.is_npm_plugin,version:plugin.version}}}})},this.onClickBtnImport=function(){modal.open({templateUrl:"build/CordovaImport.html",controller:"CordovaImportController",windowClass:"cordova-configure-dialog",resolve:{title:function(){return""},message:function(){return""}}})},this.onSelectCordovaVersion=function(){if(!this.version.nextLong)return!1;for(var selectedVersion=parseFloat(this.version.nextLong),hasStructuralChange=!1,versionWithStructuralChange=["5.2.0","6.2.0","6.5.0","7.1.0","9.0.0"],i=0;i<versionWithStructuralChange.length;i++)if(parseFloat(versionWithStructuralChange[i])===selectedVersion){hasStructuralChange=!0;break}hasStructuralChange?this.confirmStructuralChange(selectedVersion).then(function(){this.changeCordovaVersion(selectedVersion).then(function(resp){$scope.changingversion=!1,"ok"===resp.status&&Dialog.alert(gettextCatalog.getString("Your project has been upgraded to a newer version. <br/><div style=\"font-size: 13px;margin-top:7px;\">Furthermore, we created a back up in '{{new_project_name}}'</div>",{new_project_name:ProjectFactory.getProjectName()+" (Backup)"}),gettextCatalog.getString("Upgrade Completed")).then(function(){window.monaca_ide_window?PubSub.publish(Constant.EVENT.RELOAD_IDE):(PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE),PubSub.publish(Constant.EVENT.CLOSE_INACTIVATE_IDE_TABS)),refresh()},function(){refresh()})}).catch(function(resp){$scope.changingversion=!1})}.bind(this)):this.changeCordovaVersion(selectedVersion).then(function(){$scope.changingversion=!1})},this.confirmStructuralChange=function(selectedVersion){var isJP=!0;try{isJP="ja"===window.MonacaApi.Config.getLanguage()}catch(error){isJP=!0}var _param={5.2:{link:"",ios_version:"8.0",android_version:"4.0",debugger_version:"5.0.0"},6.2:{link:"",ios_version:"8.0",android_version:"4.0",debugger_version:"6.1.0"},6.5:{link:isJP?"https://press.monaca.io/takuya/467":"https://onsen.io/blog/develop-powerful-apps-with-cordova6-5/",ios_version:"9.0",android_version:"4.1",debugger_version:"6.5.0"},7.1:{link:"",ios_version:"9.0",android_version:"4.1",debugger_version:"7.0.0",additional_message:gettextCatalog.getString("Crosswalk is no longer supported on Monaca using Cordova 7. If you have the Crosswalk plugin installed, it will be removed during the upgrade.")},9:{link:isJP?"https://docs.monaca.io/ja/release_notes/20190627_cordova9/":"https://docs.monaca.io/en/release_notes/20190627_cordova9/",ios_version:"10.0",android_version:"4.4",debugger_version:"9.0.0",deprecated_plugins:["cordova-plugin-contacts","cordova-plugin-device-motion","cordova-plugin-device-orientation","cordova-plugin-file-transfer","cordova-plugin-globalization","mobi.monaca.plugins.BarcodeScanner","mobi.monaca.plugins.datepicker"]}};return modal.open({templateUrl:"build/CordovaConfirmUpgradeDialog.html",controller:"CordovaConfirmUpgradeDialogController",windowClass:"cordova-confirm-upgrade",resolve:{param:function(){return _param[selectedVersion]}}}).result},this.changeCordovaVersion=function(version){return $scope.changingversion=!0,CordovaPluginService.switchCordovaVersion(version).then(function(resp){var isSuccess="ok"===resp.status,error_message=resp.message?resp.message:gettextCatalog.getString("Failed to change Cordova version."),message=isSuccess?gettextCatalog.getString("Successfully changed Cordova version."):error_message;return PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:isSuccess?"success":"danger",content:message}),ProjectFactory._refetch(),isSuccess&&function(){this.version.currentShort=this.version.nextShort,this.version.currentLong=this.version.nextLong;var newNextShortVersion=sortedCordovaVersionList[(sortedCordovaVersionList.indexOf(this.version.currentShort)||0)+1]<ProjectFactory.getCurrentCordovaVersion()?null:sortedCordovaVersionList[(sortedCordovaVersionList.indexOf(this.version.currentShort)||0)+1];this.version.nextShort=newNextShortVersion,this.version.nextLong=newNextShortVersion?ProjectFactory.getCordovaVersionList()[newNextShortVersion]||null:newNextShortVersion}.apply(this),isSuccess?$q.resolve(resp):$q.reject(resp)}.bind(this))}}]).filter("pluginsearch",function(){return function(plugins,words){if(!words)return plugins;words=words.toLowerCase();var filteredList=[];for(var id in plugins){var plugin=plugins[id];(plugin.name.toLowerCase().indexOf(words)>=0||plugin.id.toLowerCase().indexOf(words)>=0||plugin.description.toLowerCase().indexOf(words)>=0)&&filteredList.push(plugin)}return filteredList}}),angular.module("monacaIDE").controller("DeployServiceAddDialogController",["$scope","gettextCatalog","DeployServiceFactory","service",function($scope,gettextCatalog,DeployServiceFactory,service){$scope.selected_service=service,$scope.formElements=[],$scope.formData={},$scope.alias="",$scope.error=null,$scope.DeployServiceFactory=DeployServiceFactory,$scope.addNewDeployService=function(){if(!$scope.selected_service)return $scope.error=gettextCatalog.getString("Please select a deploy service."),!1;if(""===$scope.alias)return $scope.error=gettextCatalog.getString("Please insert an alias for the selected deploy service."),!1;var missingRequiredElements=[];if($scope.formElements.forEach(function(item){item.required&&!$scope.formData[item.id]&&missingRequiredElements.push(item.label)}),missingRequiredElements.length)return $scope.error=gettextCatalog.getString("Please fill in the required fields: {{missing}}",{missing:missingRequiredElements.join(", ")}),!1;var submitForm=angular.copy($scope.formData);submitForm.alias=$scope.alias,submitForm.service=$scope.selected_service.id,DeployServiceFactory.addOwn(submitForm).then(this.$close.bind(this),function(message){$scope.error=message})},$scope.updateDeployServiceForm=function(){$scope.formElements=[],$scope.selected_service||($scope.formData={}),$scope.selected_service&&$scope.selected_service.form&&($scope.formElements=$scope.selected_service.form||[])},$scope.updateDeployServiceForm()}]),angular.module("monacaIDE").controller("DeployServiceController",["$scope","$uibModal","gettextCatalog","Dialog","DeployServiceFactory",function($scope,$modal,gettextCatalog,Dialog,DeployServiceFactory){$scope.DeployServiceFactory=DeployServiceFactory,$scope.loading=!0,$scope.error=!1,$scope.addNewDeployService=function(){return $modal.open({templateUrl:"build/DeployServiceAddDialog.html",controller:"DeployServiceAddDialogController",windowClass:"deploy-service-add-dialog",resolve:{service:!1}}).result},$scope.deleteDeployService=function(service,alias){return Dialog.confirm(gettextCatalog.getString('Are you sure you would like to delete the deploy service configurations for "{{alias}}" for service type "{{service}}"?',{alias:alias,service:service}),gettextCatalog.getString("Delete Deploy Service Configurations")).then(function(isToDelete){isToDelete&&DeployServiceFactory.removeOwn(service,alias)})},DeployServiceFactory.fetch().then(function(){$scope.loading=!1,$scope.error=!1},function(error){$scope.loading=!1,$scope.error=!0,$scope.errorObj=error})}]),angular.module("monacaIDE").controller("ElectronAppSettingsController",["$scope","gettextCatalog","$uibModal","ProjectFactory","ProjectSettingFactory","PubSub","Constant",function($scope,gettextCatalog,$modal,ProjectFactory,ProjectSettingFactory,PubSub,Constant){const projectId=window.config.projectId;let oldSettings={};const now=Date.now();$scope.isLoading={},$scope.settings={},$scope.validIcon=!0,$scope.validUploadImage=!0,$scope.getTemplateName=function(){$scope.page?$scope.page===Constant.PAGE_ELECTRON_LINUX_APP_SETTINGS?$scope.template="Linux":$scope.page===Constant.PAGE_ELECTRON_MACOS_APP_SETTINGS?$scope.template="macOS":$scope.page===Constant.PAGE_ELECTRON_WINDOWS_APP_SETTINGS&&($scope.template="Windows"):PubSub.subscribe(Constant.EVENT.VIEW_SHOWN,function(data){"mn-gl-appsettingselectronlinux"===data.componentId?$scope.template="Linux":"mn-gl-appsettingselectronmacos"===data.componentId?$scope.template="macOS":"mn-gl-appsettingselectronwindows"===data.componentId&&($scope.template="Windows")})},$scope.getTemplateName(),$scope.timestamp=function(){return now},$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.createSettingImageUrl=function(projectId,type){return window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/file/read/"+type+"?api_token="+window.MonacaApi.Config.getApiToken()},$scope.iconTypeList=function(){const list={icon_electron_app:{name:""}};for(let key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.splashTypeList=function(){const list={electron_splash_image:{w:620,h:300,name:""}};for(let key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}();let checkImageSize=function(img,minWidth,minHeight){let width=img.naturalWidth||img.width||0,height=img.naturalHeight||img.height||0;return width>=minWidth&&height>=minHeight};$scope.checkIconSize=function(minWidth,minHeight){let img=document.getElementById("image-icon_electron_app");$scope.validUploadImage=$scope.validIcon=checkImageSize(img,minWidth,minHeight)},$scope.init=function(){$scope.loading=!0,ProjectSettingFactory.loading.then(function(result){$scope.loading=!1;const config=result.config&&result.config.electron?result.config.electron:{},preference=config.preference||{};$scope.settings.applicationName_electron=config.applicationName,$scope.settings.applicationId_electron=config.applicationId,$scope.settings.versionNumber_electron=config.versionNumber,$scope.settings.applicationDescription_electron=config.applicationDescription,$scope.settings.splash_screen_background_color=preference.SplashScreenBackgroundColor?preference.SplashScreenBackgroundColor:"#464646",oldSettings=Object.assign({},$scope.settings),$scope.isInitialized=!0,$scope.isReadyToSave=!0})},$scope.valueChanged=function(fieldName){return oldSettings[fieldName]!==$scope.settings[fieldName]},$scope.uploadImage=function(element){const file=element.files[0];(function(element,minWidth,minHeight){return new Promise(function(resolve,reject){element&&"icon_electron_app"!==element.name&&resolve(!0);const file=element.files[0];let fr=new FileReader;fr.readAsDataURL(file),fr.onload=function(){let img=new Image;img.src=fr.result,img.onload=function(){resolve(checkImageSize(img,minWidth,minHeight))}},fr.onerror=function(e){console.error("Could not load this image"),reject(e)}})})(element,512,512).then(function(validImage){if(!validImage)return $scope.validUploadImage=!1,void $scope.$apply();$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to overwrite this file?")}}}).result.then(function(){const uploadType=element.name,types="icon_all_electron"===uploadType?Object.keys($scope.iconTypeList):[uploadType];types.forEach(function(type){$scope.isLoading[type]=!0}),MonacaApi.Ide.Project.uploadSettingImage(projectId,uploadType,file).then(function(){validImage&&($scope.validUploadImage=$scope.validIcon=!0),$scope.$apply(function(){types.forEach(function(type){document.getElementById("image-"+type).src=$scope.createSettingImageUrl(projectId,type)+"&t="+(new Date).getTime(),$scope.isLoading[type]=!1,$scope.checkIconSize(512,512)})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully uploaded.")})}).catch(function(){$scope.$apply(function(){types.forEach(function(type){$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Failed to upload file.")})})})}).catch(function(error){console.error(error)})},$scope.submit=function(){const data={electron:Object.assign({},$scope.settings)};$scope.isReadyToSave=!1,$scope.saving=!0,MonacaApi.Ide.Project.saveProjectSetting(projectId,data).then(function(){$scope.isReadyToSave=!0,$scope.saving=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully saved")}),ProjectSettingFactory.reload(),oldSettings=Object.assign({},$scope.settings),$scope.$apply()})}}]),angular.module("monacaIDE").controller("ElectronBuildController",["$scope","$controller","gettextCatalog","Constant","PubSub",function($scope,$controller,gettextCatalog,Constant,PubSub){angular.extend(this,$controller("BaseBuildController",{$scope:$scope})),$scope.getTemplateAndPlatformName=function(){$scope.template="",$scope.page?($scope.page===Constant.PAGE_ELECTRON_LINUX_BUILD?$scope.template="Linux":$scope.page===Constant.PAGE_ELECTRON_MACOS_BUILD?$scope.template="macOS":$scope.page===Constant.PAGE_ELECTRON_WINDOWS_BUILD&&($scope.template="Windows"),$scope.platform=`electron_${$scope.template.toLowerCase()}`):PubSub.subscribe(Constant.EVENT.VIEW_SHOWN,function(data){"mn-gl-buildforelectronlinux"===data.componentId?$scope.template="Linux":"mn-gl-buildforelectronmacos"===data.componentId?$scope.template="macOS":"mn-gl-buildforelectronwindows"===data.componentId&&($scope.template="Windows"),$scope.platform=`electron_${$scope.template.toLowerCase()}`})},$scope.getTemplateAndPlatformName(),$scope.initProfiles=function(result){"Windows"===$scope.template&&($scope.buildPackages=["zip","nsis"],result.project.electron&&result.project.electron.selectedBuildPackage?$scope.selectedBuildPackage=result.project.electron.selectedBuildPackage:$scope.selectedBuildPackage=$scope.buildPackages[0])},$scope.createBuildParameters=function(){let params={buildPackage:"zip"};return"Windows"!==$scope.template?params:($scope.selectedBuildPackage&&(params.buildPackage=$scope.selectedBuildPackage),params)},$scope.manageAppSettings=function(){$scope.isAppMode()?$scope.setPage(Constant[`PAGE_ELECTRON_${$scope.template.toUpperCase()}_APP_SETTINGS`],!0):PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:`appsettingselectron${$scope.template.toLowerCase()}`,title:gettextCatalog.getString(`App Settings for Electron ${$scope.template}`),icon:"settings",templateUrl:"build/ElectronAppSettings.html"}})}}]),angular.module("monacaIDE").controller("IosAppSettingsController",["$scope","gettextCatalog","$uibModal","ProjectFactory","ProjectSettingFactory","PubSub","Constant","PNG",function($scope,gettextCatalog,$modal,ProjectFactory,ProjectSettingFactory,PubSub,Constant,PNG){var projectId=window.config.projectId,oldSettings={};const now=Date.now();$scope.cordovaVersion=ProjectFactory.getCurrentCordovaVersion(),$scope.canChangeSplashScreenMode=$scope.cordovaVersion>=7,$scope.isLoading={},$scope.settings={},$scope.timestamp=function(){return now},$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.createSettingImageUrl=function(projectId,type){return window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/file/read/"+type+"?api_token="+window.MonacaApi.Config.getApiToken()},$scope.localizationItems=[{label:"English",value:"en"},{label:"French",value:"fr"},{label:"German",value:"de"},{label:"Italian",value:"it"},{label:"Spanish",value:"es"},{label:"Japanese",value:"ja"},{label:"Korean",value:"ko"},{label:"Chinese",value:"zh"},{label:"Chinese (simplified)",value:"zh_CN"},{label:"Chinese (traditional)",value:"zh_TW"}],$scope.iconTypeList=function(){var list={icon_iphone:{w:57,h:57,name:"iPhone"},icon_iphone_retina:{w:114,h:114,name:"iPhone Retina"},icon_ipad:{w:72,h:72,name:"iPad"},icon_ipad_retina:{w:144,h:144,name:"iPad Retina"},icon_60_ios:{w:60,h:60,name:""},icon_iphone_retina_ios7:{w:120,h:120,name:"iPhone Retina<br>(iOS7)"},icon_iphone6plus:{w:180,h:180,name:"iPhone 6<br>Plus"},icon_ipad_ios7:{w:76,h:76,name:"iPad (iOS7)"},icon_ipad_retina_ios7:{w:152,h:152,name:"iPad Retina<br>(iOS7)"},icon_40_ios:{w:40,h:40,name:""},icon_40_2x_ios:{w:80,h:80,name:""},icon_50_ios:{w:50,h:50,name:""},icon_50_2x_ios:{w:100,h:100,name:""},icon_small_ios:{w:29,h:29,name:""},icon_small_2x_ios:{w:58,h:58,name:""}};for(var key in $scope.cordovaVersion>=6&&(list.icon_small_3x_ios={w:87,h:87,name:""},list.icon_ipad_pro={w:167,h:167,name:"iPad Pro"}),list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.storeIconTypeList=function(){var list={};for(var key in $scope.cordovaVersion>=7&&(list.icon_1024_ios={w:1024,h:1024,name:"App Store"}),list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.splashImages={legacy:{splash_iphone:{w:320,h:480,name:"iPhone"},splash_iphone_retina:{w:640,h:960,name:"iPhone Retina"},splash_iphone_568h:{w:640,h:1136,name:"iPhone 5"},splash_iphone6:{w:750,h:1334,name:"iPhone 6"},splash_iphone6plus:{w:1242,h:2208,name:"iPhone 6 Plus"},splash_iphone6plus_landscape:{w:2208,h:1242,name:"iPhone 6 Plus<br>Landscape"},splash_ipad_ios7:{w:768,h:1024,name:"iPad (iOS7)"},splash_ipad_ios7_landscape:{w:1024,h:768,name:"iPad Landscape<br>(iOS7)"},splash_ipad_retina_ios7:{w:1536,h:2048,name:"iPad Retina (iOS7)"},splash_ipad_retina_ios7_landscape:{w:2048,h:1536,name:"iPad Retina<br>Landscape (iOS7)"}},storyboard:{splash_ios_anyany:{w:2732,h:2732,name:"2x~universal~anyany"}}},$scope.displaySplashImages={},_.each($scope.splashImages,function(splashImagesSubset){_.each(splashImagesSubset,function(splashImage,key){splashImage.url=$scope.createSettingImageUrl(projectId,key)})}),$scope.init=function(){$scope.loading=!0,ProjectSettingFactory.loading.then(function(result){$scope.loading=!1;var projectInfo=result.project||{},config=result.config&&result.config.ios?result.config.ios:{},preference=config.preference||{};if($scope.settings.applicationName_ios=config.applicationName,$scope.settings.applicationID_ios=config.applicationId,$scope.settings.versionName_ios=config.versionName,$scope.settings.bundleVersion_ios=config.bundleVersion,$scope.settings.localizations_ios=projectInfo.ios.localizations,$scope.specifyBundleVersion=!!$scope.settings.bundleVersion_ios,$scope.specifyBundleVersion||($scope.settings.bundleVersion_ios=$scope.settings.versionName_ios),$scope.cordovaVersion>=6){var deviceFamily=preference["ios-XCBuildConfiguration-TARGETED_DEVICE_FAMILY"]||"";$scope.settings.targetFamilyiPhone_ios=deviceFamily.includes("1")?1:0,$scope.settings.targetFamilyiPad_ios=deviceFamily.includes("2")?1:0}else $scope.settings.targetFamilyiPhone_ios="1"===preference["monaca:targetFamilyiPhone"]?1:0,$scope.settings.targetFamilyiPad_ios="1"===preference["monaca:targetFamilyiPad"]?1:0;$scope.settings.config_auto_hide_splash_screen=preference.AutoHideSplashScreen,$scope.settings.config_fade_splash_screen="true"===preference.FadeSplashScreen,$scope.settings.config_show_splash_screen_spinner="true"===preference.ShowSplashScreenSpinner,$scope.settings.ios_splash_type=config.iosSplashType||"legacy",$scope.displaySplashImages=$scope.splashImages[$scope.settings.ios_splash_type],$scope.settings.config_access_origin_ios=config.accessOrigin,$scope.settings.config_disallow_overscroll_ios="true"===preference.DisallowOverscroll,$scope.settings.config_enable_viewport_scale="true"===preference.EnableViewportScale,$scope.settings.config_orientation_ios=config.Orientation||"all",oldSettings=Object.assign({},$scope.settings),$scope.rpg_background_images_ios=projectInfo.rpg_background_images,projectInfo.selected_rpg_background_image&&($scope.settings.selected_rpg_background_image_ios=projectInfo.selected_rpg_background_image.ios||""),$scope.isInitialized=!0,$scope.isReadyToSave=!0})},$scope.valueChanged=function(fieldName){return oldSettings[fieldName]!==$scope.settings[fieldName]},$scope.uploadImage=function(element){var file=element.files[0],uploadType=element.name;"icon_1024_ios"===uploadType?PNG.parse(file).then(png=>{png.hasAlpha?PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Images containing transparent backgrounds can not be set.")}):_uploadImage(file,uploadType)}):_uploadImage(file,uploadType)};var _uploadImage=function(file,uploadType){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var types="icon_all_ios"===uploadType?Object.keys($scope.iconTypeList):"splash_all_ios"===uploadType?Object.keys($scope.splashImages.legacy):[uploadType];types.forEach(function(type){$scope.isLoading[type]=!0}),MonacaApi.Ide.Project.uploadSettingImage(projectId,uploadType,file).then(function(){$scope.$apply(function(){types.forEach(function(type){document.getElementById("image-"+type).src=$scope.createSettingImageUrl(projectId,type)+"&t="+(new Date).getTime(),$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully uploaded.")})}).catch(function(){$scope.$apply(function(){types.forEach(function(type){$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Failed to upload file.")})})}).catch(e=>{PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:e})})};$scope.submit=function(){var data={ios:Object.assign({},$scope.settings)};$scope.specifyBundleVersion||(data.ios.bundleVersion_ios=""),$scope.isReadyToSave=!1,$scope.saving=!0,MonacaApi.Ide.Project.saveProjectSetting(projectId,data).then(function(){$scope.isReadyToSave=!0,$scope.saving=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully saved")}),ProjectSettingFactory.reload(),oldSettings=Object.assign({},$scope.settings),$scope.$apply()})},$scope.attemptSplashTypeChange=function(){var change_to=$scope.settings.ios_splash_type,change_from="legacy"===change_to?"storyboard":"legacy";$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Changing your splash screen type will modify your config.xml. Do you want to continue?")}}}).result.then(function(){$scope.setSplashType(change_to)},function(){$scope.settings.ios_splash_type=change_from})},$scope.setSplashType=function(type){$scope.splashTypeIsChanging=!0,MonacaApi.Ide.Project.setIosSplashType(projectId,type).then(function(){$scope.splashTypeIsChanging=!1,$scope.settings.ios_splash_type=type,$scope.displaySplashImages=$scope.splashImages[type],$scope.$apply(),ProjectSettingFactory.reload()}).catch(function(){$scope.splashTypeIsChanging=!1,$scope.displaySplashImages=$scope.splashImages[type],$scope.$apply()})}}]),angular.module("monacaIDE").controller("IosBuildController",["$scope","$controller","gettextCatalog","Constant","PubSub","ProjectFactory",function($scope,$controller,gettextCatalog,Constant,PubSub,ProjectFactory){angular.extend(this,$controller("BaseBuildController",{$scope:$scope})),$scope.platform="ios",$scope.profile={},$scope.flag_monaca_hosting_app={ios:!1},$scope.hasSimulatorBuild=$scope.cordovaVersion>=7,ProjectFactory.loading.then(function(){$scope.isCustomBuildDebuggerServiceEnabled=ProjectFactory.hasCustomDebugBuildService("ios")}),$scope.manageBuildSettings=function(){$scope.isAppMode()?$scope.setPage(Constant.PAGE_IOS_BUILD_SETTINGS,!0):PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"buildsettingsios",title:gettextCatalog.getString("Build Settings for iOS"),icon:"settings",templateUrl:"build/IosBuildSettings.html"}})},$scope.initProfiles=function(result){return"simulator"===$scope.purpose?{}:(result.project.ios&&result.project.ios.prov_settings?$scope.defaultProvList=result.project.ios.prov_settings:$scope.defaultProvList={},MonacaApi.Ide.IosCert.getProvisioningFileList().then(function(response){var profiles={development:[],release:[],adhoc:[],inhouse:[]},_profiles=response.body.result?response.body.result:[];for(var type in _profiles.forEach(function(v){profiles.hasOwnProperty(v.type)&&(v.value=v.crt.crt_id+":"+v.prov_id,v.label=v.prov_name+"  ( "+v.crt.cn+" ) ",profiles[v.type].push(v))}),$scope.profile={debug:profiles.development.length?profiles.development[0].value:null,debugger:profiles.development.length?profiles.development[0].value:null,release:profiles.release.length?profiles.release[0].value:null,adhoc:profiles.adhoc.length?profiles.adhoc[0].value:null,inhouse:profiles.inhouse.length?profiles.inhouse[0].value:null},$scope.defaultProvList){var data=$scope.defaultProvList[type];if(data&&data.crt_id&&data.prov_id){var targetKey=data.crt_id+":"+data.prov_id,exists=!1;Object.keys(profiles).forEach(function(key){profiles[key]&&profiles[key].length&&profiles[key].forEach(function(profile){profile.value===targetKey&&(exists=!0)})}),exists&&($scope.profile[type]=targetKey)}}$scope.profiles=profiles,$scope.$apply()}))},$scope.createBuildParameters=function(){var params={};if("simulator"===$scope.purpose)return params;var str=$scope.profile[$scope.purpose]||null;return str&&(params={crt_id:str.split(":")[0],prov_id:str.split(":")[1]}),$scope.flag_monaca_hosting_app.ios&&(params.inapp_updater_env=$scope.purpose,params.purpose="inapp_updater",params.update_number="1"),params},$scope.changeProfile=function(){$scope.updating=!0,$scope.checkBuildSettings().then(function(){$scope.updating=!1})}}]),angular.module("monacaIDE").controller("IosBuildSettingsController",["$scope","gettextCatalog","$uibModal","PubSub","Constant",function($scope,gettextCatalog,$modal,PubSub,Constant){var projectId=window.config.projectId;$scope.crts=[],$scope.keys=[],$scope.hasPrivateKeys=!1;var crtLabels={development:"Dev",distribution:"Prod"},provLabels={development:"Dev",release:"Dist",adhoc:"AdHoc",inhouse:"InHouse"},crtColors={development:"blue",distribution:"red"},provColors={development:"blue",release:"red",adhoc:"green",inhouse:"purple"};$scope.init=function(){$scope.updatePage()},$scope.updatePage=function(){$scope.updating=!0,MonacaApi.Ide.Project.getFileList(projectId).then(function(res){$scope.$apply(function(){var fileList=res.body.result.filelist||{};$scope.hasOldDevCert=fileList.hasOwnProperty("dev_certification_ios"),$scope.hasOldProdCert=fileList.hasOwnProperty("certification_ios")})}),MonacaApi.Ide.IosCert.getPrivateKeyList().then(function(response){$scope.$apply(function(){var crts=[],keys=[],result=response.body.result||[];result.forEach(function(privateKey){privateKey.crts&&privateKey.crts.length?(privateKey.crts.forEach(function(crt){crt.has_expired_prov=!1,crt.color=crtColors[crt.type]||"blue",crt.label=crtLabels[crt.type]||"-",crt.expiration?crt.expirationms=1e3*crt.expiration:crt.expirationms=null,crt.provs.forEach(function(prov){prov.expired&&(crt.has_expired_prov=!0),prov.color=provColors[prov.type]||"blue",prov.label=provLabels[prov.type]||"-"})}),crts=crts.concat(privateKey.crts)):keys.push(privateKey)}),$scope.crts=crts,$scope.keys=keys,$scope.hasPrivateKeys=result.length>0,$scope.updating=!1})})},$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.uploadCertificate=function(element){MonacaApi.Ide.IosCert.saveCertificate(element.files[0]).then(function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The file has been uploaded")}),$scope.updatePage()},function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:response.body.message})})},$scope.uploadProvisioningProfile=function(element){MonacaApi.Ide.IosCert.saveProvisioningProfile(element.files[0]).then(function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The file has been uploaded")}),$scope.updatePage()},function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:response.body.message}),$scope.updatePage()})},$scope.openPrivateKeyGenerateDialog=function(){MonacaApi.Ide.Constants.countryList().then(function(response){var countryList=response.body.result||[];countryList.forEach(function(v){v.label=(v[window.config.lang]||v.en)+" ("+v.code+")"}),$modal.open({templateUrl:"build/dialogs/PrivateKeyAndCsrGeneratorDialog.html",controller:"PrivateKeyAndCsrGeneratorDialogController",windowClass:"ios-private-key-generator-dialog",backdrop:"static",resolve:{countryList:function(){return countryList}}}).result.then(function(){$scope.updatePage()})})},$scope.openImportPKCSDialog=function(){$modal.open({templateUrl:"build/dialogs/PrivateKeyImportDialog.html",controller:"PrivateKeyImportDialogController",backdrop:"static"}).result.then(function(){$scope.updatePage()})},$scope.openExportCertificateDialog=function(crtId){$modal.open({templateUrl:"build/dialogs/CertificateExportDialog.html",controller:"CertificateExportDialogController",resolve:{crtId:function(){return crtId},oldType:function(){return null}}})},$scope.openExportPreviousCertificateDialog=function(oldType){$modal.open({templateUrl:"build/dialogs/CertificateExportDialog.html",controller:"CertificateExportDialogController",resolve:{crtId:function(){return null},oldType:function(){return oldType}}})},$scope.openExportProvisioningProfileDialog=function(provId){window.location.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/user/ios/downloadprov?id="+encodeURIComponent(provId)+"&api_token="+window.MonacaApi.Config.getApiToken()},$scope.openExportCsrDialog=function(keyId){$modal.open({templateUrl:"build/dialogs/CsrExportDialog.html",controller:"CsrExportDialogController",resolve:{keyId:function(){return keyId}}})},$scope.openDeletePrivateKeyDialog=function(key){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to delete this private key?")+'<div style="margin:10px;">'+key.email+"</div>"}}}).result.then(function(){MonacaApi.Ide.IosCert.deletePrivateKeyAndCSR(key.key_id).then(function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The file has been deleted")}),$scope.updatePage()})})},$scope.openDeleteCertificateDialog=function(crt){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to delete this certificate?")+'<div style="margin:10px;">'+crt.cn+"</div>"}}}).result.then(function(){MonacaApi.Ide.IosCert.deleteCertificate(crt.crt_id).then(function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The file has been deleted")}),$scope.updatePage()})})},$scope.openDeleteProvisioningProfileDialog=function(prov){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to delete this provisioning profile?")+'<div style="margin:10px;">'+prov.prov_name+"</div>"}}}).result.then(function(){MonacaApi.Ide.IosCert.deleteProvisioningProfile(prov.prov_id).then(function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The file has been deleted")}),$scope.updatePage()})})}}]),angular.module("monacaIDE").controller("ServiceIntegrationController",["$scope","gettextCatalog","$uibModal","$window","PubSub","Constant","ServiceIntegrationService",function($scope,gettextCatalog,$modal,$window,PubSub,Constant,ServiceIntegrationService){this.loading=!0,this.category="",this.services=[],ServiceIntegrationService.list().then(function(resp){this.services=resp.result,this.loading=!1}.bind(this),function(error){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString('An unexpected error has occurred with the message of "{{error_message}}". Please try again.',{error_message:error})}),this.loading=!1}.bind(this)),this.openWebsite=function(url){$window.open(url)},this.showDetails=function(service){$modal.open({templateUrl:"build/ServiceIntegrationDetailDialog.html",controller:"ServiceIntegrationDetailDialogController",windowClass:"service-integration-detail",resolve:{service:service}})}}]),angular.module("monacaIDE").controller("ServiceIntegrationDetailDialogController",["$scope","$sce","$uibModal","service",function($scope,$sce,$modal,service){$scope.service=service,$scope.description=$sce.trustAsHtml($scope.service.full_description),$scope.features=$sce.trustAsHtml($scope.service.service_features),$scope.showSetupConfirmWindow=function(){$scope.service.installable&&($scope.$close(),$modal.open({templateUrl:"build/ServiceIntegrationSetupDialog.html",controller:"ServiceIntegrationSetupDialogController",windowClass:"service-integration-setup-confirm",resolve:{service:$scope.service}}))}}]),angular.module("monacaIDE").controller("ServiceIntegrationSetupDialogController",["$scope","$q","$uibModal","gettextCatalog","PubSub","Constant","CordovaPluginService","WebComponentFactory","service",function($scope,$q,$modal,gettextCatalog,PubSub,Constant,CordovaPluginService,WebComponentFactory,service){$scope.service=service,$scope.page="confirm",$scope.confirmOk=function(){$scope.page="progress";var componentNameCollection,promiseCollection=[];service.integration_data.match_cordova_plugins.forEach(function(plugin){promiseCollection.push(CordovaPluginService.enable(plugin.url))}),service.integration_data.bower_components.forEach(function(component){promiseCollection.push(WebComponentFactory.install(component.name,component.version))}),$q.all(promiseCollection).then(function(installResults){installResults.forEach(function(installResult){if(installResult&&installResult.result&&!angular.isArray(installResult.result)){componentNameCollection||(componentNameCollection=Object.keys(installResult.result));var componentName=componentNameCollection.shift();!function openBowerManageDialog($scope,componentNameCollection,componentDataCollection,componentName){componentDataCollection[componentName].name=componentName,$modal.open({templateUrl:"build/WebComponentManageDialog.html",controller:"WebComponentManageDialogController",windowClass:"web-component-manage",resolve:{component:function(){return componentDataCollection[componentName]},isConfigure:function(){return!0}}}).closed.then(function(){if(0===componentNameCollection.length)$scope.page="complete";else{var componentName=componentNameCollection.shift();openBowerManageDialog($scope,componentNameCollection,componentDataCollection,componentName)}})}($scope,componentNameCollection,installResult.result,componentName)}else $scope.page="complete"})},function(errors){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString('Failed to install "{{service}}" service. One or more dependencies has failed to install.',{service:$scope.service.name})}),$scope.$close()})}}]),angular.module("monacaIDE").controller("WebAppSettingsController",["$scope","$uibModal","gettextCatalog","ProjectSettingFactory","PubSub","Constant",function($scope,$modal,gettextCatalog,ProjectSettingFactory,PubSub,Constant){var projectId=window.config.projectId;const now=Date.now();$scope.isLoading={},$scope.settings={},$scope.hasIconSet=!0,$scope.timestamp=function(){return now},$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.dirCollection=[{value:"auto",label:"Auto"},{value:"ltr",label:"Left-to-Right"},{value:"rtl",label:"Right-to-Left"}],$scope.languageCollection=[{value:"en",label:"en"},{value:"ja",label:"ja"},{value:"de",label:"de"},{value:"es",label:"es"},{value:"fr",label:"fr"},{value:"it",label:"it"},{value:"pt",label:"pt"},{value:"zh-CN",label:"zh-CN"},{value:"ko",label:"ko"}],$scope.displayCollection=[{value:"fullscreen",label:"Fullscreen"},{value:"standalone",label:"Standalone"},{value:"minimal-ui",label:"Minimal UI"},{value:"browser",label:"Browser"}],$scope.orientationCollection=[{value:"any",label:"Any"},{value:"natural",label:"Natural"},{value:"landscape",label:"Landscape"},{value:"landscape-primary",label:"Landscape Primary"},{value:"landscape-secondary",label:"Landscape Secondary"},{value:"portrait",label:"Portrait"},{value:"portrait-primary",label:"Portrait Primary"},{value:"portrait-secondary",label:"Portrait Secondary"}],$scope.createSettingImageUrl=function(projectId,type){return window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/file/read/"+type+"?api_token="+window.MonacaApi.Config.getApiToken()},$scope.iconTypeList=function(){var list={icon_pwa_48:{w:48,h:48,label:""},icon_pwa_72:{w:72,h:72,label:""},icon_pwa_96:{w:96,h:96,label:""},icon_pwa_128:{w:128,h:128,label:""},icon_pwa_144:{w:144,h:144,label:""},icon_pwa_152:{w:152,h:152,label:""},icon_pwa_168:{w:168,h:168,label:""},icon_pwa_192:{w:192,h:192,label:""},icon_pwa_256:{w:256,h:256,label:""}};for(var key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.init=function(){$scope.loading=!0,ProjectSettingFactory.loading.then(function(result){$scope.loading=!1;var manifest=result.manifest&&result.manifest.pwa?result.manifest.pwa:{};$scope.settings.name=manifest.name||"",$scope.settings.short_name=manifest.short_name||"",$scope.settings.description=manifest.description||"",$scope.settings.lang=manifest.lang||"en",$scope.settings.dir=manifest.dir||"ltr",$scope.settings.scope=manifest.scope||"./",$scope.settings.start_url=manifest.start_url||"./",$scope.settings.display=manifest.display||"fullscreen",$scope.settings.orientation=manifest.orientation||"any",$scope.settings.background_color=manifest.background_color||"",$scope.settings.theme_color=manifest.theme_color||"",$scope.isInitialized=!0,$scope.isReadyToSave=!0})},$scope.uploadImage=function(element){var file=element.files[0];$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var uploadType=element.name,types="icon_all_pwa"===uploadType?Object.keys($scope.iconTypeList):"splash_all_pwa"===uploadType?Object.keys($scope.splashImages.legacy):[uploadType];types.forEach(function(type){$scope.isLoading[type]=!0}),MonacaApi.Ide.Project.uploadSettingImage(projectId,uploadType,file).then(function(){$scope.$apply(function(){types.forEach(function(type){document.getElementById("image-"+type).src=$scope.createSettingImageUrl(projectId,type)+"&t="+(new Date).getTime(),document.getElementById("image-"+type).style.display="block",$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully uploaded.")})}).catch(function(){$scope.$apply(function(){types.forEach(function(type){$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Failed to upload file.")})})})},$scope.submit=function(){var data={pwa:Object.assign({},$scope.settings)};$scope.isReadyToSave=!1,$scope.saving=!0,MonacaApi.Ide.Project.saveProjectSetting(projectId,data).then(function(){$scope.isReadyToSave=!0,$scope.saving=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully saved")}),ProjectSettingFactory.reload(),$scope.$apply()})}}]),angular.module("monacaIDE").controller("WebBuildController",["$scope","$controller","gettextCatalog","Constant","PubSub",function($scope,$controller,gettextCatalog,Constant,PubSub){angular.extend(this,$controller("BaseBuildController",{$scope:$scope})),$scope.platform="pwa",$scope.type="release",$scope.purpose="release",$scope.manageAppSettings=function(){$scope.isAppMode()?$scope.setPage(Constant.PAGE_WEB_APP_SETTINGS,!0):PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingspwa",title:gettextCatalog.getString("App Settings for PWA"),icon:"settings",templateUrl:"build/WebAppSettings.html"}})}}]),angular.module("monacaIDE").controller("WebComponentController",["$scope","gettextCatalog","$uibModal","$window","PubSub","Constant","WebComponentFactory",function($scope,gettextCatalog,$modal,$window,PubSub,Constant,WebComponentFactory){function unexpectedErrorNotice(error){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString('An unexpected error has occurred with the message of "{{error_message}}". Please try again.',{error_message:error})})}function openManageDialog(component,isConfigure){return $modal.open({templateUrl:"build/WebComponentManageDialog.html",controller:"WebComponentManageDialogController",windowClass:"web-component-manage",backdrop:"static",keyboard:!1,resolve:{component:function(){return component},isConfigure:function(){return isConfigure}}})}this.loading=!0,this.searchword="",this.WebComponentFactory=WebComponentFactory,WebComponentFactory.loading.then(function(resp){this.loading=!1}.bind(this),function(error){unexpectedErrorNotice(error),this.loading=!1}.bind(this)),this.remove=function(component){$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",windowClass:"web-component-remove",resolve:{title:function(){return gettextCatalog.getString("Remove JS/CSS Component")},message:function(){return gettextCatalog.getString("Are you sure you would want to remove this component?")}}}).result.then(function(result){result&&WebComponentFactory.uninstall(component.name).then(function(resp){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString('Successfully uninstalled JS/CSS Component: "{{component_name}}"',{component_name:component.name})}),PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE)},unexpectedErrorNotice.bind(this))})},this.add=function(component){openManageDialog(component,!1)},this.configure=function(component){openManageDialog(component,!0)},$scope.searchForComponents=function(){WebComponentFactory.fetchList(this.searchword)}.bind(this)}]).filter("componentsearch",function(){return function(components,words){if(!words)return components;words=words.toLowerCase();var filteredList=[];for(var id in components){var component=components[id];(component.name.toLowerCase().indexOf(words)>=0||component.displayName.toLowerCase().indexOf(words)>=0)&&filteredList.push(component)}return filteredList}}),angular.module("monacaIDE").controller("WebComponentManageDialogController",["$scope","Constant","gettextCatalog","PubSub","WebComponentFactory","component","isConfigure",function($scope,Constant,gettextCatalog,PubSub,WebComponentFactory,component,isConfigure){function unexpectedErrorNotice(error){var content=gettextCatalog.getString('An unexpected error has occurred with the message of "{{error_message}}". Please try again.',{error_message:error});(function(error){if(error.body){var obj=JSON.parse(error.body);if(obj.reasons&&obj.reasons.reason&&"conflict"===obj.reasons.version)return!0}return!1})(error)&&(content=JSON.parse(error.body).reasons.reason);PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:content}),$scope.$close()}function formatComponentData(data){for(var component in data)data[component].files&&(data[component].componentKey=component,data[component].files.monaca&&data[component].files.monaca.main||data[component].files.loaderFiles?($scope.configureFormData[component]||($scope.configureFormData[component]={}),data[component].files.monaca&&data[component].files.monaca.main&&data[component].files.monaca.main.forEach(function(data){$scope.configureFormData[component][data]=!0}),data[component].files.loaderFiles&&(data[component].files.loaderFiles.cssFiles.forEach(function(data){$scope.configureFormData[component][data]=!0}),data[component].files.loaderFiles.jsFiles.forEach(function(data){$scope.configureFormData[component][data]=!0})),$scope.componentData.push(data[component])):$scope.componentData.push(data[component]))}$scope.page="loading",$scope.loadingText=gettextCatalog.getString("Loading Component Data..."),$scope.component=component,$scope.isConfigure=isConfigure,$scope.description="",$scope.versions=[],$scope.selectedVersion="",$scope.componentData=[],$scope.configureFormData={},WebComponentFactory.fetchComponentDetails(component.name,$scope.isConfigure).then(function(resp){$scope.isConfigure?(formatComponentData(resp.result),$scope.page="configure"):($scope.description=resp.result[component.name].latest.description,$scope.versions=resp.result[component.name].versions,$scope.selectedVersion=$scope.versions[0],$scope.page="confirm")},unexpectedErrorNotice.bind(this)),$scope.confirmInstall=function(){$scope.loadingText=gettextCatalog.getString('Installing Component: "{{component}}"',{component:$scope.component.name}),$scope.page="loading",WebComponentFactory.install($scope.component.name,$scope.selectedVersion).then(function(resp){formatComponentData(resp.result),PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE),$scope.page="configure"},unexpectedErrorNotice.bind(this))},$scope.saveChanges=function(){var formatedRequestBody={};for(var componentName in $scope.configureFormData)formatedRequestBody[componentName]=Object.keys($scope.configureFormData[componentName]).filter(function(key){return $scope.configureFormData[componentName][key]});WebComponentFactory.setLoader(formatedRequestBody).then(function(resp){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully configured JS/CSS Component")}),PubSub.publish(Constant.EVENT.RELOAD_IDE_FILETREE),$scope.$close()},unexpectedErrorNotice.bind(this))}}]),angular.module("monacaIDE").controller("WindowsAppSettingsController",["$scope","$uibModal","gettextCatalog","ProjectSettingFactory","PubSub","Constant",function($scope,$modal,gettextCatalog,ProjectSettingFactory,PubSub,Constant){var projectId=window.config.projectId,oldSettings={};const now=Date.now();$scope.isLoading={},$scope.settings={},$scope.timestamp=function(){return now},$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.createSettingImageUrl=function(projectId,type){return window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/file/read/"+type+"?api_token="+window.MonacaApi.Config.getApiToken()},$scope.appLogoList=function(){var list={app_logo_winrt:{w:150,h:150,label:""},package_logo_winrt:{w:50,h:50,label:""},app_small_logo_winrt:{w:30,h:30,label:""}};for(var key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.tileWideLogoList=function(){var list={app_tile_wide_logo_winrt:{w:310,h:150,label:""}};for(var key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.splashTypeList=function(){var list={app_splash_screen_winrt:{w:620,h:300,label:""}};for(var key in list)list[key].url=$scope.createSettingImageUrl(projectId,key);return list}(),$scope.archList=[{value:"",label:"AnyCPU"},{value:"x86",label:"x86"},{value:"x64",label:"x64"},{value:"arm",label:"Arm"}],$scope.init=function(){$scope.loading=!0,ProjectSettingFactory.loading.then(function(result){$scope.loading=!1;var config=result.config&&result.config.winrt?result.config.winrt:{},manifest=result.manifest&&result.manifest.winrt?result.manifest.winrt:{},preference=config.preference||{};$scope.settings.identity_name_winrt=preference.WindowsStoreIdentityName?preference.WindowsStoreIdentityName:manifest.identity_name_winrt,$scope.settings.app_display_name_winrt=manifest.app_display_name_winrt,$scope.settings.identity_version_winrt=manifest.identity_version_winrt,$scope.settings.packageVersion_winrt=manifest.packageVersion_winrt,$scope.settings.app_description_winrt=manifest.app_description_winrt,$scope.settings.package_publisher_display_name_winrt=manifest.package_publisher_display_name_winrt,$scope.settings.app_arch_winrt=manifest.app_arch_winrt||"",$scope.specifyPackageVersion=!!$scope.settings.packageVersion_winrt,$scope.settings.app_splash_background_winrt=manifest.app_splash_background_winrt||"","undefined"===$scope.settings.app_splash_background_winrt&&($scope.settings.app_splash_background_winrt=""),oldSettings=Object.assign({},$scope.settings),$scope.isInitialized=!0,$scope.isReadyToSave=!0,MonacaApi.Ide.Project.getFileList(projectId).then(function(res){var fileList=res.body.result.filelist;fileList&&fileList.debug_pfx_winrt&&($scope.hasPfx=!0),$scope.$apply()})})},$scope.valueChanged=function(fieldName){return oldSettings[fieldName]!==$scope.settings[fieldName]},$scope.uploadCertificate=function(element){MonacaApi.Ide.Project.uploadSetting(projectId,element.name,element.files[0])},$scope.uploadImage=function(element){var file=element.files[0];$modal.open({templateUrl:"commonDialogs/ConfirmDialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return gettextCatalog.getString("Confirm")},message:function(){return gettextCatalog.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var uploadType=element.name,types=[uploadType];types.forEach(function(type){$scope.isLoading[type]=!0}),MonacaApi.Ide.Project.uploadSettingImage(projectId,uploadType,file).then(function(){$scope.$apply(function(){types.forEach(function(type){document.getElementById("image-"+type).src=$scope.createSettingImageUrl(projectId,type)+"&t="+(new Date).getTime(),$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully uploaded.")})}).catch(function(){$scope.$apply(function(){types.forEach(function(type){$scope.isLoading[type]=!1})}),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Failed to upload file.")})})})},$scope.deleteImage=function(type){MonacaApi.Ide.Project.deleteSettingImage(projectId,type)},$scope.openExportCertificateDialog=function(){$modal.open({templateUrl:"build/dialogs/PackageCertificateExportDialog.html",controller:"PackageCertificateExportDialogController"})},$scope.submit=function(){var data={winrt:Object.assign({},$scope.settings)};$scope.specifyPackageVersion||(data.winrt.packageVersion_winrt=""),$scope.isReadyToSave=!1,$scope.saving=!0,MonacaApi.Ide.Project.saveProjectSetting(projectId,data).then(function(){$scope.isReadyToSave=!0,$scope.saving=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Successfully saved")}),ProjectSettingFactory.reload(),oldSettings=Object.assign({},$scope.settings),$scope.$apply()})}}]),angular.module("monacaIDE").controller("WindowsBuildController",["$scope","$controller","PubSub","Constant","gettextCatalog",function($scope,$controller,PubSub,Constant,gettextCatalog){angular.extend(this,$controller("BaseBuildController",{$scope:$scope})),$scope.platform="windows",$scope.manageAppSettings=function(){$scope.isAppMode()?$scope.setPage(Constant.PAGE_WINDOWS_APP_SETTINGS,!0):PubSub.publish(Constant.EVENT.TOGGLE_GENERIC_ANGULAR_VIEW,{open:!0,componentState:{id:"appsettingswindows",title:gettextCatalog.getString("App Settings for Windows"),icon:"settings",templateUrl:"build/WindowsAppSettings.html"}})}}]),angular.module("monacaIDE").controller("AdHocQRCodeDialogController",["$scope","$uibModalInstance","url",function($scope,$modalInstance,url){$scope.qrCodeUrl=url,$scope.ok=function(){$modalInstance.close(!0)}}]),angular.module("monacaIDE").controller("CertificateExportDialogController",["$scope","$uibModalInstance","crtId","oldType",function($scope,$modalInstance,crtId,oldType){$scope.password="",$scope.exportCertificate=function(){var url;crtId?url=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/user/ios/exportpkcs?type=crt&id="+encodeURIComponent(crtId)+"&password="+encodeURIComponent($scope.password)+"&api_token="+window.MonacaApi.Config.getApiToken():oldType&&(url=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/user/ios/exportpkcs?type=crt&oldType="+encodeURIComponent(oldType)+"&password="+encodeURIComponent($scope.password)+"&api_token="+window.MonacaApi.Config.getApiToken()),window.location.href=url,$modalInstance.close(!0)}}]),angular.module("monacaIDE").controller("ConfirmApkCheckDialogController",["$scope","gettextCatalog","$window","link",function($scope,gettextCatalog,$window,link){$scope.ok=function(){$window.open(link),$scope.$close()}}]),angular.module("monacaIDE").controller("CsrExportDialogController",["$scope","$uibModalInstance","keyId",function($scope,$modalInstance,keyId){$scope.exportCsr=function(){window.location.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/user/ios/downloadcsr?id="+encodeURIComponent(keyId)+"&api_token="+window.MonacaApi.Config.getApiToken(),$modalInstance.close(!0)}}]),angular.module("monacaIDE").controller("DeployServiceLogController",["$scope","service",function($scope,service){$scope.service=service}]),angular.module("monacaIDE").controller("DeployServiceRequestController",["$scope","gettextCatalog","DeployServiceFactory","service","queueId",function($scope,gettextCatalog,DeployServiceFactory,service,queueId){$scope.service=service,$scope.serviceOptionalParameters="{}",$scope.showOptionalParamForm="Firebase"!==service.service_type,$scope.sendToDeployService=function(){service.manualProcessStatus="process",service.manualProcessResults="",DeployServiceFactory.distributeApp(window.config.projectId,service.service_type,service.alias,$scope.serviceOptionalParameters,queueId,null).then(function(resp){service.manualProcessStatus="finish",service.manualProcessResults=JSON.stringify(resp)},function(error){service.manualProcessStatus="failed",error.body&&error.body.message?service.manualProcessResults=error.body.message:error.body?service.manualProcessResults=JSON.stringify(error.body):service.manualProcessResults=gettextCatalog.getString("An unknown error has occurred while attempting to distribute your app to the selected third-party service.")}),$scope.$close()}}]),angular.module("monacaIDE").controller("KeyStoreAddAliasDialogController",["$scope","$uibModalInstance","PubSub","Constant","gettextCatalog",function($scope,$modalInstance,PubSub,Constant,gettextCatalog){var projectId=window.config.projectId;$scope.cancel=function(){$modalInstance.dismiss(!1)},$scope.ok=function(){$scope.name&&$scope.password&&MonacaApi.Ide.Project.addAlias(projectId,$scope.name,$scope.password).then(function(){$modalInstance.close(!0)}).catch(function(err){err&&console.error(err);let message=gettextCatalog.getString("Failed to Create Alias");PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})})}}]),angular.module("monacaIDE").controller("KeyStoreExportDialogController",["$scope","$uibModalInstance",function($scope,$modalInstance){var projectId=window.config.projectId;$scope.cancel=function(){$modalInstance.dismiss(!1)},$scope.ok=function(){$scope.exporting=!0,MonacaApi.Ide.Project.getDownloadToken(projectId,"keystore_android").then(function(response){var token=response.body.result.dlToken;location.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/export/keystore_android?mode=download&&dlToken="+token+"&api_token="+window.MonacaApi.Config.getApiToken(),$scope.exporting=!1,$modalInstance.close(!0)})}}]),angular.module("monacaIDE").controller("KeyStoreGeneratorDialogController",["$scope","$uibModalInstance",function($scope,$modalInstance){var projectId=window.config.projectId;$scope.cancel=function(){$modalInstance.dismiss(!1)},$scope.ok=function(){$scope.alias_name&&$scope.alias_password&&$scope.keystore_password&&($scope.generating=!0,MonacaApi.Ide.Project.generateKeyStore(projectId,$scope.alias_name,$scope.alias_password,$scope.keystore_password).then(function(response){$scope.generating=!1,$modalInstance.close(!0)}))}}]),angular.module("monacaIDE").controller("KeyStoreImportDialogController",["$scope","gettextCatalog","$uibModalInstance","Constant","PubSub",function($scope,gettextCatalog,$modalInstance,Constant,PubSub){var projectId=window.config.projectId;$scope.selectedFile=null,$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.selectFile=function(element){$scope.selectedFile=element.files[0],$scope.filePath=$scope.selectedFile.name,$scope.$apply()},$scope.cancel=function(){$modalInstance.dismiss(!1)},$scope.ok=function(){$scope.selectedFile&&$scope.password&&($scope.importing=!0,MonacaApi.Ide.Project.saveKeyStore(projectId,$scope.selectedFile,$scope.password,!0).then(function(response){$scope.importing=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("KeyStore import succeeded")}),$modalInstance.close(!0)},function(response){$scope.importing=!1,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:response.body.message})}))}}]),angular.module("monacaIDE").controller("PackageCertificateExportDialogController",["$scope","$uibModalInstance",function($scope,$modalInstance){var projectId=window.config.projectId;$scope.cancel=function(){$modalInstance.dismiss(!1)},$scope.ok=function(){$scope.exporting=!0,MonacaApi.Ide.Project.getDownloadToken(projectId,"debug_pfx_winrt").then(function(response){var token=response.body.result.dlToken;location.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/project/"+projectId+"/export/debug_pfx_winrt?mode=download&&dlToken="+token+"&api_token="+window.MonacaApi.Config.getApiToken(),$scope.exporting=!1,$modalInstance.close(!0)})}}]),angular.module("monacaIDE").controller("PrivateKeyAndCsrGeneratorDialogController",["$scope","gettextCatalog","$uibModalInstance","PubSub","Constant","countryList",function($scope,gettextCatalog,$modalInstance,PubSub,Constant,countryList){var keyId=null;$scope.page="input",$scope.lang=window.config.lang,$scope.countryList=countryList,$scope.country="ja"===window.config.lang?"JP":"US",$scope.generatePrivateKeyAndCSR=function(){$scope.generating=!0,MonacaApi.Ide.IosCert.generatePrivateKeyAndCSR($scope.adcUsername_ios,$scope.adcMailAddress_ios,$scope.country).then(function(response){keyId=response.body.result,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("CSR has been generated")}),$scope.generating=!1,$scope.page="success"},function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:response.body.message}),$scope.generating=!1,$modalInstance.dismiss(!1)})},$scope.exportCsr=function(){window.location.href=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_IDE)+"/api/user/ios/downloadcsr?id="+encodeURIComponent(keyId)+"&api_token="+window.MonacaApi.Config.getApiToken(),$modalInstance.close(!0)}}]),angular.module("monacaIDE").controller("PrivateKeyImportDialogController",["$scope","gettextCatalog","$uibModalInstance","PubSub","Constant",function($scope,gettextCatalog,$modalInstance,PubSub,Constant){$scope.selectedFile=null,$scope.selectedFilePath="",$scope.password="",$scope.openFileDialog=function(name){document.querySelector("input[type=file][name="+name+"]").click()},$scope.selectFile=function(element){$scope.selectedFile=element.files[0],$scope.selectedFilePath=$scope.selectedFile.name,$scope.$apply()},$scope.importPrivateKey=function(){$scope.selectedFile&&($scope.importing=!0,MonacaApi.Ide.IosCert.savePKCS($scope.selectedFile,$scope.password).then(function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("The file has been uploaded")}),$scope.importing=!1,$modalInstance.close(!0)},function(response){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:response.body.message}),$scope.importing=!1,$modalInstance.dismiss(!1)}))}}]),angular.module("monacaIDE").controller("RestartPreviewServerController",["$scope","$uibModalInstance","$sce","title","message",function($scope,$modalInstance,$sce,title,message){$scope.title=title,$scope.message=$sce.trustAsHtml(message),$scope.ok=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.dismiss(!1)}}]),angular.module("monacaIDE").controller("AlertController",["$scope","$sce","title","message",function($scope,$sce,title,message){$scope.title=title,$scope.message=$sce.trustAsHtml(message)}]),angular.module("monacaIDE").controller("ConfirmController",["$scope","$uibModalInstance","$sce","title","message",function($scope,$modalInstance,$sce,title,message){$scope.title=title,$scope.message=$sce.trustAsHtml(message),$scope.ok=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.dismiss(!1)}}]),angular.module("monacaIDE").controller("ConfirmWithCallbackController",["$scope","$uibModalInstance","$sce","title","message","callback",function($scope,$modalInstance,$sce,title,message,callback){$scope.title=title,$scope.message=$sce.trustAsHtml(message),$scope.ok=function(){$scope.isLoading=!0,callback().then(function(){$modalInstance.close(!0)}).finally(function(){$scope.isLoading=!1})},$scope.cancel=function(){$modalInstance.close(!1)}}]),angular.module("monacaIDE").controller("ErrorDialogController",["$scope","$sce","title","message","canClose",function($scope,$sce,title,message,canClose){$scope.title=title,$scope.message=$sce.trustAsHtml(message),$scope.canClose=!angular.isDefined(canClose)||canClose}]),angular.module("monacaIDE").controller("ReplaceController",["$scope","$uibModalInstance","$sce","title","message","callback",function($scope,$modalInstance,$sce,title,message,callback){$scope.title=title,$scope.message=$sce.trustAsHtml(message),$scope.ok=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.dismiss(!1)},$scope.replaceAll=function(){$scope.isLoading=!0,callback().then(function(){$modalInstance.close(!0)}).finally(function(){$scope.isLoading=!1})}}]),angular.module("monacaIDE").controller("CopyFileDialogController",["$scope","ProjectFileService","PubSub","Constant","gettextCatalog","selectedNode","directoryList",function($scope,ProjectFileService,PubSub,Constant,gettextCatalog,selectedNode,directoryList){function notifyError(message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})}$scope.fileName="copy_"+selectedNode.original.text,$scope.directoryList=$.map(directoryList,function(value){return value}),$scope.dirPath="/",selectedNode&&selectedNode.original&&"dir"===selectedNode.original.type?$scope.dirPath=selectedNode.original.id:selectedNode&&selectedNode.original&&($scope.dirPath=selectedNode.original.parent),"#/"!==$scope.dirPath&&"#"!==$scope.dirPath||($scope.dirPath="/"),$scope.ok=function(){var name;(name=$scope.fileName,new Promise((resolve,reject)=>{name||reject(gettextCatalog.getString("The file name cannot be null.")),name.match(/^[!-~]+$/)&&!name.match(/[/<>;]/)||reject(gettextCatalog.getString("The file name includes invalid character."));var filePath=$scope.dirPath+"/"+name;ProjectFileService.isExist(filePath).then(function(res){res.body.result[filePath]?reject(gettextCatalog.getString("The file or folder already exists.")):resolve()},function(){reject(gettextCatalog.getString("An unknown error has occurred. Please refresh and try again."))})})).then(()=>{ProjectFileService.copy(selectedNode.id,$scope.dirPath+"/"+$scope.fileName).then(function(res){var message;PubSub.publish(Constant.EVENT.CREATED_NEW_FILE_OR_FOLDER,res.body.result),message=gettextCatalog.getString("File has been copied."),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:message}),$scope.$close()},function(res){notifyError(gettextCatalog.getString("An unexpected error occured while copying."))})}).catch(err=>{notifyError(err),$scope.$close()})}}]),angular.module("monacaIDE").controller("CreateFileDialogController",["$scope","ProjectFileService","PubSub","Constant","gettextCatalog","FileUtilityFactory","selectedNode","directoryList","ProjectFactory",function($scope,ProjectFileService,PubSub,Constant,gettextCatalog,FileUtilityFactory,selectedNode,directoryList,ProjectFactory){$scope.fileName="",$scope.directoryList=$.map(directoryList,function(value){return value}),$scope.dirPath="/",selectedNode&&selectedNode.original&&"dir"===selectedNode.original.type?$scope.dirPath=selectedNode.original.id:selectedNode&&selectedNode.original&&($scope.dirPath=selectedNode.original.parent),"#/"!==$scope.dirPath&&"#"!==$scope.dirPath||($scope.dirPath="/");let otherFileFormat,index=0;function notifyError(message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})}$scope.formatList=[{id:++index,name:gettextCatalog.getString("HTML")},{id:++index,name:gettextCatalog.getString("CSS")},{id:++index,name:gettextCatalog.getString("JavaScript")}],ProjectFactory.isGenericProject()&&($scope.formatList.push({id:++index,name:gettextCatalog.getString("Java")}),$scope.formatList.push({id:++index,name:gettextCatalog.getString("Cobol")})),otherFileFormat={id:++index,name:gettextCatalog.getString("Other")},$scope.formatList.push(otherFileFormat),$scope.fileFormat=$scope.formatList[$scope.formatList.length-1],$scope.$watch("fileName",function(newVal,oldVal){var mime=FileUtilityFactory.getMime(FileUtilityFactory.getExtName(newVal)),index=$scope.formatList.length-1;switch(mime){case"text/html":index=0;break;case"text/css":index=1;break;case"text/javascript":index=2;break;case"text/java":index=3;break;case"text/cobol":index=4}$scope.fileFormat=$scope.formatList[index]||otherFileFormat}),$scope.ok=function(){var name;(name=$scope.fileName,new Promise((resolve,reject)=>{name||reject(gettextCatalog.getString("The file name cannot be null.")),name.match(/^[!-~]+$/)&&!name.match(/[/<>;]/)||reject(gettextCatalog.getString("The file name includes invalid character."));var filePath=$scope.dirPath+"/"+name;ProjectFileService.isExist(filePath).then(function(res){res.body.result[filePath]?reject(gettextCatalog.getString("The file or folder already exists.")):resolve()},function(){reject(gettextCatalog.getString("An unknown error has occurred. Please refresh and try again."))})})).then(()=>{ProjectFileService.save($scope.dirPath+"/"+$scope.fileName,"@@NEW_FILE@@",null,null,null).then(function(res){var message;PubSub.publish(Constant.EVENT.CREATED_NEW_FILE_OR_FOLDER,res.body.result),message=gettextCatalog.getString("File has been created."),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:message}),$scope.$close()},function(res){notifyError(gettextCatalog.getString("An unexpected error occured while creating."))})}).catch(err=>{notifyError(err),$scope.$close()})}}]),angular.module("monacaIDE").controller("CreateFolderDialogController",["$scope","ProjectFileService","PubSub","Constant","gettextCatalog","selectedNode","directoryList",function($scope,ProjectFileService,PubSub,Constant,gettextCatalog,selectedNode,directoryList){function notifyError(message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})}$scope.folderName="",$scope.directoryList=$.map(directoryList,function(value){return value}),$scope.dirPath="/",selectedNode&&selectedNode.original&&"dir"===selectedNode.original.type?$scope.dirPath=selectedNode.original.id:selectedNode&&selectedNode.original&&($scope.dirPath=selectedNode.original.parent),"#/"!==$scope.dirPath&&"#"!==$scope.dirPath||($scope.dirPath="/"),$scope.ok=function(){var name;(name=$scope.folderName,new Promise((resolve,reject)=>{name||reject(gettextCatalog.getString("The folder name cannot be null.")),name.match(/^[!-~]+$/)&&!name.match(/[/<>;]/)||reject(gettextCatalog.getString("The folder name includes invalid character."));var path=$scope.dirPath+"/"+name;ProjectFileService.isExist(path).then(function(res){res.body.result[path]?reject(gettextCatalog.getString("The file or folder already exists.")):resolve()},function(){reject(gettextCatalog.getString("An unknown error has occurred. Please refresh and try again."))})})).then(()=>{ProjectFileService.mkdir($scope.dirPath+"/"+$scope.folderName).then(function(res){var message;PubSub.publish(Constant.EVENT.CREATED_NEW_FILE_OR_FOLDER,res.body.result),message=gettextCatalog.getString("Folder has been created."),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:message}),$scope.$close()},function(){notifyError(gettextCatalog.getString("An unexpected error occured while creating folder."))})}).catch(err=>{notifyError(err),$scope.$close()})}}]),angular.module("monacaIDE").controller("FilePanelController",["$scope","$window","$element","$timeout","$uibModal","Dialog","PubSub","Constant","gettextCatalog","ProjectFileService","FileUtilityFactory","ProjectTreeFactory",function($scope,$window,$element,$timeout,$modal,Dialog,PubSub,Constant,gettextCatalog,ProjectFileService,FileUtilityFactory,ProjectTreeFactory){let ideHost=window.config.client.host.ide_host,projectId=window.config.projectId,apiToken=window.config.apiToken;function getTree(){return $(angular.element($element[0].parentElement).find("js-tree")).jstree(!0)}function getSelectedNode(target,wrapNode){var node;return(node=target?getTree().get_node(target):getTree().get_selected(!0))&&angular.isObject(node)&&target?wrapNode?{node:node}:node:!!(node&&!target&&angular.isArray(node)&&node.length>0)&&(wrapNode?{node:node[0]}:node[0])}function getNodeById(nodeId){return getTree().get_node(nodeId)}function notifySuccess(message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:message})}function notifyError(message){PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:message})}function openFile(node,lineNum){return"text"===node.original.fileType?PubSub.publish(Constant.EVENT.TOGGLE_EDITOR_VIEW,{open:!0,componentState:{url:node.id}}):"image"!==node.original.fileType&&"audio"!==node.original.fileType||$modal.open({templateUrl:"project/dialog/previewer.html",controller:function($scope){if($scope.src=ProjectFileService.getFileReadUrl(node.id),$scope.content=node.original.fileType,"image"===$scope.content){$scope.save=function(){$scope.working=!0;var arr=$scope.editor.toDataURL().split(",");const mime=arr[0].match(/:(.*?);/)[1];for(var bstr=window.atob(arr[1]),n=bstr.length,bytes=new Uint8Array(n);n--;)bytes[n]=bstr.charCodeAt(n);const pathArr=node.id.split("/"),fileName=pathArr.splice(pathArr.length-1,1)[0],path=pathArr.join("/")+"/";ProjectFileService.upload(path,new File([bytes],fileName,{type:mime})).then(()=>{$scope.working=!1})};var whiteTheme={"common.bisize.width":"251px","common.bisize.height":"21px","common.backgroundColor":"#fff","common.border":"none","header.backgroundImage":"none","header.backgroundColor":"transparent","header.border":"0px","loadButton.backgroundColor":"#DDDDDD","loadButton.border":"1px solid #DDDDDD","loadButton.borderRadius":"4px","loadButton.paddingTop":"0px","loadButton.color":"#000","loadButton.fontFamily":"inherit","loadButton.fontSize":"14px","loadButton.fontWeight":"initial","downloadButton.backgroundColor":"#337AB7","downloadButton.border":"1px solid #2e6da4","downloadButton.borderRadius":"4px","downloadButton.paddingTop":"0px","downloadButton.color":"#fff","downloadButton.fontFamily":"inherit","downloadButton.fontSize":"14px","downloadButton.fontWeight":"initial","menu.normalIcon.path":"../img/tui/icon-b.svg","menu.normalIcon.name":"icon-b","menu.activeIcon.path":"../img/tui/icon-a.svg","menu.activeIcon.name":"icon-a","menu.iconSize.width":"24px","menu.iconSize.height":"24px","submenu.backgroundColor":"transparent","submenu.partition.color":"#858585","submenu.normalIcon.path":"../img/tui/icon-a.svg","submenu.normalIcon.name":"icon-a","submenu.activeIcon.path":"../img/tui/icon-d.svg","submenu.activeIcon.name":"icon-d","submenu.iconSize.width":"32px","submenu.iconSize.height":"32px","submenu.normalLabel.color":"#858585","submenu.normalLabel.fontWeight":"normal","submenu.activeLabel.color":"#000","submenu.activeLabel.fontWeight":"normal","checkbox.border":"1px solid #ccc","checkbox.backgroundColor":"#fff","range.pointer.color":"#333","range.bar.color":"#ccc","range.subbar.color":"#606060","range.value.color":"#000","range.value.fontWeight":"normal","range.value.fontSize":"11px","range.value.border":"0","range.value.backgroundColor":"#f5f5f5","range.title.color":"#000","range.title.fontWeight":"lighter","colorpicker.button.border":"1px solid #cbcbcb","colorpicker.title.color":"#000"};$scope.working=!0;fetch(ProjectFileService.getFileReadUrl(node.id),{method:"GET",mode:"cors",cache:"default",credentials:"include"}).then(file=>{file.arrayBuffer().then(buffer=>{var binary="";[].slice.call(new Uint8Array(buffer)).forEach(b=>{binary+=String.fromCharCode(b)});const url=`data:image/*;base64,${window.btoa(binary)}`;$scope.editor=new tui.ImageEditor(document.querySelector("#tui-image-editor"),{includeUI:{loadImage:{path:url,name:"Preview"},theme:whiteTheme,initMenu:"filter",menuBarPosition:"right"},cssMaxWidth:700,cssMaxHeight:500,selectionStyle:{cornerSize:20,rotatingPointOffset:70}}),$(".tui-image-editor-header-buttons .tui-image-editor-load-btn")[0].parentNode.remove();var downloadButton=$(".tui-image-editor-header-buttons .tui-image-editor-download-btn")[0],saveButton=downloadButton.cloneNode();saveButton.innerHTML=gettextCatalog.getString("Save"),downloadButton.parentNode.replaceChild(saveButton,downloadButton),$(saveButton).click(()=>$scope.save()),$scope.working=!1})})}},windowClass:"file-preview "+node.original.fileType}),!0}function moveFile(oldFilePath,newFilePath,isRename){return ProjectFileService.move(oldFilePath,newFilePath).then(function(res){var result=res.body.result,from=result.from.replace("//","/"),node=getNodeById(from),isDir=node&&node.original&&node.original.type&&"dir"===node.original.type;if(getTree().delete_node(node),PubSub.publish(Constant.EVENT.TOGGLE_EDITOR_VIEW,{open:!1,isDir:isDir,componentState:{url:from}}),isDir){let path=result.path.replace("//","/");result.meta[path].children=!0}notifySuccess(isRename?gettextCatalog.getString("File has been renamed."):gettextCatalog.getString("File has been moved.")),$scope.createNewNode(result)},function(){notifyError(gettextCatalog.getString("Failed to move {{oldFilePath}} to {{newFilePath}}.",{oldFilePath:oldFilePath,newFilePath:newFilePath})),PubSub.publish(Constant.EVENT.TREE_UPDATED)})}function deleteFile(){var node=getSelectedNode(null,!1),nodeId=node&&node.original&&node.original.id?node.original.id:null,isDir=node&&node.original&&node.original.type&&"dir"===node.original.type;return Dialog.confirm(gettextCatalog.getString("Are you sure you would like to delete {{file}}?",{file:nodeId}),gettextCatalog.getString("Confirm Delete")).then(function(allowDelete){return!!allowDelete&&ProjectFileService.remove(nodeId).then(function(){PubSub.publish(Constant.EVENT.TOGGLE_EDITOR_VIEW,{open:!1,isDir:isDir,componentState:{url:nodeId}}),notifySuccess(gettextCatalog.getString("Successfully deleted file.")),isDir&&ProjectTreeFactory.removeFolderTreeData(nodeId),getTree().delete_node(node)})})}function changeNameInline(node){var anchor=document.getElementById(node.id+"_anchor"),elem=document.getElementById(node.id),childGroup=elem.querySelector("ul"),headIcon=elem.querySelector("i"),icon=anchor.querySelector("i"),editor=function(node){var editor=document.createElement("input");return editor.setAttribute("type","text"),editor.setAttribute("name","tmp"),editor.setAttribute("id","tmp-basename"),editor.setAttribute("value",node.original.text),editor.style.color="black",editor}(node),keyDownCode=null;function renameFile(){var dirPath=node.original.parent+"/";if("#/"===dirPath&&(dirPath=dirPath.replace("#/","/")),!FileUtilityFactory.isValidFilename(editor.value))return notifyError(gettextCatalog.getString("Failed to rename file because of invalid characters.")),!1;var newPath=dirPath+editor.value;moveFile(dirPath+node.original.text,newPath,!0)}function onBlur(event){event.preventDefault(),event.stopPropagation(),$.jstree.reference("#jstree").redraw(!0),editor.value.length&&editor.value!==node.original.text&&renameFile()}editor.addEventListener("input",function(event){editor.value.length?editor.className="":editor.className="input-error"}),editor.addEventListener("keydown",function(event){keyDownCode=event.which}),editor.addEventListener("keyup",function(event){event.preventDefault(),event.stopPropagation(),13===event.which&&event.which===keyDownCode&&(editor.removeEventListener("blur",onBlur),$.jstree.reference("#jstree").redraw(!0),editor.value!==node.original.text&&renameFile())}),editor.addEventListener("blur",onBlur),elem.innerHTML="",elem.appendChild(headIcon),elem.appendChild(icon),elem.appendChild(editor),childGroup&&elem.appendChild(childGroup),editor.focus()}function isPlatformDir(path){return/^\/(android|ios|chrome)/.test(path)}function isPluginDir(path){return/^\/www\/plugins(\/?)/.test(path)}function getUploadDirList(){var dirList={"/":{id:"/",path:"/"}};for(var key in ProjectTreeFactory.getFolderTreeData())isPluginDir(key)||isPlatformDir(key)||(dirList[key]={id:key,path:key+"/"});return dirList}$scope.url=`${ideHost}/api/project/${projectId}/file/tree/byPath?api_token=${apiToken}`,ProjectTreeFactory.loadFolderTreeData(),$scope.showMask=!1,$scope.treeResetCounter=0,$scope.treeStateKey="tree-"+window.config.projectId,$scope.eventCallbacks={select_node:function(evt,data){},dblclick:function(evt){var nodeId,node=getSelectedNode(evt.target,!1);"dir"===node.original.type?(nodeId=node.id,getTree().toggle_node(nodeId)):"file"===node.original.type&&openFile(node)},move_node:function(event,data){var moveNodeData=function(node){var newParent=getNodeById(node.parent);if(!newParent)return!1;newParent.original&&"file"===newParent.original.type&&(newParent=getNodeById(newParent.parent));var newParentPath="#"===newParent.id?"":newParent.id,oldFilePath=node.node.id,newFilePath=newParentPath+"/"+node.node.text;return{newParent:newParent,oldFilePath:oldFilePath,newFilePath:newFilePath}}(data);moveFile(moveNodeData.oldFilePath,moveNodeData.newFilePath)},loaded:function(event,data){new Hammer(document.querySelector("#jstree")).on("doubletap",function(evt){return $scope.eventCallbacks.dblclick(evt),!1}),$timeout(function(){$scope.showMask=!1})}},$scope.jsTreeCore={check_callback:function(operation,node,node_parent,node_position,more){return"move_node"!==operation||!!function(data){if(data.old_parent===data.parent)return!1;var newFilePath=data.parent+"/"+data.node.text;if(getNodeById(data.parent).original&&"dir"!==getNodeById(data.parent).original.type)return!1;if(function(id){for(var key in getTree()._model.data)if(key===id)return getTree()._model.data[key];return null}(newFilePath))return notifyError(gettextCatalog.getString("{{newFilePath}} already exists.",{newFilePath:newFilePath})),!1;return!0}({node:node,old_parent:(node.parent||$.jstree.root).toString(),parent:node_parent.original&&"file"===node_parent.original.type?node_parent.parent:node_parent.id})&&(node_parent.original&&"dir"===node_parent.original.type&&node_parent.original.id!==node.original.parent)}},$scope.onDrop=ProjectTreeFactory.onDrop,$scope.uploadDir=null,$scope.openUploadFilePanel=function(){$modal.open({templateUrl:"project/dialog/fileUpload.html",controller:"UploadFileDialogController",windowClass:"file-upload",resolve:{selectedNode:getSelectedNode(null,!1),directoryList:getUploadDirList()}})},$scope.openCreateFileDialog=function(){var selectedNode=getSelectedNode();$modal.open({templateUrl:"project/dialog/createFile.html",resolve:{directoryList:getUploadDirList(),selectedNode:selectedNode||getNodeById("/www")},controller:"CreateFileDialogController",windowClass:"file-panel-dialog create-file-dialog"})},$scope.openCreateFolderDialog=function(){var selectedNode=getSelectedNode();$modal.open({templateUrl:"project/dialog/createFolder.html",resolve:{directoryList:getUploadDirList(),selectedNode:selectedNode||getNodeById("/www")},controller:"CreateFolderDialogController",windowClass:"file-panel-dialog create-file-dialog"})},$scope.openCopyFileDialog=function(){$modal.open({templateUrl:"project/dialog/copyFile.html",resolve:{directoryList:getUploadDirList(),selectedNode:getSelectedNode()},controller:"CopyFileDialogController",windowClass:"file-panel-dialog create-file-dialog"})},$scope.contextMenu=function(node){return{newFile:{label:gettextCatalog.getString("New File"),_class:"contextmenu-new-file",action:function(obj){$scope.openCreateFileDialog()}},newFolder:{label:gettextCatalog.getString("New Folder"),_class:"contextmenu-new-folder",action:function(obj){$scope.openCreateFolderDialog()}},delete:{label:gettextCatalog.getString("Delete"),_class:"contextmenu-delete",action:function(obj){deleteFile()}},rename:{label:gettextCatalog.getString("Rename"),_class:"contextmenu-rename",action:function(obj){changeNameInline(node)}},openFile:{label:gettextCatalog.getString("Open File"),_class:"contextmenu-open-file",action:function(obj){openFile(node)}},copyFile:{label:gettextCatalog.getString("Copy File"),_class:"contextmenu-copy-file",action:function(obj){$scope.openCopyFileDialog()}},uploadFiles:{label:gettextCatalog.getString("Upload Files..."),_class:"contextmenu-upload-files",action:function(obj){$scope.openUploadFilePanel()}},exportFolder:{label:gettextCatalog.getString("Export Folder"),_class:"contextmenu-export-folder",action:function(obj){"dir"===node.original.type?$window.open(ProjectFileService.getDirExportUrl(node.id)):"file"===node.original.type&&$window.open(ProjectFileService.getDirExportUrl(node.parent))}}}},PubSub.subscribe(Constant.EVENT.TREE_UPDATED,function(options){options&&options.redraw?getTree().redraw(!0):getTree().refresh(!0)}),$scope.treeClearCacheReload=function(options){PubSub.publish(Constant.EVENT.TREE_UPDATED,options),ProjectTreeFactory.loadFolderTreeData()},PubSub.subscribe(Constant.EVENT.TREE_CLEAR_CACHE_RELOAD,$scope.treeClearCacheReload),PubSub.subscribe(Constant.EVENT.TREE_ERROR,function(errorThrown){notifyError(gettextCatalog.getString("Failed to retrieve project file information. Please try again. If the problem persists, please contact our support team."))}),$scope.createParentNode=function(file){let path=file.path.replace("//","/"),safeKey=FileUtilityFactory.escapeFileName(path),run=safeKey.split("/"),items=safeKey.split("/"),non_exist_parent=!1;return run.forEach(element=>{const id=items.slice(0,-1).join("/")||"#",parent=id.split("/").slice(0,-1).join("/")||"#";if(-1===Object.keys(function(){var dirList={"/":{id:"/",path:"/"}};for(var key in getTree()._model.data)getTree()._model.data[key].original&&("dir"!==getTree()._model.data[key].original.type||isPluginDir(key)||isPlatformDir(key)||(dirList[key]={id:key,path:key+"/"}));return dirList}()).findIndex(x=>x===id)&&"#"!==id){non_exist_parent=!0;let node={type:"dir",children:!0,deletable:!0,id:id,text:id.split("/").pop(),parent:"/"===parent?"#":parent,state:{opened:!1}};getTree().create_node(node.parent,node,"last",null,!0),ProjectTreeFactory.addFolderTreeData(node.id)}items.pop()}),non_exist_parent},$scope.createNewNode=function(file){if($scope.createParentNode(file))return;let path=file.path.replace("//","/"),safeKey=FileUtilityFactory.escapeFileName(path);if(getTree()._model.data[safeKey])return;let parent=safeKey.split("/").slice(0,-1).join("/")||"#",node=Object.assign({},file.meta[path],{id:safeKey,text:safeKey.split("/").pop(),parent:"/"===parent?"#":parent});getTree().create_node(node.parent,node,"last",null,!0),"dir"===node.type&&ProjectTreeFactory.addFolderTreeData(node.id)},PubSub.subscribe(Constant.EVENT.CREATED_NEW_FILE_OR_FOLDER,$scope.createNewNode),PubSub.subscribe(Constant.EVENT.NEW_FILE,function(){$scope.openCreateFileDialog()}),PubSub.subscribe(Constant.EVENT.NEW_FOLDER,function(){$scope.openCreateFolderDialog()}),PubSub.subscribe(Constant.EVENT.DELETE_FILE_OR_FOLDER,function(){deleteFile()}),PubSub.subscribe(Constant.EVENT.RENAME_FILE_OR_FOLDER,function(){var node=getSelectedNode(null,!0);node&&changeNameInline(node.node)}),PubSub.subscribe(Constant.EVENT.EXECUTE_WITH_SELECTED_NODE,function(data){var node="/"===data.target?"/":getSelectedNode(data.target,!1);node&&data.callback(node)}),$scope.openNode=function(data){var node;data&&data.lineNum&&data.lineNum;if((node=data&&data.target?getNodeById(data.target):getSelectedNode(null,!0))&&node.node&&(node=node.node),node&&"file"===node.original.type)openFile(node);else{let safeKey=FileUtilityFactory.escapeFileName(data.target),run=safeKey.split("/"),items=safeKey.split("/"),paths_to_open=[];run.forEach(element=>{const id=items.join("/")||"#";"#"!==id&&paths_to_open.push(id),items.pop()}),$scope.openNodeRecursive(paths_to_open,paths_to_open.length-1,function(){$scope.openNode(data)})}},$scope.openNodeRecursive=function(paths,index,callback){index>0?getTree().open_node(paths[index],function(){$scope.openNodeRecursive(paths,index-1,callback)},!1):callback()},PubSub.subscribe(Constant.EVENT.OPEN_FILE,function(data){$scope.openNode(data)}),PubSub.subscribe(Constant.EVENT.COPY_FILE,function(){$scope.openCopyFileDialog()}),PubSub.subscribe(Constant.EVENT.UPLOAD_FILES,function(){$scope.openUploadFilePanel()})}]),angular.module("monacaIDE").controller("UploadFileDialogController",["$scope","ProjectTreeFactory","selectedNode","directoryList",function($scope,ProjectTreeFactory,selectedNode,directoryList){$scope.directoryList=$.map(directoryList,function(value){return value}),$scope.uploadStatus=ProjectTreeFactory.uploadStatus,$scope.uploadDir="/";try{$scope.uploadDir="file"===selectedNode.original.type?selectedNode.parent:selectedNode.id,$scope.uploadDir="#/"===$scope.uploadDir||"#"===$scope.uploadDir?"/":$scope.uploadDir}catch(e){$scope.uploadDir="/"}$scope.onDrop=function(evt){ProjectTreeFactory.onDrop(evt,$scope.uploadDir)},$scope.uploadSingleFile=function(file){var path="/"===$scope.uploadDir?"/":$scope.uploadDir+"/";return ProjectTreeFactory.push(path,file,!0)}}]),angular.module("monacaIDE").controller("OneTimePassController",["$scope","$uibModalInstance","OneTimePassApiService","$sce",function($scope,$modalInstance,MonacaApiService,$sce){function display(response){$scope.password=response.one_time_password,$scope.email=response.email,$scope.expire_at=response.expire_at}$scope.page="loading",MonacaApiService.load().then(function(res){display(res.result),$scope.page="one-time-pass"}),$scope.generate=function(){MonacaApiService.generate().then(function(res){display(res.result)})},$scope.close=function(){$modalInstance.close($scope.expire_at)}}]),angular.module("monacaIDE").controller("WorkspaceConfigController",["$element","$scope","$q","gettextCatalog","Constant","MonacaEditorFactory","ProjectService","TerminalFactory","TerminalSettingFactory","UserFactory","PubSub","CommonFunctionService","ContainerService","GoldenLayoutService","$window",function($element,$scope,$q,gettextCatalog,Constant,MonacaEditorFactory,ProjectService,TerminalFactory,TerminalSettingFactory,UserFactory,PubSub,CommonFunctionService,ContainerService,GoldenLayoutService,$window){let terminalOS;$scope.editor=null,$scope.config={editor:{},terminal:{},user:{}},$scope.config.editor=Object.assign({},MonacaEditorFactory.getDefaultSettings()),$scope.config.terminal=Object.assign({},TerminalSettingFactory.getDefaultSettings()),$scope.config.user=Object.assign({},UserFactory.getDefaultCustormerExperienceSettings()),$scope.config.isShowedCustomerExperience=UserFactory.getSubscriptionInfo().toLowerCase()!==Constant.PLAN.FREE,$scope.terminalFeatureEnabled=CommonFunctionService.isTerminalService(),$scope.isMultipleLanguage=CommonFunctionService.isMultipleLanguage(),$scope.bool={off:{name:gettextCatalog.getString("Off"),value:!1},on:{name:gettextCatalog.getString("On"),value:!0}},$scope.onRestoreDefaultClicked=(()=>{$scope.config.editor=Object.assign({},MonacaEditorFactory.getDefaultSettings()),$scope.terminalFeatureEnabled&&($scope.config.terminal=Object.assign({},TerminalSettingFactory.getDefaultSettings())),$scope.config.user=Object.assign({},UserFactory.getDefaultCustormerExperienceSettings()),$scope.isMultipleLanguage&&($scope.config.terminal.terminalOS=TerminalSettingFactory.getDefaultTerminalOS()),$scope.onApplyClicked()}),$scope.onApplyClicked=(()=>{($scope.config.editor&&$scope.config.editor.hasOwnProperty("tabSize")&&_.isNull($scope.config.editor.tabSize)&&($scope.config.editor.modelFormatting.tabSize=1),$scope.editor&&$scope.editor.setSettings($scope.config.editor),ProjectService.saveEditorSetting(window.config.projectId,$scope.config.editor)).then(response=>{MonacaEditorFactory.fetchSettings(),function(){if(!$scope.terminalFeatureEnabled)return Promise.resolve(!0);let fontSize=Number($scope.config.terminal.fontSize);if((!fontSize||fontSize<11||fontSize>80)&&($scope.config.terminal.fontSize=12),$scope.config.terminal.terminalOS&&$scope.isMultipleLanguage&&terminalOS!==$scope.config.terminal.terminalOS){GoldenLayoutService.closeAllTerminalTabs();let settings={};settings.terminal_os=$scope.config.terminal.terminalOS,ProjectService.saveProjectTerminalSetting(window.config.projectId,settings).then(()=>{CommonFunctionService.setWaitCursor(!0),terminalOS=$scope.config.terminal.terminalOS,PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("You have changed Terminal OS. Please reload browser to take effect.")}),ContainerService.removeTerminal(window.config.projectId).then(()=>{CommonFunctionService.setWaitCursor(!1);const msg=gettextCatalog.getString("You have changed Terminal OS. Please reload browser to take effect.");alert(msg),setTimeout(()=>$window.location.reload(),2e3)}).catch(()=>{CommonFunctionService.setWaitCursor(!1)})}).catch(err=>{CommonFunctionService.setWaitCursor(!1),console.error("Coult not save project terminal setting",err),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Could not save the Terminal OS changes.")})})}return TerminalFactory.setSettings($scope.config.terminal)}().then(response=>{PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Workspace configurations has been saved.")}),UserFactory.setCustomerExperienceSettings($scope.config.user).then(response=>{}).catch(error=>{console.log("Customer Experience",error),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Cannot apply Customer Experience settings.")})})}).catch(error=>{console.log("workspace configuration",error),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Cannot apply workspace configurations.")})})}).catch(error=>{console.log("workspace configuration",error),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("Cannot apply workspace configurations.")})})}),function(){const element=$element[0].querySelector("#preview-conf-editor"),editor_settings=Object.assign({},{fileName:"__.html",value:"",language:"html"},MonacaEditorFactory.getSettings());$q.when(MonacaEditorFactory.create(element,editor_settings)).then(editor=>{$scope.editor=editor,$scope.validThemes=editor._settings.themes,$scope.validFontFamilies=editor._settings.fonts,$scope.validRenderWhitespace=editor._settings.whitespace,$scope.validWordWrap=editor._settings.wordwrap;const currentSettings=editor.getSettings();$scope.config.editor.theme=currentSettings.theme,$scope.config.editor.fontFamily=currentSettings.fontFamily,$scope.config.editor.fontSize=currentSettings.fontSize,$scope.config.editor.minimap.enabled=currentSettings.minimap.enabled,$scope.config.editor.autoClosingBrackets=currentSettings.autoClosingBrackets,$scope.config.editor.autoIndent=currentSettings.autoIndent,$scope.config.editor.renderWhitespace=currentSettings.renderWhitespace,$scope.config.editor.wordWrap=currentSettings.wordWrap,$scope.config.editor.wordWrapColumn=currentSettings.wordWrapColumn,$scope.config.editor.modelFormatting.insertSpaces=currentSettings.modelFormatting.insertSpaces,$scope.config.editor.modelFormatting.tabSize=currentSettings.modelFormatting.tabSize,$scope.config.editor.dragAndDrop=JSON.parse(currentSettings.dragAndDrop)})}(),$scope.terminalFeatureEnabled&&function(){const terminal_settings=TerminalFactory.getSettings();var setting;$scope.terminalFontFamilies=TerminalSettingFactory.getValidFonts(),$scope.terminalThemes=TerminalSettingFactory.getValidThemes(),$scope.terminalCursorStyles=TerminalSettingFactory.getValidCursorStyles(),$scope.terminalOSes=TerminalSettingFactory.getValidTerminalOSes(),setting=terminal_settings,$scope.config.terminal.fontFamily=setting.fontFamily,$scope.config.terminal.fontSize=setting.fontSize,$scope.config.terminal.theme=setting.theme,$scope.config.terminal.cursorStyle=setting.cursorStyle,$scope.config.terminal.cursorBlink=setting.cursorBlink,$scope.isMultipleLanguage&&$scope.terminalFeatureEnabled&&ProjectService.getProjectTerminalSetting(window.config.projectId).then(setting=>{$scope.config.terminal.terminalOS=setting.terminal_os,terminalOS=setting.terminal_os}).catch(error=>{console.error("Could not get terminal setting for this project.",error),$scope.config.terminal.terminalOS=TerminalSettingFactory.getDefaultTerminalOS()})}(),function(){const customer_settings=UserFactory.getCustomerExperienceSettings();$scope.config.user.feedback=customer_settings.feedback}()}]),angular.module("monacaIDE").controller("ProjectShareWindowController",["$scope","$q","ShareApiService","PubSub","Constant","ProjectFactory",function($scope,$q,Api,PubSub,Constant,ProjectFactory){$scope.isLoading=!0,$scope.canShareProject=ProjectFactory.getCanShareProject(),$scope.isInviteDetailOpen=!1,$scope.shareUrl="",$scope.users=[],$scope.dirtyUsers=[],$scope.newmembers={email:"",role:"developer",sendmail:!1},MonacaApi.Ide.User.info().then(function(response){$scope.userInfo=response.body.result||{}}),$scope.canShareProject?Api.getSharedUsers().then(function(response){if(!response&&!response.body&&!response.body.result)return!1;var result=response.body.result;$scope.myUserId=result.myUserId,$scope.ownerUserId=result.ownerUserId,$scope.shareUrl=result.projectUrl,$scope.users=result.teamUsers,$scope.isLoading=!1}):$scope.isLoading=!1,$scope.isDeletableUser=function(user){return $scope.myUserId===$scope.ownerUserId||$scope.myUserId===user.id},$scope.onClickDeleteUser=function(user){if($scope.isDeletableUser(user)){user.isDeleted=!0,$scope.dirtyUsers.push(user);for(var i=0;i<$scope.users.length;i++)$scope.users[i].email===user.email&&$scope.users.splice(i,1)}},$scope.onClickUpdateUserRole=function(user,role){user.role!==role&&(user.role=role,$scope.dirtyUsers.push(user))},$scope.onClickInviteMail=function(){$scope.isInviteDetailOpen=!0,setTimeout(function(){document.getElementById("project-share-invite-emails").focus()})},$scope.onClickInviteCancel=function(){$scope.isInviteDetailOpen=!1},$scope.onClickInviteSubmit=function(){$scope.isLoading=!0,Api.addSharedUser($scope.newmembers.email,$scope.newmembers.role,$scope.newmembers.sendmail).then(function(response){if(!response&&!response.body&&!response.body.result)return!1;var result=response.body.result;if($scope.users=result.teamUsers,$scope.newmembers.email="",$scope.isInviteDetailOpen=!1,result.message){var messages=result.message.split("\n").filter(function(v){return!!v});messages[0]&&PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:messages[0]})}$scope.isLoading=!1})},$scope.isValid=function(){return $scope.newmembers.email&&$scope.newmembers.role},$scope.onClickOk=function(modalInstance){if($scope.dirtyUsers.length){var dfds=[];$scope.dirtyUsers.forEach(function(user){user.isDeleted?dfds.push(Api.removeSharedUser(user.email)):dfds.push(Api.updateUserRole(user.email,user.role))}),$q.all(dfds).then(function(){modalInstance.$close()})}else modalInstance.$close()}}]),angular.module("monacaIDE").controller("ProjectPublishWindowController",["$scope","$q","$uibModal","PublishApiService",function($scope,$q,$modal,Api){function getPublishUrl(pid){return pid?window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_WEB)+"/directimport?pid="+pid:""}$scope.isLoading=!0,$scope.publishUrl="",Api.isPublished().then(function(response){$scope.publishUrl=getPublishUrl(response.pid),$scope.isLoading=!1},function(response){alert("Could not determine whether the project is publihsed or not!")}),$scope.onTogglePublish=function(){$scope.isLoading=!0,Api.togglePublish().then(function(response){$scope.publishUrl=getPublishUrl(response.pid),$scope.isLoading=!1},function(response){alert("The requested action could not be completed. Please Try again.")})},$scope.onClickCancel=function(modalInstance){modalInstance.$close()}}]),angular.module("monacaIDE").controller("VcsAbortMergeController",["$scope","$sce","PubSub","Constant","VcsApiService",function($scope,$sce,PubSub,Constant,VcsApiService){function onSuccess(){$scope.page=$scope.pages.success,PubSub.publish(Constant.EVENT.MERGING_RESOLVED),PubSub.publish(Constant.EVENT.TREE_UPDATED)}function onError(error){$scope.page=$scope.pages.error,$scope.errorTitle=$sce.trustAsHtml(error.title),$scope.errorMessage=$sce.trustAsHtml(error.message)}$scope.pages={default:"default",loading:"loading",success:"success",error:"error"},$scope.page=$scope.pages.default,$scope.errorTitle="",$scope.errorMessage="",$scope.onClickAbortButton=function(){$scope.page=$scope.pages.loading,VcsApiService.abortMerge().then(onSuccess,onError)}}]),angular.module("monacaIDE").controller("VcsCommitController",["$scope","PubSub","Constant","VcsApiService","$sce",function($scope,PubSub,Constant,VcsApiService,$sce){function displayError(result){$scope.page="error",$scope.title=$sce.trustAsHtml(result.title),$scope.message=$sce.trustAsHtml(result.message)}function setCheckAllButtonState(){var el=document.getElementById("vcs-commit-window-files-commitall");if(el)switch($scope.isToCommitedAll){case 0:el.checked=!1,el.indeterminate=!1;break;case 1:el.checked=!1,el.indeterminate=!0;break;case 2:el.checked=!0,el.indeterminate=!1}}$scope.page="loading",$scope.commitMessage="",$scope.isToCommitedAll=0,$scope.status={untracked:0,modified:0,renamed:0,deleted:0,"updated-but-unmerged":0},$scope.files=[],$scope.hideBack=0,$scope.model={},VcsApiService.status().then(function(response){if("ok"===response.status&&response.title&&response.message)return displayError(response),void($scope.hideBack=1);$scope.page="default",$scope.status=response.result.overview||$scope.status,$scope.files=response.result.files||[],$scope.hideBack=0},function(result){$scope.hideBack=1,displayError(result)}),$scope.onClickCheckAll=function(){$scope.isToCommitedAll<=1?$scope.isToCommitedAll=2:$scope.isToCommitedAll=0,$scope.files.forEach(function(file){file.isToCommited=!!$scope.isToCommitedAll}),setCheckAllButtonState()},$scope.onClickFile=function(file){file.isToCommited=!file.isToCommited;for(var checked=$scope.files[0].isToCommited,i=0;i<$scope.files.length;i++)if($scope.files[i].isToCommited!==checked)return $scope.isToCommitedAll=1,void setCheckAllButtonState();$scope.isToCommitedAll=checked?2:0,setCheckAllButtonState()},$scope.highlightRow=function($event){$($event.target).closest("tr").toggleClass("highlight-selected-row")},$scope.onClickCheckbox=function(file){file.isToCommited=!file.isToCommited},$scope.onClickSubmit=function(){$scope.page="committing";var fileForSubmission=[];$scope.files.filter(function(file){return file.isToCommited}).forEach(function(item,index){fileForSubmission.push(item.name)}),VcsApiService.commit(this.commitMessage,fileForSubmission).then(function(response){$scope.page="success",PubSub.publish(Constant.EVENT.MERGING_RESOLVED)},function(result){displayError(result)})},$scope.onClickBack=function(){$scope.page="default"}}]),angular.module("monacaIDE").controller("VcsCommitHistoryController",["$scope","VcsApiService",function($scope,VcsApiService){$scope.diff=null,$scope.loading=!0,VcsApiService.localHistory().then(function(response){var commits=response.result;commits.length>0&&$scope.displayDiff(0,commits[0].commit_id,commits[0].parent),$scope.commits=commits,$scope.loading=!1},function(result){}),$scope.displayDiff=function($event,commit_id1,commit_id2){VcsApiService.diff(commit_id1,commit_id2).then(function(response){var diff2htmlUi=new Diff2HtmlUI({diff:response.result});if(diff2htmlUi.draw("#diff-viewer",{inputFormat:"json",showFiles:!0,matching:"lines"}),diff2htmlUi.fileListCloseable("#diff-viewer",!1),diff2htmlUi.highlightCode("#diff-viewer"),$scope.diff=!0,$event&&$event.target){var $selected=$($event.target).closest("li");$selected.closest("ul").find("li").removeClass("selected"),$selected.addClass("selected")}else if(_.isNumber($event)){$(".vcs-history-list li:eq("+$event+")").addClass("selected")}},function(result){$scope.diff=!1})}}]),angular.module("monacaIDE").controller("VcsConfigurationController",["$scope","$window","$timeout","$q","PubSub","Constant","ProjectFactory","UserFactory","VcsApiService",function($scope,$window,$timeout,$q,PubSub,Constant,ProjectFactory,UserFactory,VcsApiService){function configureSetupSuccess(response){var data=response.result;if($scope.repositories=[],$scope.branches=[],$scope.emails=[],$scope.showUpgrade=!data.hasFullRepoAccess,$scope.configOptions.currentRepository=null,$scope.configOptions.currentRepoLink=null,$scope.configOptions.selectedRepository=null,$scope.configOptions.selectedEmail=null,$scope.configOptions.selectedBranch=null,$scope.configOptions.name=data.name,$scope.initCurrentRepository=null,$scope.initSelectedBranch=null,"GitManual"===$scope.serviceType)return $scope.uiSetup.sshPublicKey=data.sshPublicKey||!1,$scope.uiSetup.sshConfigureUrl=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_WEB)+"/ssh",$scope.uiSetup.sshPublicKey?($scope.configOptions.selectedEmail=data.email,void("string"==typeof data.repo&&($scope.configOptions.currentRepository=data.repo,configureBranches(data.branch)))):$q.reject({page:"git-missing-ssh-key"});if("string"==typeof data.repo){$scope.configOptions.currentRepository=data.repo,$scope.configOptions.currentRepoLink=data.repo_url,configureBranches(data.branch);for(var i=0;i<data.email.length;i++)$scope.emails.push({value:data.email[i].email,name:data.email[i].email}),data.email[i].selected&&($scope.configOptions.selectedEmail=data.email[i].email)}else{for(var x=0;x<data.repo.length;x++)$scope.repositories.push({value:data.repo[x].id,name:data.repo[x].full_name});for(var y=0;y<data.email.length;y++){var email=data.email[y].email;$scope.emails.push({value:email,name:email}),data.email[y].selected&&($scope.configOptions.selectedEmail=email)}}}function configureSetupFailure(result){return $scope.title=result.title,$scope.message=result.message,$q.reject(result)}function configureBranches(branches){for(var i=0;i<branches.length;i++)$scope.branches.push({value:branches[i].name,name:branches[i].name}),branches[i].selected&&($scope.configOptions.selectedBranch=branches[i].name)}$scope.page="loading",$scope.configOptions={},$scope.uiSetup={},$scope.planChangeUrl=window.MonacaApi.Config.getServiceEndpoint(window.MonacaApi.Config.ENDPOINT_WEB)+"/plan/change",$scope.uiSetup.hasVcsConfiguration=ProjectFactory.hasVcsConfiguration(),$scope.uiSetup.hasMultipleServices=Object.values(ProjectFactory.getVcsServiceCollection()).filter(function(x){return!0===x}).length>1,$scope.openPlanChangeUrl=function(){$window.open($scope.planChangeUrl)},$scope.goToServiceSelection=function(){$scope.page="git-service-selection"},$scope.isServiceOptionDisabled=function(service){return!UserFactory.hasVcsServiceCheck(service)},$scope.initialServiceSelection=function(service){switch($scope.page="loading",service){case"gitssh":$scope.serviceType="GitManual";break;case"github":$scope.serviceType="GitHub";break;default:return void($scope.page="git-service-unknown")}return VcsApiService.setup($scope.serviceType).then(configureSetupSuccess,configureSetupFailure).then(function(){"github"!==service||$scope.repositories.length?$scope.page="git-service-"+service:$scope.page="git-service-"+service+"-no-repository"},function(error){$scope.page=error&&error.page?error.page:"git-configuration-error"})},$scope.onClickAdvanceConfigurations=function(){$scope.page="loading";var service=ProjectFactory.getVcsServiceType().toLowerCase();service="gitmanual"===service?"gitssh":service,$scope.initialServiceSelection(service)},$scope.onClickInitialize=function(){var options={current_working_branch:$scope.configOptions.selectedBranch,commit_email:$scope.configOptions.selectedEmail,commit_name:$scope.configOptions.name};$scope.configOptions.currentRepository||(options.type=$scope.serviceType,options.repository_id=$scope.configOptions.selectedRepository),$scope.page="loading",VcsApiService.configure(options).then(function(response){if(!$scope.configOptions.currentRepository){for(var i=0;i<$scope.repositories.length;i++)if($scope.repositories[i].value===$scope.configOptions.selectedRepository){$scope.initCurrentRepository=$scope.repositories[i].name;break}$scope.initSelectedBranch="master"}$scope.page="git-configuration-success",$scope.message=response.message,ProjectFactory.setVcsServiceType($scope.serviceType),ProjectFactory.setHasVcsConfiguration(!0),$scope.uiSetup.hasVcsConfiguration=ProjectFactory.hasVcsConfiguration(),PubSub.publish(Constant.EVENT.TREE_UPDATED)},function(response){$scope.page="git-configuration-error",$scope.title=response.title,$scope.message=response.message,response.result&&response.result.changedBrunch})},!ProjectFactory.hasVcsConfiguration()&&$scope.uiSetup.hasMultipleServices?$timeout(function(){$scope.page="git-service-selection"},1):!ProjectFactory.hasVcsConfiguration()&&ProjectFactory.getHasServiceVcsGitSsh()?$scope.initialServiceSelection("gitssh"):!ProjectFactory.hasVcsConfiguration()&&ProjectFactory.getHasServiceVcsGitHub()?$scope.initialServiceSelection("github"):ProjectFactory.hasVcsConfiguration()&&($scope.serviceType=ProjectFactory.getVcsServiceType(),VcsApiService.setup($scope.serviceType).then(configureSetupSuccess,configureSetupFailure).then(function(){var service=ProjectFactory.getVcsServiceType().toLowerCase();service="gitmanual"===service?"gitssh":service,$scope.page="git-service-"+service},function(){$scope.page="git-configuration-error"}))}]),angular.module("monacaIDE").controller("VcsDiscardChangesController",["$scope","$sce","PubSub","Constant","VcsApiService",function($scope,$sce,PubSub,Constant,VcsApiService){function onSuccess(){$scope.page=$scope.pages.success,PubSub.publish(Constant.EVENT.MERGING_RESOLVED),PubSub.publish(Constant.EVENT.TREE_UPDATED)}function onError(error){$scope.page=$scope.pages.error,$scope.errorTitle=$sce.trustAsHtml(error.title),$scope.errorMessage=$sce.trustAsHtml(error.message)}$scope.pages={default:"default",loading:"loading",success:"success",error:"error"},$scope.page=$scope.pages.default,$scope.errorTitle="",$scope.errorMessage="",$scope.onClickDiscardButton=function(){$scope.page=$scope.pages.loading,VcsApiService.discard().then(onSuccess,onError)}}]),angular.module("monacaIDE").controller("VcsPullController",["$sce","$scope","PubSub","Constant","VcsApiService","ProjectFactory",function($sce,$scope,PubSub,Constant,VcsApiService,ProjectFactory){function onPullSuccess(response){$scope.page=$scope.pages.pullSuccess,$scope.pull.success.message=$sce.trustAsHtml(response.message),$scope.pull.success.result=$sce.trustAsHtml(response.result),PubSub.publish(Constant.EVENT.TREE_UPDATED)}function onPullError(error){$scope.page=$scope.pages.pullError,$scope.pull.error.message=$sce.trustAsHtml(error.message),$scope.pull.error.result=$sce.trustAsHtml(error.result.conflictedFiles),error.result.conflict&&(PubSub.publish(Constant.EVENT.MERGING_DETECTED),PubSub.publish(Constant.EVENT.TREE_UPDATED))}$scope.pages={setupSuccess:"setupSuccess",setupError:"error",pullSuccess:"pullSuccess",pullError:"pullError",loading:"loading",pulling:"pulling"},$scope.page=$scope.pages.loading,$scope.branches=[],$scope.currentBranch=null,$scope.selectedBranch=null,$scope.setup={error:{title:null,message:null}},$scope.pull={success:{message:null,result:null},error:{message:null,result:null}},$scope.serviceType=ProjectFactory.getVcsServiceType(),ProjectFactory.getHasServiceVcsGitSsh()?$scope.serviceType="gitssh":ProjectFactory.getHasServiceVcsGitHub()&&($scope.serviceType="github"),VcsApiService.setup($scope.serviceType).then(function(response){$scope.page=$scope.pages.setupSuccess,$scope.branches=response.result.branch,$scope.currentBranch=$scope.branches.find(function(branch){return branch.selected}),$scope.selectedBranch=$scope.currentBranch},function(error){$scope.page=$scope.pages.setupError,$scope.setup.error.title=error.title,$scope.setup.error.message=error.message}),$scope.isSelectedSameBranch=function(){return $scope.currentBranch===$scope.selectedBranch},$scope.isLoading=function(){return $scope.page===$scope.pages.loading||$scope.page===$scope.pages.pulling},$scope.onClickPullButton=function(){$scope.page=$scope.pages.pulling,VcsApiService.pull($scope.selectedBranch.name).then(onPullSuccess,onPullError)}}]),angular.module("monacaIDE").controller("VcsPushController",["$scope","VcsApiService",function($scope,VcsApiService){function onSuccess(response){$scope.page=$scope.pages.success,$scope.message=response.message}function onError(error){$scope.page=$scope.pages.error,$scope.message=error.message}$scope.pages={default:"default",pushing:"pushing",success:"success",error:"error"},$scope.page=$scope.pages.default,$scope.onClickPushButton=function(){$scope.page=$scope.pages.pushing,VcsApiService.push().then(onSuccess,onError)}}]),angular.module("monacaIDE").controller("BuildTaskDialog",["$scope","title","buildTask","reports","buildTasks","ProjectService","PubSub","Constant","gettextCatalog","CustomBuildSettingsFactory",function($scope,title,buildTask,reports,buildTasks,ProjectService,PubSub,Constant,gettextCatalog,CustomBuildSettingsFactory){$scope.title=title,$scope.reports=reports,$scope.name=$scope.description=$scope.selectedReport=$scope.execution=null,$scope.id=buildTask?buildTask.id:null,$scope.loadData=(()=>{buildTask&&buildTask.name?($scope.name=buildTask.name,$scope.description=buildTask.description,$scope.execution=buildTask.execution,$scope.selectedReport=Object.assign({},buildTask.report)):$scope.selectedReport=CustomBuildSettingsFactory.getDefaultReport()}),$scope.delete=(()=>{let params={};(params=Object.assign({},buildTask)).type="buildTask",params.isDeleted=1,ProjectService.saveCustomBuildTasks(params).then(()=>{PubSub.publish(Constant.EVENT.CUSTOM_BUILD_RELOAD),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Build task is deleted.")}),$scope.$close()}).catch(err=>{console.log(err)})}),$scope.isSaveAble=(()=>!(!$scope.name||!$scope.execution)),$scope.isDeleteAble=(()=>!!$scope.id),$scope.isDuplicatedName=((id,name)=>!!id&&(!(!buildTasks||!buildTasks.length)&&buildTasks.findIndex(element=>element.id!==id&&element.name===name)>=0)),$scope.save=(()=>{let params={type:"buildTask",isDeleted:0};params.id=$scope.id,params.name=$scope.name,$scope.isDuplicatedName(params.id,params.name)?PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("The task name could not be duplicated!")}):(params.description=$scope.description,params.execution=$scope.execution,params.report=$scope.selectedReport,ProjectService.saveCustomBuildTasks(params).then(()=>{PubSub.publish(Constant.EVENT.CUSTOM_BUILD_RELOAD),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Build task is saved.")}),$scope.$close()}).catch(err=>{console.log(err)}))}),$scope.loadData()}]),angular.module("monacaIDE").controller("BatchBuildDialog",["$scope","title","batchBuild","availableBuildTasks","batchBuilds","ProjectService","PubSub","Constant","gettextCatalog",function($scope,title,batchBuild,availableBuildTasks,batchBuilds,ProjectService,PubSub,Constant,gettextCatalog){$scope.title=title,$scope.availableBuildTasks=availableBuildTasks.slice(0),$scope.buildTasks=[],$scope.name=$scope.description="",$scope.selectedAvailableBuildTasks=$scope.selectedBuildTasks=[],$scope.currentIndex=-1,$scope.id=batchBuild&&batchBuild.id?batchBuild.id:null,$scope.loadData=(()=>{batchBuild&&batchBuild.name&&($scope.name=batchBuild.name,$scope.description=batchBuild.description,$scope.buildTasks=batchBuild.buildTasks.slice(0),batchBuild.buildTasks&&batchBuild.buildTasks.length&&($scope.availableBuildTasks=$scope.availableBuildTasks.filter(item=>batchBuild.buildTasks.findIndex(element=>element.id===item.id)<0)))}),$scope.isAbleToMoveUp=(()=>!(!$scope.selectedBuildTasks||!$scope.selectedBuildTasks.length||$scope.selectedBuildTasks.length>1)&&(!(!$scope.buildTasks||!$scope.buildTasks.length||$scope.buildTasks.length<=1)&&($scope.currentIndex=$scope.buildTasks.findIndex(item=>item.id===JSON.parse($scope.selectedBuildTasks[0]).id),!($scope.currentIndex<=0)))),$scope.isAbleToMoveDown=(()=>!(!$scope.selectedBuildTasks||!$scope.selectedBuildTasks.length||$scope.selectedBuildTasks.length>1)&&(!(!$scope.buildTasks||!$scope.buildTasks.length||$scope.buildTasks.length<=1)&&($scope.currentIndex=$scope.buildTasks.findIndex(item=>item.id===JSON.parse($scope.selectedBuildTasks[0]).id),!($scope.currentIndex>=$scope.buildTasks.length-1)))),$scope.isAbleToMoveToBuildTasks=(()=>!(!$scope.selectedAvailableBuildTasks||!$scope.selectedAvailableBuildTasks.length)),$scope.isAbleToMoveToAvailaleTasks=(()=>!(!$scope.selectedBuildTasks||!$scope.selectedBuildTasks.length)),$scope.moveUp=(()=>{$scope.isAbleToMoveUp()&&$scope.buildTasks.splice($scope.currentIndex-1,0,$scope.buildTasks.splice($scope.currentIndex,1)[0])}),$scope.moveDown=(()=>{$scope.isAbleToMoveDown()&&$scope.buildTasks.splice($scope.currentIndex+1,0,$scope.buildTasks.splice($scope.currentIndex,1)[0])}),$scope.moveFromBuildTasksToAvailableTasks=(()=>{$scope.isAbleToMoveToAvailaleTasks()&&($scope.selectedBuildTasks.forEach(item=>{let selectedBuildTask=JSON.parse(item);$scope.availableBuildTasks.push(selectedBuildTask);let index=$scope.buildTasks.findIndex(item=>item.id===selectedBuildTask.id);index>=0&&$scope.buildTasks.splice(index,1)}),$scope.selectedBuildTasks=[])}),$scope.moveFromAvailableTasksToBuildTasks=(()=>{$scope.isAbleToMoveToBuildTasks()&&($scope.selectedAvailableBuildTasks.forEach(item=>{let selectedBuildTask=JSON.parse(item);$scope.buildTasks.push(selectedBuildTask);let index=$scope.availableBuildTasks.findIndex(item=>item.id===selectedBuildTask.id);index>=0&&$scope.availableBuildTasks.splice(index,1)}),$scope.selectedAvailableBuildTasks=[])}),$scope.getBuildTasksIDs=(buildTasks=>{let tmp=[];return buildTasks&&buildTasks.length&&buildTasks.forEach(item=>tmp.push(item.id)),tmp}),$scope.isSaveAble=(()=>!!($scope.name&&$scope.buildTasks&&$scope.buildTasks.length)),$scope.isDeleteAble=(()=>!!$scope.id),$scope.isDuplicatedName=((id,name)=>!!id&&(!(!batchBuilds||!batchBuilds.length)&&batchBuilds.findIndex(element=>element.id!==id&&element.name===name)>=0)),$scope.delete=(()=>{let params={};(params=Object.assign({},batchBuild)).type="batchBuild",params.isDeleted=1,params.buildTasks=$scope.getBuildTasksIDs(batchBuild.buildTasks),ProjectService.saveCustomBuildTasks(params).then(()=>{PubSub.publish(Constant.EVENT.CUSTOM_BUILD_RELOAD),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Batch build is deleted.")}),$scope.$close()}).catch(err=>{console.log(err)})}),$scope.save=(()=>{let params={type:"batchBuild",isDeleted:0};params.id=$scope.id,params.name=$scope.name,$scope.isDuplicatedName(params.id,params.name)?PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"danger",content:gettextCatalog.getString("The build name could not be duplicated!")}):(params.description=$scope.description,params.buildTasks=$scope.getBuildTasksIDs($scope.buildTasks),ProjectService.saveCustomBuildTasks(params).then(()=>{PubSub.publish(Constant.EVENT.CUSTOM_BUILD_RELOAD),PubSub.publish(Constant.EVENT.NOTIFY_USER,{className:"success",content:gettextCatalog.getString("Batch build is saved.")}),$scope.$close()}).catch(err=>{console.log(err)}))}),$scope.loadData()}]),angular.module("monacaIDE").constant("OnsenTags",{"ons-action-sheet-button":{description:"Component that represent each button of the action sheet.",attributes:[{id:"icon",description:"Creates an `ons-icon` component with this string. Only visible on Android."},{id:"modifier",description:"The appearance of the action sheet button."}]},"ons-action-sheet":{description:"Action/bottom sheet that is displayed on top of current screen.\n  This element can either be attached directly to the `<body>` or dynamically created from a template using the `ons.createElement(template, { append: true })` utility function and the `<ons-template>` tag.\n  The action sheet is useful for displaying a list of options and asking the user to make a decision. A `ons-action-sheet-button` is provided for this purpose, although it can contain any type of content.\n  It will automatically be displayed as Material Design (bottom sheet) when running on an Android device.\n",attributes:[{id:"title",description:"Optional title of the action sheet. A new element will be created containing this string."},{id:"modifier",description:"The appearance of the action sheet."},{id:"cancelable",description:"If this attribute is set the action sheet can be closed by tapping the background or by pressing the back button on Android devices."},{id:"disabled",description:"If this attribute is set the action sheet is disabled."},{id:"animation",description:'The animation used when showing and hiding the action sheet. Can be either `"none"` or `"default"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."},{id:"mask-color",description:'Color of the background mask. Default is `"rgba(0, 0, 0, 0.2)"`.'}]},"ons-alert-dialog-button":{description:"",attributes:[{id:"modifier",description:"The appearance of the button."},{id:"disabled",description:"Specify if button should be disabled."}]},"ons-alert-dialog":{description:"Alert dialog that is displayed on top of the current screen. Useful for displaying questions, warnings or error messages to the user. The title, content and buttons can be easily customized and it will automatically switch style based on the platform.\n  To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createAlertDialog(template)` utility function and the `<ons-template>` tag.\n",attributes:[{id:"modifier",description:"The appearance of the dialog."},{id:"cancelable",description:"If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices."},{id:"disabled",description:"If this attribute is set the dialog is disabled."},{id:"animation",description:'The animation used when showing and hiding the dialog. Can be either `"none"` or `"default"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."},{id:"mask-color",description:'Color of the background mask. Default is "rgba(0, 0, 0, 0.2)".'}]},"ons-back-button":{description:"Back button component for `<ons-toolbar>`. Put it in the left part of the `<ons-toolbar>`.\n  It will find the parent `<ons-navigator>` element and pop a page when clicked. This behavior can be overriden by specifying the `onClick` property.\n",attributes:[{id:"modifier",description:"The appearance of the back button."}]},"ons-bottom-toolbar":{description:"Toolbar component that is positioned at the bottom of the page.",attributes:[{id:"modifier",description:"The appearance of the toolbar."}]},"ons-button":{description:"Button component. If you want to place a button in a toolbar, use `<ons-toolbar-button>` or `<ons-back-button>` instead.\n  Will automatically display as a Material Design button with a ripple effect on Android.\n",attributes:[{id:"modifier",description:"The appearance of the button."},{id:"ripple",description:"If this attribute is defined, the button will have a ripple effect."},{id:"disabled",description:"Specify if button should be disabled."}]},"ons-card":{description:"Component to create a card that displays some information.\n The card may be composed by divs with specially prepared classes `title` and/or `content`. You can also add your own content as you please.",attributes:[{id:"modifier",description:"The appearance of the card."}]},"ons-carousel-item":{description:"Carousel item component. Used as a child of the `<ons-carousel>` element.\n",attributes:[]},"ons-carousel":{description:"Carousel component. A carousel can be used to display several items in the same space.\n  The component supports displaying content both horizontally and vertically. The user can scroll through the items by dragging and it can also be controller programmatically.\n",attributes:[{id:"direction",description:'The direction of the carousel. Can be either "horizontal" or "vertical". Default is "horizontal".'},{id:"fullscreen",description:"If this attribute is set the carousel will cover the whole screen."},{id:"overscrollable",description:"If this attribute is set the carousel will be scrollable over the edge. It will bounce back when released."},{id:"centered",description:"If this attribute is set the carousel then the selected item will be in the center of the carousel instead of the beginning. Useful only when the items are smaller than the carousel. "},{id:"item-width",description:'ons-carousel-item\'s width. Only works when the direction is set to "horizontal".'},{id:"item-height",description:'ons-carousel-item\'s height. Only works when the direction is set to "vertical".'},{id:"auto-scroll",description:"If this attribute is set the carousel will be automatically scrolled to the closest item border when released."},{id:"auto-scroll-ratio",description:"A number between 0.0 and 1.0 that specifies how much the user must drag the carousel in order for it to auto scroll to the next item."},{id:"swipeable",description:"If this attribute is set the carousel can be scrolled by drag or swipe."},{id:"disabled",description:"If this attribute is set the carousel is disabled."},{id:"initial-index",description:"Specify the index of the ons-carousel-item to show initially. Default is 0."},{id:"auto-refresh",description:"When this attribute is set the carousel will automatically refresh when the number of child nodes change."},{id:"animation",description:'If this attribute is set to `"none"` the transitions will not be animated.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."}]},"ons-checkbox":{description:'A checkbox element. The component will automatically render as a Material Design checkbox on Android devices.\n  Most attributes that can be used for a normal `<input type="checkbox">` element can also be used on the `<ons-checkbox>` element.\n',attributes:[{id:"input-id",description:'Specify the "id" attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.'}]},"ons-col":{description:"Represents a column in the grid system. Use with `<ons-row>` to layout components.",attributes:[{id:"vertical-align",description:'Vertical alignment of the column. Valid values are "top", "center", and "bottom".'},{id:"width",description:'The width of the column. Valid values are css width values ("10%", "50px").'}]},"ons-dialog":{description:"Dialog that is displayed on top of current screen. As opposed to the `<ons-alert-dialog>` element, this component can contain any kind of content.\n  To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createDialog(template)` utility function and the `<ons-template>` tag.\n  The dialog is useful for displaying menus, additional information or to ask the user to make a decision.\n  It will automatically be displayed as Material Design when running on an Android device.\n",attributes:[{id:"modifier",description:"The appearance of the dialog."},{id:"cancelable",description:"If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices."},{id:"disabled",description:"If this attribute is set the dialog is disabled."},{id:"animation",description:'The animation used when showing and hiding the dialog. Can be either `"none"` or `"default"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."},{id:"mask-color",description:'Color of the background mask. Default is `"rgba(0, 0, 0, 0.2)"`.'}]},"ons-fab":{description:"The Floating action button is a circular button defined in the [Material Design specification](https://www.google.com/design/spec/components/buttons-floating-action-button.html). They are often used to promote the primary action of the app.\n  It can be displayed either as an inline element or in one of the corners. Normally it will be positioned in the lower right corner of the screen.\n",attributes:[{id:"modifier",description:"The appearance of the button."},{id:"ripple",description:"If this attribute is defined, the button will have a ripple effect when tapped."},{id:"position",description:'The position of the button. Should be a string like `"bottom right"` or `"top left"`. If this attribute is not defined it will be displayed as an inline element.'},{id:"disabled",description:"Specify if button should be disabled."}]},"ons-gesture-detector":{description:"Component to detect finger gestures within the wrapped element. Following gestures are supported:\n  - Drag gestures: `drag`, `dragleft`, `dragright`, `dragup`, `dragdown`\n  - Hold gestures: `hold`, `release`\n  - Swipe gestures: `swipe`, `swipeleft`, `swiperight`, `swipeup`, `swipedown`\n  - Tap gestures: `tap`, `doubletap`\n  - Pinch gestures: `pinch`, `pinchin`, `pinchout`\n  - Other gestures: `touch`, `transform`, `rotate`\n",attributes:[]},"ons-icon":{description:"Displays an icon. The following icon suites are available:\n  * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\n  * [Ionicons](http://ionicons.com/)\n  * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)\n",attributes:[{id:"icon",description:'The icon name. `"md-"` prefix for Material Icons, `"fa-"` for Font Awesome and `"ion-"` prefix for Ionicons.\n  See all available icons on their respective sites:\n  * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\n  * [Ionicons](http://ionicons.com)\n  * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)\n  Icons can also be styled based on modifier presence. Add comma-separated icons with `"modifierName:"` prefix.\n  The code:\n  ```\n  <ons-icon\n    icon="ion-edit, material:md-edit">\n  </ons-icon>\n  ```\n  will display `"md-edit"` for Material Design and `"ion-edit"` as the default icon.\n'},{id:"size",description:'The sizes of the icon. Valid values are lg, 2x, 3x, 4x, 5x, or in the size in pixels.\n  Icons can also be styled based on modifier presence. Add comma-separated icons with `"modifierName:"` prefix.\n  The code:\n  ```\n  <ons-icon\n    icon="ion-edit"\n    size="32px, material:24px">\n  </ons-icon>\n  ```\n  will render as a `24px` icon if the `"material"` modifier is present and `32px` otherwise.\n'},{id:"rotate",description:"Number of degrees to rotate the icon. Valid values are 90, 180 and 270."},{id:"fixed-width",description:"When used in a list, you want the icons to have the same width so that they align vertically by defining this attribute."},{id:"spin",description:"Specify whether the icon should be spinning."}]},"ons-if":{description:"Conditionally display content depending on the platform, device orientation or both.\n  Sometimes it is useful to conditionally hide or show certain components based on platform. When running on iOS the `<ons-if>` element can be used to hide the `<ons-fab>` element.\n",attributes:[{id:"platform",description:'Space-separated platform names. Possible values are `"ios"`, `"android"`, `"windows"` and `"other"`.'},{id:"orientation",description:'Either `"portrait"` or `"landscape"`.'}]},"ons-input":{description:"An input element. The `type` attribute can be used to change the input type. All text input types are supported.\n  The component will automatically render as a Material Design input on Android devices.\n  Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-input>` element.\n",attributes:[{id:"placeholder",description:"Placeholder text. In Material Design, this placeholder will be a floating label."},{id:"float",description:"If this attribute is present, the placeholder will be animated in Material Design."},{id:"type",description:'Specify the input type. This is the same as the "type" attribute for normal inputs. It expects strict text types such as `text`, `password`, etc. For checkbox, radio button, select or range, please have a look at the corresponding elements.\n  Please take a look at [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) for an exhaustive list of possible values. Depending on the platform and browser version some of these might not work.\n'},{id:"input-id",description:'Specify the "id" attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.'}]},"ons-lazy-repeat":{description:'Using this component a list with millions of items can be rendered without a drop in performance.\n  It does that by "lazily" loading elements into the DOM when they come into view and\n  removing items from the DOM when they are not visible.\n',attributes:[]},"ons-list-header":{description:"Header element for list items. Must be put inside the `<ons-list>` component.",attributes:[{id:"modifier",description:"The appearance of the list header."}]},"ons-list-item":{description:'Component that represents each item in a list. The list item is composed of three parts that are represented with the `left`, `center` and `right` classes. These classes can be used to ensure that the content of the list items is properly aligned.\n  ```\n  <ons-list-item>\n    <div class="left">Left</div>\n    <div class="center">Center</div>\n    <div class="right">Right</div>\n  </ons-list-item>\n  ```\n  There is also a number of classes (prefixed with `list-item__*`) that help when putting things like icons and thumbnails into the list items.\n',attributes:[{id:"modifier",description:"The appearance of the list item."},{id:"lock-on-drag",description:"Prevent vertical scrolling when the user drags horizontally."},{id:"tappable",description:"Makes the element react to taps."},{id:"tap-background-color",description:'Changes the background color when tapped. For this to work, the attribute "tappable" needs to be set. The default color is "#d9d9d9". It will display as a ripple effect on Android.'}]},"ons-list-title":{description:"Represents a list title.",attributes:[]},"ons-list":{description:"Component to define a list, and the container for ons-list-item(s).",attributes:[{id:"modifier",description:"The appearance of the list."}]},"ons-modal":{description:"Modal component that masks current screen. Underlying components are not subject to any events while the modal component is shown.\n  This component can be used to block user input while some operation is running or to show some information to the user.\n",attributes:[{id:"animation",description:'The animation used when showing and hiding the modal. Can be either `"none"` or `"fade"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."}]},"ons-navigator":{description:"A component that provides page stack management and navigation. Stack navigation is the most common navigation pattern for mobile apps.\n  When a page is pushed on top of the stack it is displayed with a transition animation. When the user returns to the previous page the top page will be popped from the top of the stack and hidden with an opposite transition animation.\n",attributes:[{id:"page",description:"First page to show when navigator is initialized."},{id:"swipeable",description:'Enable iOS "swipe to pop" feature.'},{id:"swipe-target-width",description:"The width of swipeable area calculated from the edge (in pixels). Use this to enable swipe only when the finger touch on the screen edge."},{id:"swipe-threshold",description:"Specify how much the page needs to be swiped before popping. A value between `0` and `1`."},{id:"animation",description:'Animation name. Available animations are `"slide"`, `"lift"`, `"fade"` and `"none"`.\n  These are platform based animations. For fixed animations, add `"-ios"` or `"-md"` suffix to the animation name. E.g. `"lift-ios"`, `"lift-md"`. Defaults values are `"slide-ios"` and `"fade-md"` depending on the platform.\n'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`"}]},"ons-page":{description:"This component defines the root of each page. If the content is large it will become scrollable.\n  A navigation bar can be added to the top of the page using the `<ons-toolbar>` element.\n",attributes:[{id:"modifier",description:"Specify modifier name to specify custom styles."},{id:"on-infinite-scroll",description:"Path of the function to be executed on infinite scrolling. Example: `app.loadData`. The function receives a done callback that must be called when it's finished."}]},"ons-popover":{description:"A component that displays a popover next to an element. The popover can be used to display extra information about a component or a tooltip.\n  To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createPopover(template)` utility function and the `<ons-template>` tag.\n  Another common way to use the popover is to display a menu when a button on the screen is tapped. For Material Design, popover looks exactly as a dropdown menu.\n",attributes:[{id:"modifier",description:"The appearance of the popover."},{id:"direction",description:'A space separated list of directions. If more than one direction is specified,\n  it will be chosen automatically. Valid directions are `"up"`, `"down"`, `"left"` and `"right"`.\n'},{id:"cancelable",description:"If this attribute is set the popover can be closed by tapping the background or by pressing the back button."},{id:"cover-target",description:"If set the popover will cover the target on the screen."},{id:"animation",description:'The animation used when showing an hiding the popover. Can be either `"none"`, `"default"`, `"fade-ios"` or `"fade-md"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."},{id:"mask-color",description:'Color of the background mask. Default is `"rgba(0, 0, 0, 0.2)"`.'}]},"ons-progress-bar":{description:"The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.\n",attributes:[{id:"modifier",description:"Change the appearance of the progress indicator."},{id:"value",description:"Current progress. Should be a value between 0 and 100."},{id:"secondary-value",description:"Current secondary progress. Should be a value between 0 and 100."},{id:"indeterminate",description:"If this attribute is set, an infinite looping animation will be shown."}]},"ons-progress-circular":{description:"This component displays a circular progress indicator. It can either be used to show how much of a task has been completed or to show a looping animation to indicate that an operation is currently running.\n",attributes:[{id:"modifier",description:"Change the appearance of the progress indicator."},{id:"value",description:"Current progress. Should be a value between 0 and 100."},{id:"secondary-value",description:"Current secondary progress. Should be a value between 0 and 100."},{id:"indeterminate",description:"If this attribute is set, an infinite looping animation will be shown."}]},"ons-pull-hook":{description:"Component that adds **Pull to refresh** functionality to an `<ons-page>` element.\n  It can be used to perform a task when the user pulls down at the top of the page. A common usage is to refresh the data displayed in a page.\n",attributes:[{id:"disabled",description:'If this attribute is set the "pull-to-refresh" functionality is disabled.'},{id:"height",description:'Specify the height of the component. When pulled down further than this value it will switch to the "preaction" state. The default value is "64px".'},{id:"threshold-height",description:'Specify the threshold height. The component automatically switches to the "action" state when pulled further than this value. The default value is "96px". A negative value or a value less than the height will disable this property.'},{id:"fixed-content",description:"If this attribute is set the content of the page will not move when pulling."}]},"ons-radio":{description:'A radio button element. The component will automatically render as a Material Design radio button on Android devices.\n  Most attributes that can be used for a normal `<input type="radio">` element can also be used on the `<ons-radio>` element.\n',attributes:[{id:"input-id",description:'Specify the "id" attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.'}]},"ons-range":{description:'Range input component. Used to display a draggable slider.\n  Works very similar to the `<input type="range">` element.\n',attributes:[{id:"disabled",description:"Whether the element is disabled or not."}]},"ons-ripple":{description:'Adds a Material Design "ripple" effect to an element. The ripple effect will spread from the position where the user taps.\n  Some elements such as `<ons-button>` and `<ons-fab>`  support a `ripple` attribute.\n',attributes:[{id:"color",description:"Color of the ripple effect."},{id:"modifier",description:"The appearance of the ripple effect."},{id:"background",description:"Color of the background."},{id:"size",description:'Sizing of the wave on ripple effect. Set "cover" or "contain". Default is "cover".'},{id:"center",description:"If this attribute presents, change the position of wave effect to center of the target element."},{id:"disabled",description:"If this attribute is set, the ripple effect will be disabled."}]},"ons-row":{description:"Represents a row in the grid system. Use with `<ons-col>` to layout components.",attributes:[{id:"vertical-align",description:"Short hand attribute for aligning vertically. Valid values are top, bottom, and center."}]},"ons-search-input":{description:"A search input element. The component will automatically render as a Material Design search input on Android devices.\n  Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-search-input>` element.\n",attributes:[{id:"input-id",description:'Specify the "id" attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.'}]},"ons-select":{description:'Select component. If you want to place a select with an ID of `my-id` on a page, use `<ons-select select-id="my-id">`.\n  The component will automatically display as a Material Design select on Android.\n  Most attributes that can be used for a normal `<select>` element can also be used on the `<ons-select>` element.\n',attributes:[{id:"autofocus",description:"Element automatically gains focus on page load."},{id:"disabled",description:"Specify if select input should be disabled."},{id:"form",description:"Associate a select element to an existing form on the page, even if not nested."},{id:"multiple",description:"If this attribute is defined, multiple options can be selected at once."},{id:"name",description:"Name the select element, useful for instance if it is part of a form."},{id:"required",description:"Make the select input required for submitting the form it is part of."},{id:"select-id",description:"ID given to the inner select, useful for dynamic manipulation."},{id:"size",description:"How many options are displayed; if there are more than the size then a scroll appears to navigate them."}]},"ons-speed-dial-item":{description:"This component displays the child elements of the Material Design Speed dial component.\n",attributes:[{id:"modifier",description:"The appearance of the component."}]},"ons-speed-dial":{description:"Element that displays a Material Design Speed Dialog component. It is useful when there are more than one primary action that can be performed in a page.\n  The Speed dial looks like a `<ons-fab>` element but will expand a menu when tapped.\n",attributes:[{id:"modifier",description:"The appearance of the component."},{id:"position",description:'Specify the vertical and horizontal position of the component.\n  I.e. to display it in the top right corner specify "right top".\n  Choose from "right", "left", "top" and "bottom".\n'},{id:"direction",description:'Specify the direction the items are displayed. Possible values are "up", "down", "left" and "right".'},{id:"disabled",description:"Specify if button should be disabled."}]},"ons-splitter-content":{description:"The `<ons-splitter-content>` element is used as a child element of `<ons-splitter>`.\n  It contains the main content of the page while `<ons-splitter-side>` contains the list.\n",attributes:[{id:"page",description:"The url of the content page. If this attribute is used the content will be loaded from a `<ons-template>` tag or a remote file.\n  It is also possible to put `<ons-page>` element as a child of the element.\n"}]},"ons-splitter-side":{description:"The `<ons-splitter-side>` element is used as a child element of `<ons-splitter>`.\n  It will be displayed on either the left or right side of the `<ons-splitter-content>` element.\n  It supports two modes: collapsed and split. When it's in collapsed mode it will be hidden from view and can be displayed when the user swipes the screen or taps a button. In split mode the element is always shown. It can be configured to automatically switch between the two modes depending on the screen size.\n",attributes:[{id:"animation",description:"Specify the animation. Use one of `overlay`, `push`, `reveal` or  `default`."},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."},{id:"open-threshold",description:"Specify how much the menu needs to be swiped before opening. A value between `0` and `1`."},{id:"collapse",description:'Specify the collapse behavior. Valid values are `"portrait"`, `"landscape"` or a media query.\n  The strings `"portrait"` and `"landscape"` means the view will collapse when device is in landscape or portrait orientation.\n  If the value is a media query, the view will collapse when the media query resolves to `true`.\n  If the value is not defined, the view always be in `"collapse"` mode.\n'},{id:"swipe-target-width",description:"The width of swipeable area calculated from the edge (in pixels). Use this to enable swipe only when the finger touch on the screen edge."},{id:"width",description:"Can be specified in either pixels or as a percentage, e.g. `90%` or `200px`."},{id:"side",description:'Specify which side of the screen the `<ons-splitter-side>` element is located. Possible values are `"left"` and `"right"`.'},{id:"mode",description:'Current mode. Possible values are `"collapse"` or `"split"`. This attribute is read only.'},{id:"page",description:"The URL of the menu page."},{id:"swipeable",description:"Whether to enable swipe interaction on collapse mode."}]},"ons-splitter":{description:"A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.\n  It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.\n",attributes:[]},"ons-switch":{description:"Switch component. The switch can be toggled both by dragging and tapping.\n  Will automatically displays a Material Design switch on Android devices.\n",attributes:[{id:"modifier",description:"The appearance of the switch."},{id:"disabled",description:"Whether the switch is be disabled."},{id:"checked",description:"Whether the switch is checked."},{id:"input-id",description:'Specify the `id` attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.'}]},"ons-tab":{description:"Represents a tab inside tab bar. Each `<ons-tab>` represents a page.",attributes:[{id:"page",description:"The page that is displayed when the tab is tapped."},{id:"icon",description:"The icon name for the tab. Can specify the same icon name as `<ons-icon>`.\n"},{id:"active-icon",description:"The name of the icon when the tab is active."},{id:"label",description:"The label of the tab item."},{id:"badge",description:"Display a notification badge on top of the tab."},{id:"active",description:"This attribute should be set to the tab that is active by default."}]},"ons-tabbar":{description:"A component to display a tab bar on the bottom of a page. Used with `<ons-tab>` to manage pages using tabs.",attributes:[{id:"animation",description:'Animation name. Available values are `"none"`, `"slide"` and `"fade"`. Default is `"none"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."},{id:"position",description:'Tabbar\'s position. Available values are `"bottom"` and `"top"`. Use `"auto"` to choose position depending on platform (iOS bottom, Android top).'}]},"ons-template":{description:"Define a separate HTML fragment and use as a template.\n  These templates can be loaded as pages in `<ons-navigator>`, `<ons-tabbar>` and `<ons-splitter>`. They can also be used to generate dialogs.\n",attributes:[]},"ons-toast":{description:"The Toast or Snackbar component is useful for displaying dismissable information or simple actions at (normally) the bottom of the page.\n  This component does not block user input, allowing the app to continue its flow. For simple toasts, consider `ons.notification.toast` instead.\n",attributes:[{id:"animation",description:'The animation used when showing and hiding the toast. Can be either `"default"`, `"ascend"` (Android), `"lift"` (iOS), `"fall"`, `"fade"` or `"none"`.'},{id:"animation-options",description:"Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`."}]},"ons-toolbar-button":{description:"Button component for ons-toolbar and ons-bottom-toolbar.",attributes:[{id:"modifier",description:"The appearance of the button."},{id:"disabled",description:"Specify if button should be disabled."}]},"ons-toolbar":{description:"Toolbar component that can be used with navigation.\n  Left, center and right container can be specified by class names.\n  This component will automatically displays as a Material Design toolbar when running on Android devices.\n",attributes:[{id:"inline",description:"Display the toolbar as an inline element."},{id:"modifier",description:"The appearance of the toolbar."}]}});